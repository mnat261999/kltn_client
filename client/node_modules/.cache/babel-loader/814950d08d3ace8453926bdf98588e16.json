{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kltn\\\\test\\\\social-media\\\\client\\\\src\\\\components\\\\PostEdit\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport UserLayout from \"../../hoc/user\";\nimport { withRouter } from \"react-router-dom\";\nimport FormField from \"../ultils/Form/FormField\";\nimport { populateOptionFields, update, ifFormValid, generateData, resetFields } from \"../ultils/Form/FormActions\";\nimport FileUpload from \"../ultils/FileUpload\";\nimport \"./postEdit.scss\";\nimport \"react-autocomplete-input/dist/bundle.css\";\nimport { getAllTags, getUserTag } from \"../../actions/tag_actions\";\nimport { clearProduct, updatePost } from \"../../actions/product_actions\";\nimport SearchLocationInput from \"../SearchLocationInput/SearchLocationInput\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nclass PostEdit extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editlocation: false,\n      inputValue: \"\",\n      formError: false,\n      formSuccess: false,\n      formData: {\n        description: {\n          element: \"description\",\n          value: \"\",\n          config: {\n            placeholder: \"Nói gì đó về bài viết này.....\",\n            label: \"Mô tả\",\n            name: \"description\",\n            options: []\n          },\n          validation: {\n            required: false\n          },\n          valid: true,\n          touched: false,\n          validationMessage: \"\",\n          showlabel: false\n        },\n        userTag: {\n          element: \"userTag\",\n          value: \"\",\n          config: {\n            placeholder: \"Gắn thẻ bạn bè\",\n            label: \"Gắn thẻ\",\n            name: \"userTag\",\n            options: []\n          },\n          validation: {\n            required: false\n          },\n          valid: true,\n          touched: false,\n          validationMessage: \"\",\n          showlabel: false\n        },\n        locationInput: {\n          element: \"locationInput\",\n          value: \"\",\n          config: {\n            placeholder: \"Thêm vị trí\",\n            label: \"Vị trí\",\n            name: \"location\",\n            options: []\n          },\n          validation: {\n            required: false\n          },\n          valid: true,\n          touched: false,\n          validationMessage: \"\",\n          showlabel: false\n        }\n      }\n    };\n\n    this.updateFields = newFormData => {\n      this.setState({\n        formData: newFormData\n      });\n    };\n\n    this.updateForm = element => {\n      const newFormdata = update(element, this.state.formData, \"posts\");\n      this.setState({\n        formError: false,\n        formData: newFormdata\n      });\n    };\n\n    this.updateFields = newFormData => {\n      this.setState({\n        formData: newFormData\n      });\n    };\n\n    this.emojiToggle = () => {\n      this.setState({\n        emojiPicker: !this.state.emojiPicker\n      });\n    };\n\n    this.onEmojiClick = (event, emojiObject) => {\n      this.setState({\n        emojiObject: emojiObject\n      });\n    };\n\n    this.submitForm = event => {\n      event.preventDefault();\n      this.state.formData.locationInput.value = document.getElementById(\"input_value\").value;\n      let data = generateData(this.state.formData, \"posts\");\n      let formIsValid = ifFormValid(this.state.formData, \"posts\");\n      let dataToSubmit = { ...data\n      };\n      dataToSubmit.postId = this.props.postId;\n      dataToSubmit.tags = this.findHashtags(data.description);\n      dataToSubmit.userTag = this.findUserTag(data.userTag);\n\n      if (formIsValid) {\n        console.log(dataToSubmit);\n        this.props.dispatch(updatePost(dataToSubmit, this.props.ActionType)).then(() => {\n          console.log(this.props.products);\n\n          if (this.props.products.updatePost) {\n            this.props.close();\n            this.props.handleSnackBar(\"Đã chỉnh sửa bài viết\", true);\n          } else {\n            this.setState({\n              formError: true\n            });\n            this.props.handleSnackBar(\"Đã xảy ra lỗi\", false);\n          }\n        });\n      } else {\n        this.setState({\n          formError: true\n        });\n      }\n    };\n\n    this.resetFieldHandler = () => {\n      const newFormData = resetFields(this.state.formData, \"posts\");\n      this.setState({\n        formSuccess: true\n      });\n      setTimeout(() => {\n        this.setState({\n          formSuccess: false\n        }, () => {\n          this.props.dispatch(clearProduct());\n        });\n      }, 3000);\n    };\n  }\n\n  populateInput(formData, description, userTags) {\n    const newFormdata = { ...formData\n    };\n    const newDescription = { ...newFormdata[\"description\"]\n    };\n    const newUsertag = { ...newFormdata[\"userTag\"]\n    };\n    newDescription.value = description;\n    let usertag = \"\";\n    userTags.forEach(item => {\n      usertag += \"@\" + item.userName + \" \";\n    });\n    newUsertag.value = usertag;\n    newFormdata[\"description\"] = newDescription;\n    newFormdata[\"userTag\"] = newUsertag;\n    this.setState({\n      formData: newFormdata\n    });\n  }\n\n  componentDidMount() {\n    const formData = this.state.formData; //Gọi API lấy danh sách thẻ\n\n    this.props.dispatch(getAllTags()).then(response => {\n      const newFormData = populateOptionFields(formData, this.props.tags.allTags, \"description\");\n      this.updateFields(newFormData);\n    });\n    this.props.dispatch(getUserTag()).then(response => {\n      const newFormData = populateOptionFields(formData, this.props.tags.userTags, \"userTag\");\n      this.updateFields(newFormData);\n      this.populateInput(formData, this.props.description, this.props.userTag);\n    });\n  }\n\n  findHashtags(Text) {\n    var regexp = /\\B\\#\\w\\w+\\b/g;\n    let result = Text.match(regexp);\n\n    if (result) {\n      let tags = [];\n      result.forEach(item => {\n        tags.push(item.slice(1));\n      });\n      return tags;\n    } else {\n      return [];\n    }\n  }\n\n  findUserTag(Text) {\n    var regexp = /\\B\\@\\w\\w+\\b/g;\n    let result = Text.match(regexp);\n\n    if (result) {\n      let userTag = [];\n      result.forEach(item => {\n        userTag.push(item.slice(1));\n      });\n      return userTag;\n    } else {\n      return [];\n    }\n  }\n\n  render() {\n    const props = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit_post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      class: \"create_post_form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-12 no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }\n    }, this.state.formData.description.value == \"\" ? /*#__PURE__*/React.createElement(Skeleton, {\n      variant: \"rect\",\n      width: \"100%\",\n      height: 50,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(FormField, {\n      id: \"description\",\n      change: element => this.updateForm(element),\n      formData: this.state.formData.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }\n    }), this.state.formData.description.value == \"\" ? /*#__PURE__*/React.createElement(Skeleton, {\n      variant: \"rect\",\n      width: \"100%\",\n      height: 50,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"location_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }\n    }, this.state.editlocation ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit_location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(SearchLocationInput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      onClick: () => this.setState({\n        editlocation: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 23\n      }\n    }, \"H\\u1EE7y\")) : this.props.locationName ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit_location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-location-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.props.locationName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"h5\", {\n      onClick: () => this.setState({\n        editlocation: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 23\n      }\n    }, \"S\\u1EEDa\")) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit_location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(SearchLocationInput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 15\n      }\n    }, this.state.formData.description.value == \"\" ? /*#__PURE__*/React.createElement(Skeleton, {\n      variant: \"rect\",\n      width: \"100%\",\n      height: 50,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormField, {\n      id: \"userTag\",\n      change: element => this.updateForm(element),\n      formData: this.state.formData.userTag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 21\n      }\n    }))), this.state.formData.description.value == \"\" ? /*#__PURE__*/React.createElement(Skeleton, {\n      variant: \"rect\",\n      width: 300,\n      height: 50,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button_wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"cancel_button\",\n      onClick: () => {\n        this.props.close();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 19\n      }\n    }, \"H\\u1EE7y\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"create_button\",\n      onClick: event => {\n        this.submitForm(event);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 19\n      }\n    }, \"L\\u01B0u\")), this.state.formError ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 17\n      }\n    }, \"H\\xE3y th\\xEAm \\u1EA3nh \\u0111\\u1EC3 \\u0111\\u0103ng b\\xE0i nh\\xE9 :( \") : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    tags: state.tags,\n    products: state.products\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(PostEdit));","map":{"version":3,"sources":["D:/Kltn/test/social-media/client/src/components/PostEdit/index.js"],"names":["React","Component","connect","UserLayout","withRouter","FormField","populateOptionFields","update","ifFormValid","generateData","resetFields","FileUpload","getAllTags","getUserTag","clearProduct","updatePost","SearchLocationInput","Skeleton","MuiAlert","PostEdit","state","editlocation","inputValue","formError","formSuccess","formData","description","element","value","config","placeholder","label","name","options","validation","required","valid","touched","validationMessage","showlabel","userTag","locationInput","updateFields","newFormData","setState","updateForm","newFormdata","emojiToggle","emojiPicker","onEmojiClick","event","emojiObject","submitForm","preventDefault","document","getElementById","data","formIsValid","dataToSubmit","postId","props","tags","findHashtags","findUserTag","console","log","dispatch","ActionType","then","products","close","handleSnackBar","resetFieldHandler","setTimeout","populateInput","userTags","newDescription","newUsertag","usertag","forEach","item","userName","componentDidMount","response","allTags","Text","regexp","result","match","push","slice","render","locationName","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport UserLayout from \"../../hoc/user\";\nimport { withRouter } from \"react-router-dom\";\nimport FormField from \"../ultils/Form/FormField\";\nimport {\n  populateOptionFields,\n  update,\n  ifFormValid,\n  generateData,\n  resetFields,\n} from \"../ultils/Form/FormActions\";\nimport FileUpload from \"../ultils/FileUpload\";\nimport \"./postEdit.scss\";\nimport \"react-autocomplete-input/dist/bundle.css\";\nimport { getAllTags, getUserTag } from \"../../actions/tag_actions\";\nimport { clearProduct, updatePost } from \"../../actions/product_actions\";\nimport SearchLocationInput from \"../SearchLocationInput/SearchLocationInput\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nclass PostEdit extends Component {\n  state = {\n    editlocation: false,\n    inputValue: \"\",\n    formError: false,\n    formSuccess: false,\n    formData: {\n      description: {\n        element: \"description\",\n        value: \"\",\n        config: {\n          placeholder: \"Nói gì đó về bài viết này.....\",\n          label: \"Mô tả\",\n          name: \"description\",\n          options: [],\n        },\n        validation: {\n          required: false,\n        },\n        valid: true,\n        touched: false,\n        validationMessage: \"\",\n        showlabel: false,\n      },\n      userTag: {\n        element: \"userTag\",\n        value: \"\",\n        config: {\n          placeholder: \"Gắn thẻ bạn bè\",\n          label: \"Gắn thẻ\",\n          name: \"userTag\",\n\n          options: [],\n        },\n        validation: {\n          required: false,\n        },\n        valid: true,\n        touched: false,\n        validationMessage: \"\",\n        showlabel: false,\n      },\n      locationInput: {\n        element: \"locationInput\",\n        value: \"\",\n        config: {\n          placeholder: \"Thêm vị trí\",\n          label: \"Vị trí\",\n          name: \"location\",\n          options: [],\n        },\n        validation: {\n          required: false,\n        },\n        valid: true,\n        touched: false,\n        validationMessage: \"\",\n        showlabel: false,\n      },\n    },\n  };\n\n  populateInput(formData, description, userTags) {\n    const newFormdata = { ...formData };\n\n    const newDescription = {\n      ...newFormdata[\"description\"],\n    };\n\n    const newUsertag = {\n      ...newFormdata[\"userTag\"],\n    };\n\n    newDescription.value = description;\n\n    let usertag = \"\";\n    userTags.forEach((item) => {\n      usertag += \"@\" + item.userName + \" \";\n    });\n\n    newUsertag.value = usertag;\n\n    newFormdata[\"description\"] = newDescription;\n    newFormdata[\"userTag\"] = newUsertag;\n\n    this.setState({ formData: newFormdata });\n  }\n\n  updateFields = (newFormData) => {\n    this.setState({\n      formData: newFormData,\n    });\n  };\n\n  updateForm = (element) => {\n    const newFormdata = update(element, this.state.formData, \"posts\");\n    this.setState({\n      formError: false,\n      formData: newFormdata,\n    });\n  };\n\n  updateFields = (newFormData) => {\n    this.setState({\n      formData: newFormData,\n    });\n  };\n\n  componentDidMount() {\n    const formData = this.state.formData;\n    //Gọi API lấy danh sách thẻ\n    this.props.dispatch(getAllTags()).then((response) => {\n      const newFormData = populateOptionFields(\n        formData,\n        this.props.tags.allTags,\n        \"description\"\n      );\n      this.updateFields(newFormData);\n    });\n    this.props.dispatch(getUserTag()).then((response) => {\n      const newFormData = populateOptionFields(\n        formData,\n        this.props.tags.userTags,\n        \"userTag\"\n      );\n      this.updateFields(newFormData);\n      this.populateInput(formData, this.props.description, this.props.userTag);\n    });\n  }\n\n  emojiToggle = () => {\n    this.setState({ emojiPicker: !this.state.emojiPicker });\n  };\n\n  onEmojiClick = (event, emojiObject) => {\n    this.setState({ emojiObject: emojiObject });\n  };\n\n  findHashtags(Text) {\n    var regexp = /\\B\\#\\w\\w+\\b/g;\n    let result = Text.match(regexp);\n\n    if (result) {\n      let tags = [];\n      result.forEach((item) => {\n        tags.push(item.slice(1));\n      });\n      return tags;\n    } else {\n      return [];\n    }\n  }\n\n  findUserTag(Text) {\n    var regexp = /\\B\\@\\w\\w+\\b/g;\n    let result = Text.match(regexp);\n\n    if (result) {\n      let userTag = [];\n      result.forEach((item) => {\n        userTag.push(item.slice(1));\n      });\n      return userTag;\n    } else {\n      return [];\n    }\n  }\n\n  submitForm = (event) => {\n    event.preventDefault();\n    this.state.formData.locationInput.value =\n      document.getElementById(\"input_value\").value;\n    let data = generateData(this.state.formData, \"posts\");\n    let formIsValid = ifFormValid(this.state.formData, \"posts\");\n\n    let dataToSubmit = { ...data };\n    dataToSubmit.postId = this.props.postId;\n    dataToSubmit.tags = this.findHashtags(data.description);\n    dataToSubmit.userTag = this.findUserTag(data.userTag);\n\n    if (formIsValid) {\n      console.log(dataToSubmit);\n      this.props\n        .dispatch(updatePost(dataToSubmit, this.props.ActionType))\n        .then(() => {\n          console.log(this.props.products);\n          if (this.props.products.updatePost) {\n            this.props.close();\n            this.props.handleSnackBar(\"Đã chỉnh sửa bài viết\", true);\n          } else {\n            this.setState({ formError: true });\n            this.props.handleSnackBar(\"Đã xảy ra lỗi\", false);\n          }\n        });\n    } else {\n      this.setState({\n        formError: true,\n      });\n    }\n  };\n\n  resetFieldHandler = () => {\n    const newFormData = resetFields(this.state.formData, \"posts\");\n    this.setState({\n      formSuccess: true,\n    });\n    setTimeout(() => {\n      this.setState(\n        {\n          formSuccess: false,\n        },\n        () => {\n          this.props.dispatch(clearProduct());\n        }\n      );\n    }, 3000);\n  };\n\n  render() {\n    const props = this.props;\n    return (\n      <div className=\"edit_post\">\n        <form class=\"create_post_form\">\n          <div className=\"row no-gutters\">\n            <div className=\"col-xl-12 no-gutters\">\n              {this.state.formData.description.value == \"\" ? (\n                <Skeleton variant=\"rect\" width={\"100%\"} height={50} />\n              ) : (\n                <FormField\n                  id={\"description\"}\n                  change={(element) => this.updateForm(element)}\n                  formData={this.state.formData.description}\n                />\n              )}\n              {this.state.formData.description.value == \"\" ? (\n                <Skeleton variant=\"rect\" width={\"100%\"} height={50} />\n              ) : (\n                <div className=\"location_container\">\n                  {this.state.editlocation ? (\n                    <div className=\"edit_location\">\n                      <SearchLocationInput></SearchLocationInput>\n                      <h5\n                        onClick={() => this.setState({ editlocation: false })}\n                      >\n                        Hủy\n                      </h5>\n                    </div>\n                  ) : this.props.locationName ? (\n                    <div className=\"edit_location\">\n                      <div className=\"search-location-input\">\n                        <input value={this.props.locationName} />\n                      </div>\n\n                      <h5 onClick={() => this.setState({ editlocation: true })}>\n                        Sửa\n                      </h5>\n                    </div>\n                  ) : (\n                    <div className=\"edit_location\">\n                      <SearchLocationInput></SearchLocationInput>\n                      {/* <h5 onClick={() => this.setState({ editlocation: false })}>Hủy</h5> */}\n                    </div>\n                  )}\n                </div>\n              )}\n              <div className=\"field_container\">\n                {this.state.formData.description.value == \"\" ? (\n                  <Skeleton variant=\"rect\" width={\"100%\"} height={50} />\n                ) : (\n                  <div>\n                    <FormField\n                      id={\"userTag\"}\n                      change={(element) => this.updateForm(element)}\n                      formData={this.state.formData.userTag}\n                    />\n                  </div>\n                )}\n              </div>\n              {this.state.formData.description.value == \"\" ? (\n                <Skeleton variant=\"rect\" width={300} height={50} />\n              ) : (\n                <div className=\"button_wrapper\">\n                  <button\n                    className=\"cancel_button\"\n                    onClick={() => {\n                      this.props.close();\n                    }}\n                  >\n                    Hủy\n                  </button>\n                  <button\n                    className=\"create_button\"\n                    onClick={(event) => {\n                      this.submitForm(event);\n                    }}\n                  >\n                    Lưu\n                  </button>\n                </div>\n              )}\n              {this.state.formError ? (\n                <p>Hãy thêm ảnh để đăng bài nhé :( </p>\n              ) : (\n                <p></p>\n              )}\n            </div>\n          </div>\n        </form>\n        {/* <div>\n                        <SearchLocationInput onChange={() => {}}/>\n                    </div> */}\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    tags: state.tags,\n    products: state.products,\n  };\n}\nexport default connect(mapStateToProps)(withRouter(PostEdit));\n"]},"metadata":{},"sourceType":"module"}