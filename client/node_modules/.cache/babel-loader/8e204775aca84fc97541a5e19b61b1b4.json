{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kltn\\\\test\\\\social-media\\\\client\\\\src\\\\components\\\\Resetpass\\\\index.js\";\nimport FormField from '../ultils/Form/FormField';\nimport axios from 'axios';\nimport { USER_SERVER } from '../ultils/mise';\nimport { update, ifFormValid, generateData } from '../ultils/Form/FormActions';\nimport React, { Component } from 'react';\nimport './index.scss';\n\nclass ResetUser extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formError: false,\n      formSuccess: '',\n      formData: {\n        email: {\n          element: 'input',\n          value: '',\n          config: {\n            label: 'Email',\n            name: 'email_input',\n            type: 'email',\n            placeholder: 'Nhập email của bạn'\n          },\n          validation: {\n            required: true,\n            email: true\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        }\n      }\n    };\n\n    this.updateForm = element => {\n      //Hàm update được viết trong FormActions.js\n      const newFormdata = update(element, this.state.formData, 'reset_email'); //Cập nhật lại State\n\n      this.setState({\n        formError: false,\n        formData: newFormdata\n      });\n    };\n\n    this.submitForm = event => {\n      event.preventDefault();\n      let dataToSubmit = generateData(this.state.formData, 'reset_email');\n      let formIsValid = ifFormValid(this.state.formData, 'reset_email');\n\n      if (formIsValid) {\n        //console.log(dataToSubmit)\n        axios.post(`${USER_SERVER}/reset_user`, dataToSubmit).then(response => {\n          if (response.data.success) this.setState({\n            formSuccess: true,\n            formError: false\n          });\n        });\n      } else {\n        this.setState({\n          formError: true,\n          formSuccess: false\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"resetPass\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"banner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signin__logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"logo\",\n      src: require('../../asset/login-page/logo2x.png'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"stunning_text\",\n      src: require('../../asset/login-page/stun2x.png'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, \"Reset password\"), /*#__PURE__*/React.createElement(FormField, {\n      id: 'email',\n      formData: this.state.formData.email,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"signin__button\",\n      onClick: event => {\n        this.submitForm(event);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, \"Send Email to reset password\"), this.state.formSuccess ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }\n    }, \"Done, check your email\") : null, this.state.formError ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 33\n      }\n    }, \"Please check your data\") : null)));\n  }\n\n}\n\nexport default ResetUser;","map":{"version":3,"sources":["D:/Kltn/test/social-media/client/src/components/Resetpass/index.js"],"names":["FormField","axios","USER_SERVER","update","ifFormValid","generateData","React","Component","ResetUser","state","formError","formSuccess","formData","email","element","value","config","label","name","type","placeholder","validation","required","valid","touched","validationMessage","showlabel","updateForm","newFormdata","setState","submitForm","event","preventDefault","dataToSubmit","formIsValid","post","then","response","data","success","render","require"],"mappings":"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","sourcesContent":["import FormField from '../ultils/Form/FormField';\r\nimport axios from 'axios'\r\nimport { USER_SERVER } from '../ultils/mise';\r\nimport { update, ifFormValid, generateData } from '../ultils/Form/FormActions';\r\nimport React, { Component } from 'react';\r\nimport './index.scss';\r\n\r\nclass ResetUser extends Component {\r\n    state = {\r\n        formError: false,\r\n        formSuccess: '',\r\n        formData: {\r\n            email: {\r\n                element: 'input',\r\n                value: '',\r\n                config: {\r\n                    label: 'Email',\r\n                    name: 'email_input',\r\n                    type: 'email',\r\n                    placeholder: 'Nhập email của bạn'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    email: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false\r\n            }\r\n        }\r\n    }\r\n    updateForm = (element) => {\r\n        //Hàm update được viết trong FormActions.js\r\n        const newFormdata = update(element, this.state.formData, 'reset_email');\r\n        //Cập nhật lại State\r\n        this.setState({\r\n            formError: false,\r\n            formData: newFormdata\r\n        });\r\n\r\n    }\r\n    submitForm = (event) => {\r\n        event.preventDefault();\r\n\r\n        let dataToSubmit = generateData(this.state.formData, 'reset_email');\r\n\r\n        let formIsValid = ifFormValid(this.state.formData, 'reset_email');\r\n\r\n        if (formIsValid) {\r\n            //console.log(dataToSubmit)\r\n            axios.post(`${USER_SERVER}/reset_user`, dataToSubmit)\r\n                .then(response => {\r\n                    if (response.data.success)\r\n                        this.setState({\r\n                            formSuccess: true,\r\n                            formError: false\r\n                        })\r\n                })\r\n        }\r\n        else {\r\n            this.setState({\r\n                formError: true,\r\n                formSuccess: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"resetPass\">\r\n                <div className=\"banner\">\r\n                    <div className='signin__logo'>\r\n                        <img className=\"logo\" src={require('../../asset/login-page/logo2x.png')} />\r\n                        <img className=\"stunning_text\" src={require('../../asset/login-page/stun2x.png')} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"content\">\r\n                  \r\n                    <div className=\"wrapper\">\r\n                        <div className=\"title\">Reset password</div>\r\n                        <FormField\r\n                            id={'email'}\r\n                            formData={this.state.formData.email}\r\n                            change={(element) => this.updateForm(element)}\r\n                        />\r\n                        <button className='signin__button' onClick={(event) => { this.submitForm(event) }}>\r\n                            Send Email to reset password\r\n                        </button>\r\n                        {\r\n                            this.state.formSuccess ?\r\n                                <div className=\"message\">\r\n                                    Done, check your email\r\n                                </div>\r\n                                : null\r\n                        }\r\n                        {\r\n                            this.state.formError ?\r\n                                <div className=\"message\">\r\n                                    Please check your data\r\n                                </div>\r\n                                : null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResetUser;"]},"metadata":{},"sourceType":"module"}