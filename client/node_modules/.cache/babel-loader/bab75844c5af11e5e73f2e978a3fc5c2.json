{"ast":null,"code":"import React, { memo, useMemo, useCallback, useState, Fragment, forwardRef, useRef, useEffect } from 'react';\nimport { useTheme, lineCurvePropType, blendModePropType, motionPropTypes, defsPropTypes, curveFromProp, useValueFormatter, useMotionConfig, useAnimatedPath, getLabelGenerator, DotsItem, withContainer, useDimensions, CartesianMarkers, bindDefs, SvgWrapper, ResponsiveWrapper, getRelativeCursor, isCursorInRect } from '@nivo/core';\nimport { ordinalColorsPropType, useOrdinalColorScale, useInheritedColor } from '@nivo/colors';\nimport { axisPropType, Grid, Axes, renderGridLinesToCanvas, renderAxesToCanvas } from '@nivo/axes';\nimport { LegendPropShape, BoxLegendSvg, renderLegendToCanvas } from '@nivo/legends';\nimport { BasicTooltip, TableTooltip, Chip, useTooltip, Crosshair } from '@nivo/tooltip';\nimport { line, area } from 'd3-shape';\nimport { scalePropType, computeXYScalesForSeries } from '@nivo/scales';\nimport PropTypes from 'prop-types';\nimport { useSpring, animated } from '@react-spring/web';\nimport { Mesh as Mesh$2, useVoronoiMesh, renderVoronoiToCanvas, renderVoronoiCellToCanvas } from '@nivo/voronoi';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nvar LinePointTooltip = function LinePointTooltip(_ref) {\n  var point = _ref.point;\n  return React.createElement(BasicTooltip, {\n    id: React.createElement(\"span\", null, \"x: \", React.createElement(\"strong\", null, point.data.xFormatted), \", y:\", ' ', React.createElement(\"strong\", null, point.data.yFormatted)),\n    enableChip: true,\n    color: point.serieColor\n  });\n};\n\nvar PointTooltip = memo(LinePointTooltip);\n\nvar SliceTooltip = function SliceTooltip(_ref) {\n  var slice = _ref.slice,\n      axis = _ref.axis;\n  var theme = useTheme();\n  var otherAxis = axis === 'x' ? 'y' : 'x';\n  return React.createElement(TableTooltip, {\n    rows: slice.points.map(function (point) {\n      return [React.createElement(Chip, {\n        key: \"chip\",\n        color: point.serieColor,\n        style: theme.tooltip.chip\n      }), point.serieId, React.createElement(\"span\", {\n        key: \"value\",\n        style: theme.tooltip.tableCellValue\n      }, point.data[\"\".concat(otherAxis, \"Formatted\")])];\n    })\n  });\n};\n\nvar SliceTooltip$1 = memo(SliceTooltip);\nvar commonPropTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    data: PropTypes.arrayOf(PropTypes.shape({\n      x: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)]),\n      y: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n    })).isRequired\n  })).isRequired,\n  xScale: scalePropType.isRequired,\n  xFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  yScale: scalePropType.isRequired,\n  yFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  layers: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.oneOf(['grid', 'markers', 'axes', 'areas', 'crosshair', 'lines', 'slices', 'points', 'mesh', 'legends']), PropTypes.func])).isRequired,\n  curve: lineCurvePropType.isRequired,\n  axisTop: axisPropType,\n  axisRight: axisPropType,\n  axisBottom: axisPropType,\n  axisLeft: axisPropType,\n  enableGridX: PropTypes.bool.isRequired,\n  enableGridY: PropTypes.bool.isRequired,\n  gridXValues: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)]))]),\n  gridYValues: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)]))]),\n  enablePoints: PropTypes.bool.isRequired,\n  pointSymbol: PropTypes.func,\n  pointSize: PropTypes.number.isRequired,\n  pointColor: PropTypes.any.isRequired,\n  pointBorderWidth: PropTypes.number.isRequired,\n  pointBorderColor: PropTypes.any.isRequired,\n  enablePointLabel: PropTypes.bool.isRequired,\n  pointLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n  markers: PropTypes.arrayOf(PropTypes.shape({\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)]).isRequired,\n    style: PropTypes.object\n  })),\n  colors: ordinalColorsPropType.isRequired,\n  enableArea: PropTypes.bool.isRequired,\n  areaOpacity: PropTypes.number.isRequired,\n  areaBlendMode: blendModePropType.isRequired,\n  areaBaselineValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)]).isRequired,\n  lineWidth: PropTypes.number.isRequired,\n  legends: PropTypes.arrayOf(PropTypes.shape(LegendPropShape)).isRequired,\n  isInteractive: PropTypes.bool.isRequired,\n  debugMesh: PropTypes.bool.isRequired,\n  tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n  enableSlices: PropTypes.oneOf(['x', 'y', false]).isRequired,\n  debugSlices: PropTypes.bool.isRequired,\n  sliceTooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n  enableCrosshair: PropTypes.bool.isRequired,\n  crosshairType: PropTypes.string.isRequired\n};\n\nvar LinePropTypes = _objectSpread2(_objectSpread2(_objectSpread2({}, commonPropTypes), {}, {\n  enablePointLabel: PropTypes.bool.isRequired,\n  role: PropTypes.string.isRequired,\n  useMesh: PropTypes.bool.isRequired\n}, motionPropTypes), defsPropTypes);\n\nvar LineCanvasPropTypes = _objectSpread2({\n  pixelRatio: PropTypes.number.isRequired\n}, commonPropTypes);\n\nvar commonDefaultProps = {\n  curve: 'linear',\n  xScale: {\n    type: 'point'\n  },\n  yScale: {\n    type: 'linear',\n    min: 0,\n    max: 'auto'\n  },\n  layers: ['grid', 'markers', 'axes', 'areas', 'crosshair', 'lines', 'points', 'slices', 'mesh', 'legends'],\n  axisBottom: {},\n  axisLeft: {},\n  enableGridX: true,\n  enableGridY: true,\n  enablePoints: true,\n  pointSize: 6,\n  pointColor: {\n    from: 'color'\n  },\n  pointBorderWidth: 0,\n  pointBorderColor: {\n    theme: 'background'\n  },\n  enablePointLabel: false,\n  pointLabel: 'yFormatted',\n  colors: {\n    scheme: 'nivo'\n  },\n  enableArea: false,\n  areaBaselineValue: 0,\n  areaOpacity: 0.2,\n  areaBlendMode: 'normal',\n  lineWidth: 2,\n  legends: [],\n  isInteractive: true,\n  tooltip: PointTooltip,\n  enableSlices: false,\n  debugSlices: false,\n  sliceTooltip: SliceTooltip$1,\n  debugMesh: false,\n  enableCrosshair: true,\n  crosshairType: 'bottom-left'\n};\n\nvar LineDefaultProps = _objectSpread2(_objectSpread2({}, commonDefaultProps), {}, {\n  enablePointLabel: false,\n  useMesh: false,\n  animate: true,\n  motionConfig: 'gentle',\n  defs: [],\n  fill: [],\n  role: 'img'\n});\n\nvar LineCanvasDefaultProps = _objectSpread2(_objectSpread2({}, commonDefaultProps), {}, {\n  pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1\n});\n\nvar useLineGenerator = function useLineGenerator(_ref) {\n  var curve = _ref.curve;\n  return useMemo(function () {\n    return line().defined(function (d) {\n      return d.x !== null && d.y !== null;\n    }).x(function (d) {\n      return d.x;\n    }).y(function (d) {\n      return d.y;\n    }).curve(curveFromProp(curve));\n  }, [curve]);\n};\n\nvar useAreaGenerator = function useAreaGenerator(_ref2) {\n  var curve = _ref2.curve,\n      yScale = _ref2.yScale,\n      areaBaselineValue = _ref2.areaBaselineValue;\n  return useMemo(function () {\n    return area().defined(function (d) {\n      return d.x !== null && d.y !== null;\n    }).x(function (d) {\n      return d.x;\n    }).y1(function (d) {\n      return d.y;\n    }).curve(curveFromProp(curve)).y0(yScale(areaBaselineValue));\n  }, [curve, yScale, areaBaselineValue]);\n};\n\nvar usePoints = function usePoints(_ref3) {\n  var series = _ref3.series,\n      getPointColor = _ref3.getPointColor,\n      getPointBorderColor = _ref3.getPointBorderColor,\n      formatX = _ref3.formatX,\n      formatY = _ref3.formatY;\n  return useMemo(function () {\n    return series.reduce(function (acc, serie) {\n      return [].concat(_toConsumableArray(acc), _toConsumableArray(serie.data.filter(function (datum) {\n        return datum.position.x !== null && datum.position.y !== null;\n      }).map(function (datum, i) {\n        var point = {\n          id: \"\".concat(serie.id, \".\").concat(i),\n          index: acc.length + i,\n          serieId: serie.id,\n          serieColor: serie.color,\n          x: datum.position.x,\n          y: datum.position.y\n        };\n        point.color = getPointColor(serie);\n        point.borderColor = getPointBorderColor(point);\n        point.data = _objectSpread2(_objectSpread2({}, datum.data), {}, {\n          xFormatted: formatX(datum.data.x),\n          yFormatted: formatY(datum.data.y)\n        });\n        return point;\n      })));\n    }, []);\n  }, [series, getPointColor, getPointBorderColor, formatX, formatY]);\n};\n\nvar useSlices = function useSlices(_ref4) {\n  var enableSlices = _ref4.enableSlices,\n      points = _ref4.points,\n      width = _ref4.width,\n      height = _ref4.height;\n  return useMemo(function () {\n    if (enableSlices === false) return [];\n\n    if (enableSlices === 'x') {\n      var map = new Map();\n      points.forEach(function (point) {\n        if (point.data.x === null || point.data.y === null) return;\n        if (!map.has(point.x)) map.set(point.x, [point]);else map.get(point.x).push(point);\n      });\n      return Array.from(map.entries()).sort(function (a, b) {\n        return a[0] - b[0];\n      }).map(function (_ref5, i, slices) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            x = _ref6[0],\n            slicePoints = _ref6[1];\n\n        var prevSlice = slices[i - 1];\n        var nextSlice = slices[i + 1];\n        var x0;\n        if (!prevSlice) x0 = x;else x0 = x - (x - prevSlice[0]) / 2;\n        var sliceWidth;\n        if (!nextSlice) sliceWidth = width - x0;else sliceWidth = x - x0 + (nextSlice[0] - x) / 2;\n        return {\n          id: x,\n          x0: x0,\n          x: x,\n          y0: 0,\n          y: 0,\n          width: sliceWidth,\n          height: height,\n          points: slicePoints.reverse()\n        };\n      });\n    } else if (enableSlices === 'y') {\n      var _map = new Map();\n\n      points.forEach(function (point) {\n        if (point.data.x === null || point.data.y === null) return;\n        if (!_map.has(point.y)) _map.set(point.y, [point]);else _map.get(point.y).push(point);\n      });\n      return Array.from(_map.entries()).sort(function (a, b) {\n        return a[0] - b[0];\n      }).map(function (_ref7, i, slices) {\n        var _ref8 = _slicedToArray(_ref7, 2),\n            y = _ref8[0],\n            slicePoints = _ref8[1];\n\n        var prevSlice = slices[i - 1];\n        var nextSlice = slices[i + 1];\n        var y0;\n        if (!prevSlice) y0 = y;else y0 = y - (y - prevSlice[0]) / 2;\n        var sliceHeight;\n        if (!nextSlice) sliceHeight = height - y0;else sliceHeight = y - y0 + (nextSlice[0] - y) / 2;\n        return {\n          id: y,\n          x0: 0,\n          x: 0,\n          y0: y0,\n          y: y,\n          width: width,\n          height: sliceHeight,\n          points: slicePoints.reverse()\n        };\n      });\n    }\n  }, [enableSlices, points]);\n};\n\nvar useLine = function useLine(_ref9) {\n  var data = _ref9.data,\n      _ref9$xScale = _ref9.xScale,\n      xScaleSpec = _ref9$xScale === void 0 ? LineDefaultProps.xScale : _ref9$xScale,\n      xFormat = _ref9.xFormat,\n      _ref9$yScale = _ref9.yScale,\n      yScaleSpec = _ref9$yScale === void 0 ? LineDefaultProps.yScale : _ref9$yScale,\n      yFormat = _ref9.yFormat,\n      width = _ref9.width,\n      height = _ref9.height,\n      _ref9$colors = _ref9.colors,\n      colors = _ref9$colors === void 0 ? LineDefaultProps.colors : _ref9$colors,\n      _ref9$curve = _ref9.curve,\n      curve = _ref9$curve === void 0 ? LineDefaultProps.curve : _ref9$curve,\n      _ref9$areaBaselineVal = _ref9.areaBaselineValue,\n      areaBaselineValue = _ref9$areaBaselineVal === void 0 ? LineDefaultProps.areaBaselineValue : _ref9$areaBaselineVal,\n      _ref9$pointColor = _ref9.pointColor,\n      pointColor = _ref9$pointColor === void 0 ? LineDefaultProps.pointColor : _ref9$pointColor,\n      _ref9$pointBorderColo = _ref9.pointBorderColor,\n      pointBorderColor = _ref9$pointBorderColo === void 0 ? LineDefaultProps.pointBorderColor : _ref9$pointBorderColo,\n      _ref9$enableSlices = _ref9.enableSlices,\n      enableSlices = _ref9$enableSlices === void 0 ? LineDefaultProps.enableSlicesTooltip : _ref9$enableSlices;\n  var formatX = useValueFormatter(xFormat);\n  var formatY = useValueFormatter(yFormat);\n  var getColor = useOrdinalColorScale(colors, 'id');\n  var theme = useTheme();\n  var getPointColor = useInheritedColor(pointColor, theme);\n  var getPointBorderColor = useInheritedColor(pointBorderColor, theme);\n\n  var _useMemo = useMemo(function () {\n    return computeXYScalesForSeries(data, xScaleSpec, yScaleSpec, width, height);\n  }, [data, xScaleSpec, yScaleSpec, width, height]),\n      xScale = _useMemo.xScale,\n      yScale = _useMemo.yScale,\n      rawSeries = _useMemo.series;\n\n  var series = useMemo(function () {\n    return rawSeries.map(function (serie) {\n      return _objectSpread2(_objectSpread2({}, serie), {}, {\n        color: getColor(serie)\n      });\n    });\n  }, [rawSeries, getColor]);\n  var points = usePoints({\n    series: series,\n    getPointColor: getPointColor,\n    getPointBorderColor: getPointBorderColor,\n    formatX: formatX,\n    formatY: formatY\n  });\n  var slices = useSlices({\n    enableSlices: enableSlices,\n    points: points,\n    width: width,\n    height: height\n  });\n  var lineGenerator = useLineGenerator({\n    curve: curve\n  });\n  var areaGenerator = useAreaGenerator({\n    curve: curve,\n    yScale: yScale,\n    areaBaselineValue: areaBaselineValue\n  });\n  return {\n    lineGenerator: lineGenerator,\n    areaGenerator: areaGenerator,\n    getColor: getColor,\n    series: series,\n    xScale: xScale,\n    yScale: yScale,\n    slices: slices,\n    points: points\n  };\n};\n\nvar AreaPath = function AreaPath(_ref) {\n  var areaBlendMode = _ref.areaBlendMode,\n      areaOpacity = _ref.areaOpacity,\n      color = _ref.color,\n      fill = _ref.fill,\n      path = _ref.path;\n\n  var _useMotionConfig = useMotionConfig(),\n      animate = _useMotionConfig.animate,\n      springConfig = _useMotionConfig.config;\n\n  var animatedPath = useAnimatedPath(path);\n  var animatedProps = useSpring({\n    color: color,\n    config: springConfig,\n    immediate: !animate\n  });\n  return React.createElement(animated.path, {\n    d: animatedPath,\n    fill: fill ? fill : animatedProps.color,\n    fillOpacity: areaOpacity,\n    strokeWidth: 0,\n    style: {\n      mixBlendMode: areaBlendMode\n    }\n  });\n};\n\nvar Areas = function Areas(_ref2) {\n  var areaGenerator = _ref2.areaGenerator,\n      areaOpacity = _ref2.areaOpacity,\n      areaBlendMode = _ref2.areaBlendMode,\n      lines = _ref2.lines;\n  var computedLines = lines.slice(0).reverse();\n  return React.createElement(\"g\", null, computedLines.map(function (line) {\n    return React.createElement(AreaPath, Object.assign({\n      key: line.id,\n      path: areaGenerator(line.data.map(function (d) {\n        return d.position;\n      }))\n    }, _objectSpread2({\n      areaOpacity: areaOpacity,\n      areaBlendMode: areaBlendMode\n    }, line)));\n  }));\n};\n\nvar Areas$1 = memo(Areas);\n\nvar LinesItem = function LinesItem(_ref) {\n  var lineGenerator = _ref.lineGenerator,\n      points = _ref.points,\n      color = _ref.color,\n      thickness = _ref.thickness;\n  var path = useMemo(function () {\n    return lineGenerator(points);\n  }, [lineGenerator, points]);\n  var animatedPath = useAnimatedPath(path);\n  return React.createElement(animated.path, {\n    d: animatedPath,\n    fill: \"none\",\n    strokeWidth: thickness,\n    stroke: color\n  });\n};\n\nvar LinesItem$1 = memo(LinesItem);\n\nvar Lines = function Lines(_ref) {\n  var lines = _ref.lines,\n      lineGenerator = _ref.lineGenerator,\n      lineWidth = _ref.lineWidth;\n  return lines.reverse().map(function (_ref2) {\n    var id = _ref2.id,\n        data = _ref2.data,\n        color = _ref2.color;\n    return React.createElement(LinesItem$1, {\n      key: id,\n      id: id,\n      points: data.map(function (d) {\n        return d.position;\n      }),\n      lineGenerator: lineGenerator,\n      color: color,\n      thickness: lineWidth\n    });\n  });\n};\n\nvar Lines$1 = memo(Lines);\n\nvar SlicesItem = function SlicesItem(_ref) {\n  var slice = _ref.slice,\n      axis = _ref.axis,\n      debug = _ref.debug,\n      tooltip = _ref.tooltip,\n      isCurrent = _ref.isCurrent,\n      setCurrent = _ref.setCurrent;\n\n  var _useTooltip = useTooltip(),\n      showTooltipFromEvent = _useTooltip.showTooltipFromEvent,\n      hideTooltip = _useTooltip.hideTooltip;\n\n  var handleMouseEnter = useCallback(function (event) {\n    showTooltipFromEvent(React.createElement(tooltip, {\n      slice: slice,\n      axis: axis\n    }), event, 'right');\n    setCurrent(slice);\n  }, [showTooltipFromEvent, tooltip, slice]);\n  var handleMouseMove = useCallback(function (event) {\n    showTooltipFromEvent(React.createElement(tooltip, {\n      slice: slice,\n      axis: axis\n    }), event, 'right');\n  }, [showTooltipFromEvent, tooltip, slice]);\n  var handleMouseLeave = useCallback(function () {\n    hideTooltip();\n    setCurrent(null);\n  }, [hideTooltip]);\n  return React.createElement(\"rect\", {\n    x: slice.x0,\n    y: slice.y0,\n    width: slice.width,\n    height: slice.height,\n    stroke: \"red\",\n    strokeWidth: debug ? 1 : 0,\n    strokeOpacity: 0.75,\n    fill: \"red\",\n    fillOpacity: isCurrent && debug ? 0.35 : 0,\n    onMouseEnter: handleMouseEnter,\n    onMouseMove: handleMouseMove,\n    onMouseLeave: handleMouseLeave\n  });\n};\n\nvar SlicesItem$1 = memo(SlicesItem);\n\nvar Slices = function Slices(_ref) {\n  var slices = _ref.slices,\n      axis = _ref.axis,\n      debug = _ref.debug,\n      height = _ref.height,\n      tooltip = _ref.tooltip,\n      current = _ref.current,\n      setCurrent = _ref.setCurrent;\n  return slices.map(function (slice) {\n    return React.createElement(SlicesItem$1, {\n      key: slice.id,\n      slice: slice,\n      axis: axis,\n      debug: debug,\n      height: height,\n      tooltip: tooltip,\n      setCurrent: setCurrent,\n      isCurrent: current !== null && current.id === slice.id\n    });\n  });\n};\n\nvar Slices$1 = memo(Slices);\n\nvar Points = function Points(_ref) {\n  var points = _ref.points,\n      symbol = _ref.symbol,\n      size = _ref.size,\n      borderWidth = _ref.borderWidth,\n      enableLabel = _ref.enableLabel,\n      label = _ref.label,\n      labelYOffset = _ref.labelYOffset;\n  var theme = useTheme();\n  var getLabel = getLabelGenerator(label);\n  var mappedPoints = points.reverse().map(function (point) {\n    var mappedPoint = {\n      id: point.id,\n      x: point.x,\n      y: point.y,\n      datum: point.data,\n      fill: point.color,\n      stroke: point.borderColor,\n      label: enableLabel ? getLabel(point.data) : null\n    };\n    return mappedPoint;\n  });\n  return React.createElement(\"g\", null, mappedPoints.map(function (point) {\n    return React.createElement(DotsItem, {\n      key: point.id,\n      x: point.x,\n      y: point.y,\n      datum: point.datum,\n      symbol: symbol,\n      size: size,\n      color: point.fill,\n      borderWidth: borderWidth,\n      borderColor: point.stroke,\n      label: point.label,\n      labelYOffset: labelYOffset,\n      theme: theme\n    });\n  }));\n};\n\nvar Points$1 = memo(Points);\n\nvar Mesh = function Mesh(_ref) {\n  var points = _ref.points,\n      width = _ref.width,\n      height = _ref.height,\n      margin = _ref.margin,\n      setCurrent = _ref.setCurrent,\n      onMouseEnter = _ref.onMouseEnter,\n      onMouseMove = _ref.onMouseMove,\n      onMouseLeave = _ref.onMouseLeave,\n      onClick = _ref.onClick,\n      tooltip = _ref.tooltip,\n      debug = _ref.debug;\n\n  var _useTooltip = useTooltip(),\n      showTooltipAt = _useTooltip.showTooltipAt,\n      hideTooltip = _useTooltip.hideTooltip;\n\n  var handleMouseEnter = useCallback(function (point, event) {\n    showTooltipAt(React.createElement(tooltip, {\n      point: point\n    }), [point.x + margin.left, point.y + margin.top], 'top');\n    setCurrent(point);\n    onMouseEnter && onMouseEnter(point, event);\n  }, [setCurrent, showTooltipAt, tooltip, onMouseEnter, margin]);\n  var handleMouseMove = useCallback(function (point, event) {\n    showTooltipAt(React.createElement(tooltip, {\n      point: point\n    }), [point.x + margin.left, point.y + margin.top], 'top');\n    setCurrent(point);\n    onMouseMove && onMouseMove(point, event);\n  }, [setCurrent, showTooltipAt, tooltip, onMouseMove]);\n  var handleMouseLeave = useCallback(function (point, event) {\n    hideTooltip();\n    setCurrent(null);\n    onMouseLeave && onMouseLeave(point, event);\n  }, [hideTooltip, setCurrent, onMouseLeave]);\n  var handleClick = useCallback(function (point, event) {\n    onClick && onClick(point, event);\n  }, [onClick]);\n  return React.createElement(Mesh$2, {\n    nodes: points,\n    width: width,\n    height: height,\n    onMouseEnter: handleMouseEnter,\n    onMouseMove: handleMouseMove,\n    onMouseLeave: handleMouseLeave,\n    onClick: handleClick,\n    debug: debug\n  });\n};\n\nvar Mesh$1 = memo(Mesh);\n\nvar Line = function Line(props) {\n  var data = props.data,\n      xScaleSpec = props.xScale,\n      xFormat = props.xFormat,\n      yScaleSpec = props.yScale,\n      yFormat = props.yFormat,\n      layers = props.layers,\n      curve = props.curve,\n      areaBaselineValue = props.areaBaselineValue,\n      colors = props.colors,\n      partialMargin = props.margin,\n      width = props.width,\n      height = props.height,\n      axisTop = props.axisTop,\n      axisRight = props.axisRight,\n      axisBottom = props.axisBottom,\n      axisLeft = props.axisLeft,\n      enableGridX = props.enableGridX,\n      enableGridY = props.enableGridY,\n      gridXValues = props.gridXValues,\n      gridYValues = props.gridYValues,\n      lineWidth = props.lineWidth,\n      enableArea = props.enableArea,\n      areaOpacity = props.areaOpacity,\n      areaBlendMode = props.areaBlendMode,\n      enablePoints = props.enablePoints,\n      pointSymbol = props.pointSymbol,\n      pointSize = props.pointSize,\n      pointColor = props.pointColor,\n      pointBorderWidth = props.pointBorderWidth,\n      pointBorderColor = props.pointBorderColor,\n      enablePointLabel = props.enablePointLabel,\n      pointLabel = props.pointLabel,\n      pointLabelYOffset = props.pointLabelYOffset,\n      defs = props.defs,\n      fill = props.fill,\n      markers = props.markers,\n      legends = props.legends,\n      isInteractive = props.isInteractive,\n      useMesh = props.useMesh,\n      debugMesh = props.debugMesh,\n      onMouseEnter = props.onMouseEnter,\n      onMouseMove = props.onMouseMove,\n      onMouseLeave = props.onMouseLeave,\n      onClick = props.onClick,\n      tooltip = props.tooltip,\n      enableSlices = props.enableSlices,\n      debugSlices = props.debugSlices,\n      sliceTooltip = props.sliceTooltip,\n      enableCrosshair = props.enableCrosshair,\n      crosshairType = props.crosshairType,\n      role = props.role;\n\n  var _useDimensions = useDimensions(width, height, partialMargin),\n      margin = _useDimensions.margin,\n      innerWidth = _useDimensions.innerWidth,\n      innerHeight = _useDimensions.innerHeight,\n      outerWidth = _useDimensions.outerWidth,\n      outerHeight = _useDimensions.outerHeight;\n\n  var _useLine = useLine({\n    data: data,\n    xScale: xScaleSpec,\n    xFormat: xFormat,\n    yScale: yScaleSpec,\n    yFormat: yFormat,\n    width: innerWidth,\n    height: innerHeight,\n    colors: colors,\n    curve: curve,\n    areaBaselineValue: areaBaselineValue,\n    pointColor: pointColor,\n    pointBorderColor: pointBorderColor,\n    enableSlices: enableSlices\n  }),\n      lineGenerator = _useLine.lineGenerator,\n      areaGenerator = _useLine.areaGenerator,\n      series = _useLine.series,\n      xScale = _useLine.xScale,\n      yScale = _useLine.yScale,\n      slices = _useLine.slices,\n      points = _useLine.points;\n\n  var theme = useTheme();\n  var getPointColor = useInheritedColor(pointColor, theme);\n  var getPointBorderColor = useInheritedColor(pointBorderColor, theme);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentPoint = _useState2[0],\n      setCurrentPoint = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentSlice = _useState4[0],\n      setCurrentSlice = _useState4[1];\n\n  var legendData = useMemo(function () {\n    return series.map(function (line) {\n      return {\n        id: line.id,\n        label: line.id,\n        color: line.color\n      };\n    }).reverse();\n  }, [series]);\n  var layerById = {\n    grid: React.createElement(Grid, {\n      key: \"grid\",\n      theme: theme,\n      width: innerWidth,\n      height: innerHeight,\n      xScale: enableGridX ? xScale : null,\n      yScale: enableGridY ? yScale : null,\n      xValues: gridXValues,\n      yValues: gridYValues\n    }),\n    markers: React.createElement(CartesianMarkers, {\n      key: \"markers\",\n      markers: markers,\n      width: innerWidth,\n      height: innerHeight,\n      xScale: xScale,\n      yScale: yScale,\n      theme: theme\n    }),\n    axes: React.createElement(Axes, {\n      key: \"axes\",\n      xScale: xScale,\n      yScale: yScale,\n      width: innerWidth,\n      height: innerHeight,\n      theme: theme,\n      top: axisTop,\n      right: axisRight,\n      bottom: axisBottom,\n      left: axisLeft\n    }),\n    areas: null,\n    lines: React.createElement(Lines$1, {\n      key: \"lines\",\n      lines: series,\n      lineGenerator: lineGenerator,\n      lineWidth: lineWidth\n    }),\n    slices: null,\n    points: null,\n    crosshair: null,\n    mesh: null,\n    legends: legends.map(function (legend, i) {\n      return React.createElement(BoxLegendSvg, Object.assign({\n        key: \"legend.\".concat(i)\n      }, legend, {\n        containerWidth: innerWidth,\n        containerHeight: innerHeight,\n        data: legend.data || legendData,\n        theme: theme\n      }));\n    })\n  };\n  var boundDefs = bindDefs(defs, series, fill);\n\n  if (enableArea) {\n    layerById.areas = React.createElement(Areas$1, {\n      key: \"areas\",\n      areaGenerator: areaGenerator,\n      areaOpacity: areaOpacity,\n      areaBlendMode: areaBlendMode,\n      lines: series\n    });\n  }\n\n  if (isInteractive && enableSlices !== false) {\n    layerById.slices = React.createElement(Slices$1, {\n      key: \"slices\",\n      slices: slices,\n      axis: enableSlices,\n      debug: debugSlices,\n      height: innerHeight,\n      tooltip: sliceTooltip,\n      current: currentSlice,\n      setCurrent: setCurrentSlice\n    });\n  }\n\n  if (enablePoints) {\n    layerById.points = React.createElement(Points$1, {\n      key: \"points\",\n      points: points,\n      symbol: pointSymbol,\n      size: pointSize,\n      color: getPointColor,\n      borderWidth: pointBorderWidth,\n      borderColor: getPointBorderColor,\n      enableLabel: enablePointLabel,\n      label: pointLabel,\n      labelYOffset: pointLabelYOffset\n    });\n  }\n\n  if (isInteractive && enableCrosshair) {\n    if (currentPoint !== null) {\n      layerById.crosshair = React.createElement(Crosshair, {\n        key: \"crosshair\",\n        width: innerWidth,\n        height: innerHeight,\n        x: currentPoint.x,\n        y: currentPoint.y,\n        type: crosshairType\n      });\n    }\n\n    if (currentSlice !== null) {\n      layerById.crosshair = React.createElement(Crosshair, {\n        key: \"crosshair\",\n        width: innerWidth,\n        height: innerHeight,\n        x: currentSlice.x,\n        y: currentSlice.y,\n        type: enableSlices\n      });\n    }\n  }\n\n  if (isInteractive && useMesh && enableSlices === false) {\n    layerById.mesh = React.createElement(Mesh$1, {\n      key: \"mesh\",\n      points: points,\n      width: innerWidth,\n      height: innerHeight,\n      margin: margin,\n      current: currentPoint,\n      setCurrent: setCurrentPoint,\n      onMouseEnter: onMouseEnter,\n      onMouseMove: onMouseMove,\n      onMouseLeave: onMouseLeave,\n      onClick: onClick,\n      tooltip: tooltip,\n      debug: debugMesh\n    });\n  }\n\n  return React.createElement(SvgWrapper, {\n    defs: boundDefs,\n    width: outerWidth,\n    height: outerHeight,\n    margin: margin,\n    role: role\n  }, layers.map(function (layer, i) {\n    if (typeof layer === 'function') {\n      return React.createElement(Fragment, {\n        key: i\n      }, layer(_objectSpread2(_objectSpread2({}, props), {}, {\n        innerWidth: innerWidth,\n        innerHeight: innerHeight,\n        series: series,\n        slices: slices,\n        points: points,\n        xScale: xScale,\n        yScale: yScale,\n        lineGenerator: lineGenerator,\n        areaGenerator: areaGenerator,\n        currentPoint: currentPoint,\n        setCurrentPoint: setCurrentPoint,\n        currentSlice: currentSlice,\n        setCurrentSlice: setCurrentSlice\n      })));\n    }\n\n    return layerById[layer];\n  }));\n};\n\nLine.defaultProps = LineDefaultProps;\nvar Line$1 = withContainer(Line);\n\nvar ResponsiveLine = function ResponsiveLine(props) {\n  return React.createElement(ResponsiveWrapper, null, function (_ref) {\n    var width = _ref.width,\n        height = _ref.height;\n    return React.createElement(Line$1, Object.assign({\n      width: width,\n      height: height\n    }, props));\n  });\n};\n\nvar LineCanvas = function LineCanvas(_ref) {\n  var width = _ref.width,\n      height = _ref.height,\n      partialMargin = _ref.margin,\n      pixelRatio = _ref.pixelRatio,\n      data = _ref.data,\n      xScaleSpec = _ref.xScale,\n      xFormat = _ref.xFormat,\n      yScaleSpec = _ref.yScale,\n      yFormat = _ref.yFormat,\n      curve = _ref.curve,\n      layers = _ref.layers,\n      colors = _ref.colors,\n      lineWidth = _ref.lineWidth,\n      enableArea = _ref.enableArea,\n      areaBaselineValue = _ref.areaBaselineValue,\n      areaOpacity = _ref.areaOpacity,\n      enablePoints = _ref.enablePoints,\n      pointSize = _ref.pointSize,\n      pointColor = _ref.pointColor,\n      pointBorderWidth = _ref.pointBorderWidth,\n      pointBorderColor = _ref.pointBorderColor,\n      enableGridX = _ref.enableGridX,\n      gridXValues = _ref.gridXValues,\n      enableGridY = _ref.enableGridY,\n      gridYValues = _ref.gridYValues,\n      axisTop = _ref.axisTop,\n      axisRight = _ref.axisRight,\n      axisBottom = _ref.axisBottom,\n      axisLeft = _ref.axisLeft,\n      legends = _ref.legends,\n      isInteractive = _ref.isInteractive,\n      debugMesh = _ref.debugMesh,\n      onMouseLeave = _ref.onMouseLeave,\n      onClick = _ref.onClick,\n      tooltip = _ref.tooltip,\n      canvasRef = _ref.canvasRef;\n  var canvasEl = useRef(null);\n\n  var _useDimensions = useDimensions(width, height, partialMargin),\n      margin = _useDimensions.margin,\n      innerWidth = _useDimensions.innerWidth,\n      innerHeight = _useDimensions.innerHeight,\n      outerWidth = _useDimensions.outerWidth,\n      outerHeight = _useDimensions.outerHeight;\n\n  var theme = useTheme();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentPoint = _useState2[0],\n      setCurrentPoint = _useState2[1];\n\n  var _useLine = useLine({\n    data: data,\n    xScale: xScaleSpec,\n    xFormat: xFormat,\n    yScale: yScaleSpec,\n    yFormat: yFormat,\n    width: innerWidth,\n    height: innerHeight,\n    colors: colors,\n    curve: curve,\n    areaBaselineValue: areaBaselineValue,\n    pointColor: pointColor,\n    pointBorderColor: pointBorderColor\n  }),\n      lineGenerator = _useLine.lineGenerator,\n      areaGenerator = _useLine.areaGenerator,\n      series = _useLine.series,\n      xScale = _useLine.xScale,\n      yScale = _useLine.yScale,\n      points = _useLine.points;\n\n  var _useVoronoiMesh = useVoronoiMesh({\n    points: points,\n    width: innerWidth,\n    height: innerHeight,\n    debug: debugMesh\n  }),\n      delaunay = _useVoronoiMesh.delaunay,\n      voronoi = _useVoronoiMesh.voronoi;\n\n  useEffect(function () {\n    if (canvasRef) {\n      canvasRef.current = canvasEl.current;\n    }\n\n    canvasEl.current.width = outerWidth * pixelRatio;\n    canvasEl.current.height = outerHeight * pixelRatio;\n    var ctx = canvasEl.current.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.fillStyle = theme.background;\n    ctx.fillRect(0, 0, outerWidth, outerHeight);\n    ctx.translate(margin.left, margin.top);\n    layers.forEach(function (layer) {\n      if (typeof layer === 'function') {\n        layer({\n          ctx: ctx,\n          innerWidth: innerWidth,\n          innerHeight: innerHeight,\n          series: series,\n          points: points,\n          xScale: xScale,\n          yScale: yScale,\n          lineWidth: lineWidth,\n          lineGenerator: lineGenerator,\n          areaGenerator: areaGenerator,\n          currentPoint: currentPoint,\n          setCurrentPoint: setCurrentPoint\n        });\n      }\n\n      if (layer === 'grid' && theme.grid.line.strokeWidth > 0) {\n        ctx.lineWidth = theme.grid.line.strokeWidth;\n        ctx.strokeStyle = theme.grid.line.stroke;\n        enableGridX && renderGridLinesToCanvas(ctx, {\n          width: innerWidth,\n          height: innerHeight,\n          scale: xScale,\n          axis: 'x',\n          values: gridXValues\n        });\n        enableGridY && renderGridLinesToCanvas(ctx, {\n          width: innerWidth,\n          height: innerHeight,\n          scale: yScale,\n          axis: 'y',\n          values: gridYValues\n        });\n      }\n\n      if (layer === 'axes') {\n        renderAxesToCanvas(ctx, {\n          xScale: xScale,\n          yScale: yScale,\n          width: innerWidth,\n          height: innerHeight,\n          top: axisTop,\n          right: axisRight,\n          bottom: axisBottom,\n          left: axisLeft,\n          theme: theme\n        });\n      }\n\n      if (layer === 'areas' && enableArea === true) {\n        ctx.save();\n        ctx.globalAlpha = areaOpacity;\n        areaGenerator.context(ctx);\n        series.forEach(function (serie) {\n          ctx.fillStyle = serie.color;\n          ctx.beginPath();\n          areaGenerator(serie.data.map(function (d) {\n            return d.position;\n          }));\n          ctx.fill();\n        });\n        ctx.restore();\n      }\n\n      if (layer === 'lines') {\n        lineGenerator.context(ctx);\n        series.forEach(function (serie) {\n          ctx.strokeStyle = serie.color;\n          ctx.lineWidth = lineWidth;\n          ctx.beginPath();\n          lineGenerator(serie.data.map(function (d) {\n            return d.position;\n          }));\n          ctx.stroke();\n        });\n      }\n\n      if (layer === 'points' && enablePoints === true && pointSize > 0) {\n        points.forEach(function (point) {\n          ctx.fillStyle = point.color;\n          ctx.beginPath();\n          ctx.arc(point.x, point.y, pointSize / 2, 0, 2 * Math.PI);\n          ctx.fill();\n\n          if (pointBorderWidth > 0) {\n            ctx.strokeStyle = point.borderColor;\n            ctx.lineWidth = pointBorderWidth;\n            ctx.stroke();\n          }\n        });\n      }\n\n      if (layer === 'mesh' && debugMesh === true) {\n        renderVoronoiToCanvas(ctx, voronoi);\n\n        if (currentPoint) {\n          renderVoronoiCellToCanvas(ctx, voronoi, currentPoint.index);\n        }\n      }\n\n      if (layer === 'legends') {\n        var legendData = series.map(function (serie) {\n          return {\n            id: serie.id,\n            label: serie.id,\n            color: serie.color\n          };\n        }).reverse();\n        legends.forEach(function (legend) {\n          renderLegendToCanvas(ctx, _objectSpread2(_objectSpread2({}, legend), {}, {\n            data: legend.data || legendData,\n            containerWidth: innerWidth,\n            containerHeight: innerHeight,\n            theme: theme\n          }));\n        });\n      }\n    });\n  }, [canvasEl, outerWidth, outerHeight, layers, theme, lineGenerator, series, xScale, yScale, enableGridX, gridXValues, enableGridY, gridYValues, axisTop, axisRight, axisBottom, axisLeft, legends, points, enablePoints, pointSize, currentPoint]);\n  var getPointFromMouseEvent = useCallback(function (event) {\n    var _getRelativeCursor = getRelativeCursor(canvasEl.current, event),\n        _getRelativeCursor2 = _slicedToArray(_getRelativeCursor, 2),\n        x = _getRelativeCursor2[0],\n        y = _getRelativeCursor2[1];\n\n    if (!isCursorInRect(margin.left, margin.top, innerWidth, innerHeight, x, y)) return null;\n    var pointIndex = delaunay.find(x - margin.left, y - margin.top);\n    return points[pointIndex];\n  }, [canvasEl, margin, innerWidth, innerHeight, delaunay]);\n\n  var _useTooltip = useTooltip(),\n      showTooltipFromEvent = _useTooltip.showTooltipFromEvent,\n      hideTooltip = _useTooltip.hideTooltip;\n\n  var handleMouseHover = useCallback(function (event) {\n    var point = getPointFromMouseEvent(event);\n    setCurrentPoint(point);\n\n    if (point) {\n      showTooltipFromEvent(React.createElement(tooltip, {\n        point: point\n      }), event);\n    } else {\n      hideTooltip();\n    }\n  }, [getPointFromMouseEvent, setCurrentPoint, showTooltipFromEvent, hideTooltip, tooltip]);\n  var handleMouseLeave = useCallback(function (event) {\n    hideTooltip();\n    setCurrentPoint(null);\n    currentPoint && onMouseLeave && onMouseLeave(currentPoint, event);\n  }, [hideTooltip, setCurrentPoint, onMouseLeave]);\n  var handleClick = useCallback(function (event) {\n    if (onClick) {\n      var point = getPointFromMouseEvent(event);\n      point && onClick(point, event);\n    }\n  }, [getPointFromMouseEvent, onClick]);\n  return React.createElement(\"canvas\", {\n    ref: canvasEl,\n    width: outerWidth * pixelRatio,\n    height: outerHeight * pixelRatio,\n    style: {\n      width: outerWidth,\n      height: outerHeight,\n      cursor: isInteractive ? 'auto' : 'normal'\n    },\n    onMouseEnter: isInteractive ? handleMouseHover : undefined,\n    onMouseMove: isInteractive ? handleMouseHover : undefined,\n    onMouseLeave: isInteractive ? handleMouseLeave : undefined,\n    onClick: isInteractive ? handleClick : undefined\n  });\n};\n\nLineCanvas.defaultProps = LineCanvasDefaultProps;\nvar LineCanvasWithContainer = withContainer(LineCanvas);\nvar LineCanvas$1 = forwardRef(function (props, ref) {\n  return React.createElement(LineCanvasWithContainer, Object.assign({}, props, {\n    canvasRef: ref\n  }));\n});\n\nvar ResponsiveLineCanvas = function ResponsiveLineCanvas(props, ref) {\n  return React.createElement(ResponsiveWrapper, null, function (_ref) {\n    var width = _ref.width,\n        height = _ref.height;\n    return React.createElement(LineCanvas$1, Object.assign({\n      width: width,\n      height: height\n    }, props, {\n      ref: ref\n    }));\n  });\n};\n\nvar ResponsiveLineCanvas$1 = forwardRef(ResponsiveLineCanvas);\nexport { Line$1 as Line, LineCanvas$1 as LineCanvas, LineCanvasDefaultProps, LineCanvasPropTypes, LineDefaultProps, LinePropTypes, ResponsiveLine, ResponsiveLineCanvas$1 as ResponsiveLineCanvas, useAreaGenerator, useLine, useLineGenerator, useSlices };","map":{"version":3,"mappings":"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","names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_arrayWithHoles","arr","Array","isArray","_iterableToArrayLimit","Symbol","iterator","_arr","_n","_d","_e","undefined","_i","_s","next","done","err","_arrayLikeToArray","len","arr2","_unsupportedIterableToArray","o","minLen","arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","from","test","_nonIterableRest","TypeError","_slicedToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","_arrayWithoutHoles","_iterableToArray","iter","_nonIterableSpread","_toConsumableArray","arrayWithoutHoles","iterableToArray","nonIterableSpread","LinePointTooltip","point","React","BasicTooltip","id","data","xFormatted","yFormatted","enableChip","color","serieColor","memo","SliceTooltip","axis","theme","useTheme","otherAxis","TableTooltip","rows","points","map","Chip","style","tooltip","chip","serieId","tableCellValue","commonPropTypes","PropTypes","arrayOf","shape","oneOfType","string","number","isRequired","x","instanceOf","Date","y","xScale","scalePropType","xFormat","func","yScale","yFormat","layers","oneOf","curve","lineCurvePropType","axisTop","axisPropType","axisRight","axisBottom","axisLeft","enableGridX","bool","enableGridY","gridXValues","gridYValues","enablePoints","pointSymbol","pointSize","pointColor","any","pointBorderWidth","pointBorderColor","enablePointLabel","pointLabel","markers","colors","ordinalColorsPropType","enableArea","areaOpacity","areaBlendMode","blendModePropType","areaBaselineValue","lineWidth","legends","LegendPropShape","isInteractive","debugMesh","enableSlices","debugSlices","sliceTooltip","enableCrosshair","crosshairType","LinePropTypes","role","useMesh","motionPropTypes","defsPropTypes","LineCanvasPropTypes","pixelRatio","commonDefaultProps","type","min","max","scheme","PointTooltip","LineDefaultProps","animate","motionConfig","defs","fill","LineCanvasDefaultProps","window","devicePixelRatio","useLineGenerator","useMemo","line","defined","d","curveFromProp","useAreaGenerator","area","y1","y0","usePoints","series","getPointColor","getPointBorderColor","formatX","formatY","reduce","acc","serie","datum","position","index","borderColor","useSlices","width","height","Map","has","set","get","entries","sort","a","b","slices","slicePoints","prevSlice","nextSlice","x0","sliceWidth","reverse","sliceHeight","useLine","xScaleSpec","yScaleSpec","enableSlicesTooltip","useValueFormatter","getColor","useOrdinalColorScale","useInheritedColor","computeXYScalesForSeries","rawSeries","lineGenerator","areaGenerator","AreaPath","path","useMotionConfig","springConfig","config","animatedPath","useAnimatedPath","animatedProps","useSpring","immediate","animated","fillOpacity","strokeWidth","mixBlendMode","Areas","lines","computedLines","LinesItem","thickness","stroke","Lines","SlicesItem","debug","isCurrent","setCurrent","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseEnter","useCallback","createElement","event","handleMouseMove","handleMouseLeave","strokeOpacity","onMouseEnter","onMouseMove","onMouseLeave","Slices","current","Points","symbol","size","borderWidth","enableLabel","label","labelYOffset","getLabel","getLabelGenerator","mappedPoints","mappedPoint","DotsItem","Mesh","margin","onClick","showTooltipAt","left","top","handleClick","BaseMesh","nodes","Line","props","partialMargin","pointLabelYOffset","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","useState","currentPoint","setCurrentPoint","currentSlice","setCurrentSlice","legendData","layerById","grid","Grid","xValues","yValues","CartesianMarkers","axes","Axes","right","bottom","areas","crosshair","mesh","legend","BoxLegendSvg","containerWidth","containerHeight","boundDefs","bindDefs","Crosshair","SvgWrapper","layer","Fragment","defaultProps","withContainer","ResponsiveLine","ResponsiveWrapper","LineCanvas","canvasRef","canvasEl","useRef","useVoronoiMesh","delaunay","voronoi","useEffect","ctx","getContext","scale","fillStyle","background","fillRect","translate","strokeStyle","renderGridLinesToCanvas","values","renderAxesToCanvas","save","globalAlpha","context","beginPath","restore","arc","Math","PI","renderVoronoiToCanvas","renderVoronoiCellToCanvas","renderLegendToCanvas","getPointFromMouseEvent","getRelativeCursor","isCursorInRect","pointIndex","find","handleMouseHover","ref","cursor","LineCanvasWithContainer","forwardRef","ResponsiveLineCanvas"],"sources":["D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\defineProperty.js","D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\objectSpread2.js","D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\arrayWithHoles.js","D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\iterableToArrayLimit.js","D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\arrayLikeToArray.js","D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\unsupportedIterableToArray.js","D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\nonIterableRest.js","D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\slicedToArray.js","D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\arrayWithoutHoles.js","D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\iterableToArray.js","D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\nonIterableSpread.js","D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\toConsumableArray.js","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\line\\src\\PointTooltip.js","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\line\\src\\SliceTooltip.js","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\line\\src\\props.js","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\line\\src\\hooks.js","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\line\\src\\Areas.js","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\line\\src\\LinesItem.js","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\line\\src\\Lines.js","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\line\\src\\SlicesItem.js","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\line\\src\\Slices.js","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\line\\src\\Points.js","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\line\\src\\Mesh.js","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\line\\src\\Line.js","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\line\\src\\ResponsiveLine.js","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\line\\src\\LineCanvas.js","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\line\\src\\ResponsiveLineCanvas.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst LinePointTooltip = ({ point }) => {\n    return (\n        <BasicTooltip\n            id={\n                <span>\n                    x: <strong>{point.data.xFormatted}</strong>, y:{' '}\n                    <strong>{point.data.yFormatted}</strong>\n                </span>\n            }\n            enableChip={true}\n            color={point.serieColor}\n        />\n    )\n}\n\nLinePointTooltip.propTypes = {\n    point: PropTypes.object.isRequired,\n}\n\nexport default memo(LinePointTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme } from '@nivo/core'\nimport { Chip, TableTooltip } from '@nivo/tooltip'\n\nconst SliceTooltip = ({ slice, axis }) => {\n    const theme = useTheme()\n    const otherAxis = axis === 'x' ? 'y' : 'x'\n\n    return (\n        <TableTooltip\n            rows={slice.points.map(point => [\n                <Chip key=\"chip\" color={point.serieColor} style={theme.tooltip.chip} />,\n                point.serieId,\n                <span key=\"value\" style={theme.tooltip.tableCellValue}>\n                    {point.data[`${otherAxis}Formatted`]}\n                </span>,\n            ])}\n        />\n    )\n}\n\nSliceTooltip.propTypes = {\n    slice: PropTypes.object.isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n}\n\nexport default memo(SliceTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { lineCurvePropType, blendModePropType, motionPropTypes, defsPropTypes } from '@nivo/core'\nimport { ordinalColorsPropType } from '@nivo/colors'\nimport { axisPropType } from '@nivo/axes'\nimport { scalePropType } from '@nivo/scales'\nimport { LegendPropShape } from '@nivo/legends'\nimport PointTooltip from './PointTooltip'\nimport SliceTooltip from './SliceTooltip'\n\nconst commonPropTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([\n                        PropTypes.number,\n                        PropTypes.string,\n                        PropTypes.instanceOf(Date),\n                    ]),\n                    y: PropTypes.oneOfType([\n                        PropTypes.number,\n                        PropTypes.string,\n                        PropTypes.instanceOf(Date),\n                    ]),\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n\n    xScale: scalePropType.isRequired,\n    xFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    yScale: scalePropType.isRequired,\n    yFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.oneOf([\n                'grid',\n                'markers',\n                'axes',\n                'areas',\n                'crosshair',\n                'lines',\n                'slices',\n                'points',\n                'mesh',\n                'legends',\n            ]),\n            PropTypes.func,\n        ])\n    ).isRequired,\n\n    curve: lineCurvePropType.isRequired,\n\n    axisTop: axisPropType,\n    axisRight: axisPropType,\n    axisBottom: axisPropType,\n    axisLeft: axisPropType,\n\n    enableGridX: PropTypes.bool.isRequired,\n    enableGridY: PropTypes.bool.isRequired,\n    gridXValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n    gridYValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n\n    enablePoints: PropTypes.bool.isRequired,\n    pointSymbol: PropTypes.func,\n    pointSize: PropTypes.number.isRequired,\n    pointColor: PropTypes.any.isRequired,\n    pointBorderWidth: PropTypes.number.isRequired,\n    pointBorderColor: PropTypes.any.isRequired,\n    enablePointLabel: PropTypes.bool.isRequired,\n    pointLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n\n    markers: PropTypes.arrayOf(\n        PropTypes.shape({\n            axis: PropTypes.oneOf(['x', 'y']).isRequired,\n            value: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string,\n                PropTypes.instanceOf(Date),\n            ]).isRequired,\n            style: PropTypes.object,\n        })\n    ),\n\n    colors: ordinalColorsPropType.isRequired,\n\n    enableArea: PropTypes.bool.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    areaBlendMode: blendModePropType.isRequired,\n    areaBaselineValue: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.instanceOf(Date),\n    ]).isRequired,\n    lineWidth: PropTypes.number.isRequired,\n\n    legends: PropTypes.arrayOf(PropTypes.shape(LegendPropShape)).isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    debugMesh: PropTypes.bool.isRequired,\n\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    enableSlices: PropTypes.oneOf(['x', 'y', false]).isRequired,\n    debugSlices: PropTypes.bool.isRequired,\n    sliceTooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    enableCrosshair: PropTypes.bool.isRequired,\n    crosshairType: PropTypes.string.isRequired,\n}\n\nexport const LinePropTypes = {\n    ...commonPropTypes,\n    enablePointLabel: PropTypes.bool.isRequired,\n    role: PropTypes.string.isRequired,\n    useMesh: PropTypes.bool.isRequired,\n    ...motionPropTypes,\n    ...defsPropTypes,\n}\n\nexport const LineCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonDefaultProps = {\n    curve: 'linear',\n\n    xScale: {\n        type: 'point',\n    },\n    yScale: {\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n    },\n\n    layers: [\n        'grid',\n        'markers',\n        'axes',\n        'areas',\n        'crosshair',\n        'lines',\n        'points',\n        'slices',\n        'mesh',\n        'legends',\n    ],\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: true,\n    enableGridY: true,\n\n    enablePoints: true,\n    pointSize: 6,\n    pointColor: { from: 'color' },\n    pointBorderWidth: 0,\n    pointBorderColor: { theme: 'background' },\n    enablePointLabel: false,\n    pointLabel: 'yFormatted',\n\n    colors: { scheme: 'nivo' },\n    enableArea: false,\n    areaBaselineValue: 0,\n    areaOpacity: 0.2,\n    areaBlendMode: 'normal',\n    lineWidth: 2,\n\n    legends: [],\n\n    isInteractive: true,\n    tooltip: PointTooltip,\n    enableSlices: false,\n    debugSlices: false,\n    sliceTooltip: SliceTooltip,\n    debugMesh: false,\n    enableCrosshair: true,\n    crosshairType: 'bottom-left',\n}\n\nexport const LineDefaultProps = {\n    ...commonDefaultProps,\n    enablePointLabel: false,\n    useMesh: false,\n    animate: true,\n    motionConfig: 'gentle',\n    defs: [],\n    fill: [],\n    role: 'img',\n}\n\nexport const LineCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useMemo } from 'react'\nimport { area, line } from 'd3-shape'\nimport { curveFromProp, useTheme, useValueFormatter } from '@nivo/core'\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors'\nimport { computeXYScalesForSeries } from '@nivo/scales'\nimport { LineDefaultProps } from './props'\n\nexport const useLineGenerator = ({ curve }) => {\n    return useMemo(\n        () =>\n            line()\n                .defined(d => d.x !== null && d.y !== null)\n                .x(d => d.x)\n                .y(d => d.y)\n                .curve(curveFromProp(curve)),\n        [curve]\n    )\n}\n\nexport const useAreaGenerator = ({ curve, yScale, areaBaselineValue }) => {\n    return useMemo(() => {\n        return area()\n            .defined(d => d.x !== null && d.y !== null)\n            .x(d => d.x)\n            .y1(d => d.y)\n            .curve(curveFromProp(curve))\n            .y0(yScale(areaBaselineValue))\n    }, [curve, yScale, areaBaselineValue])\n}\n\nconst usePoints = ({ series, getPointColor, getPointBorderColor, formatX, formatY }) => {\n    return useMemo(() => {\n        return series.reduce((acc, serie) => {\n            return [\n                ...acc,\n                ...serie.data\n                    .filter(datum => datum.position.x !== null && datum.position.y !== null)\n                    .map((datum, i) => {\n                        const point = {\n                            id: `${serie.id}.${i}`,\n                            index: acc.length + i,\n                            serieId: serie.id,\n                            serieColor: serie.color,\n                            x: datum.position.x,\n                            y: datum.position.y,\n                        }\n                        point.color = getPointColor(serie)\n                        point.borderColor = getPointBorderColor(point)\n                        point.data = {\n                            ...datum.data,\n                            xFormatted: formatX(datum.data.x),\n                            yFormatted: formatY(datum.data.y),\n                        }\n\n                        return point\n                    }),\n            ]\n        }, [])\n    }, [series, getPointColor, getPointBorderColor, formatX, formatY])\n}\n\nexport const useSlices = ({ enableSlices, points, width, height }) => {\n    return useMemo(() => {\n        if (enableSlices === false) return []\n\n        if (enableSlices === 'x') {\n            const map = new Map()\n            points.forEach(point => {\n                if (point.data.x === null || point.data.y === null) return\n                if (!map.has(point.x)) map.set(point.x, [point])\n                else map.get(point.x).push(point)\n            })\n            return Array.from(map.entries())\n                .sort((a, b) => a[0] - b[0])\n                .map(([x, slicePoints], i, slices) => {\n                    const prevSlice = slices[i - 1]\n                    const nextSlice = slices[i + 1]\n\n                    let x0\n                    if (!prevSlice) x0 = x\n                    else x0 = x - (x - prevSlice[0]) / 2\n\n                    let sliceWidth\n                    if (!nextSlice) sliceWidth = width - x0\n                    else sliceWidth = x - x0 + (nextSlice[0] - x) / 2\n\n                    return {\n                        id: x,\n                        x0,\n                        x,\n                        y0: 0,\n                        y: 0,\n                        width: sliceWidth,\n                        height,\n                        points: slicePoints.reverse(),\n                    }\n                })\n        } else if (enableSlices === 'y') {\n            const map = new Map()\n            points.forEach(point => {\n                if (point.data.x === null || point.data.y === null) return\n                if (!map.has(point.y)) map.set(point.y, [point])\n                else map.get(point.y).push(point)\n            })\n            return Array.from(map.entries())\n                .sort((a, b) => a[0] - b[0])\n                .map(([y, slicePoints], i, slices) => {\n                    const prevSlice = slices[i - 1]\n                    const nextSlice = slices[i + 1]\n\n                    let y0\n                    if (!prevSlice) y0 = y\n                    else y0 = y - (y - prevSlice[0]) / 2\n\n                    let sliceHeight\n                    if (!nextSlice) sliceHeight = height - y0\n                    else sliceHeight = y - y0 + (nextSlice[0] - y) / 2\n\n                    return {\n                        id: y,\n                        x0: 0,\n                        x: 0,\n                        y0,\n                        y,\n                        width,\n                        height: sliceHeight,\n                        points: slicePoints.reverse(),\n                    }\n                })\n        }\n    }, [enableSlices, points])\n}\n\nexport const useLine = ({\n    data,\n    xScale: xScaleSpec = LineDefaultProps.xScale,\n    xFormat,\n    yScale: yScaleSpec = LineDefaultProps.yScale,\n    yFormat,\n    width,\n    height,\n    colors = LineDefaultProps.colors,\n    curve = LineDefaultProps.curve,\n    areaBaselineValue = LineDefaultProps.areaBaselineValue,\n    pointColor = LineDefaultProps.pointColor,\n    pointBorderColor = LineDefaultProps.pointBorderColor,\n    enableSlices = LineDefaultProps.enableSlicesTooltip,\n}) => {\n    const formatX = useValueFormatter(xFormat)\n    const formatY = useValueFormatter(yFormat)\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const theme = useTheme()\n    const getPointColor = useInheritedColor(pointColor, theme)\n    const getPointBorderColor = useInheritedColor(pointBorderColor, theme)\n\n    const { xScale, yScale, series: rawSeries } = useMemo(\n        () => computeXYScalesForSeries(data, xScaleSpec, yScaleSpec, width, height),\n        [data, xScaleSpec, yScaleSpec, width, height]\n    )\n\n    const series = useMemo(\n        () =>\n            rawSeries.map(serie => ({\n                ...serie,\n                color: getColor(serie),\n            })),\n        [rawSeries, getColor]\n    )\n\n    const points = usePoints({\n        series,\n        getPointColor,\n        getPointBorderColor,\n        formatX,\n        formatY,\n    })\n\n    const slices = useSlices({\n        enableSlices,\n        points,\n        width,\n        height,\n    })\n\n    const lineGenerator = useLineGenerator({ curve })\n    const areaGenerator = useAreaGenerator({\n        curve,\n        yScale,\n        areaBaselineValue,\n    })\n\n    return {\n        lineGenerator,\n        areaGenerator,\n        getColor,\n        series,\n        xScale,\n        yScale,\n        slices,\n        points,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig, blendModePropType } from '@nivo/core'\n\nconst AreaPath = ({ areaBlendMode, areaOpacity, color, fill, path }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedPath = useAnimatedPath(path)\n    const animatedProps = useSpring({\n        color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedPath}\n            fill={fill ? fill : animatedProps.color}\n            fillOpacity={areaOpacity}\n            strokeWidth={0}\n            style={{\n                mixBlendMode: areaBlendMode,\n            }}\n        />\n    )\n}\n\nAreaPath.propTypes = {\n    areaBlendMode: blendModePropType.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    color: PropTypes.string,\n    fill: PropTypes.string,\n    path: PropTypes.string.isRequired,\n}\n\nconst Areas = ({ areaGenerator, areaOpacity, areaBlendMode, lines }) => {\n    const computedLines = lines.slice(0).reverse()\n\n    return (\n        <g>\n            {computedLines.map(line => (\n                <AreaPath\n                    key={line.id}\n                    path={areaGenerator(line.data.map(d => d.position))}\n                    {...{ areaOpacity, areaBlendMode, ...line }}\n                />\n            ))}\n        </g>\n    )\n}\n\nAreas.propTypes = {\n    areaGenerator: PropTypes.func.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    areaBlendMode: blendModePropType.isRequired,\n    lines: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default memo(Areas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { animated } from '@react-spring/web'\nimport { useAnimatedPath } from '@nivo/core'\n\nconst LinesItem = ({ lineGenerator, points, color, thickness }) => {\n    const path = useMemo(() => lineGenerator(points), [lineGenerator, points])\n    const animatedPath = useAnimatedPath(path)\n\n    return <animated.path d={animatedPath} fill=\"none\" strokeWidth={thickness} stroke={color} />\n}\n\nLinesItem.propTypes = {\n    points: PropTypes.arrayOf(\n        PropTypes.shape({\n            x: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            y: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        })\n    ),\n    lineGenerator: PropTypes.func.isRequired,\n    color: PropTypes.string.isRequired,\n    thickness: PropTypes.number.isRequired,\n}\n\nexport default memo(LinesItem)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport LinesItem from './LinesItem'\n\nconst Lines = ({ lines, lineGenerator, lineWidth }) => {\n    return lines\n        .reverse()\n        .map(({ id, data, color }) => (\n            <LinesItem\n                key={id}\n                id={id}\n                points={data.map(d => d.position)}\n                lineGenerator={lineGenerator}\n                color={color}\n                thickness={lineWidth}\n            />\n        ))\n}\n\nLines.propTypes = {\n    lines: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            color: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    data: PropTypes.shape({\n                        x: PropTypes.oneOfType([\n                            PropTypes.string,\n                            PropTypes.number,\n                            PropTypes.instanceOf(Date),\n                        ]),\n                        y: PropTypes.oneOfType([\n                            PropTypes.string,\n                            PropTypes.number,\n                            PropTypes.instanceOf(Date),\n                        ]),\n                    }).isRequired,\n                    position: PropTypes.shape({\n                        x: PropTypes.number,\n                        y: PropTypes.number,\n                    }).isRequired,\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n    lineWidth: PropTypes.number.isRequired,\n    lineGenerator: PropTypes.func.isRequired,\n}\n\nexport default memo(Lines)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTooltip } from '@nivo/tooltip'\n\nconst SlicesItem = ({ slice, axis, debug, tooltip, isCurrent, setCurrent }) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        event => {\n            showTooltipFromEvent(React.createElement(tooltip, { slice, axis }), event, 'right')\n            setCurrent(slice)\n        },\n        [showTooltipFromEvent, tooltip, slice]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(React.createElement(tooltip, { slice, axis }), event, 'right')\n        },\n        [showTooltipFromEvent, tooltip, slice]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        hideTooltip()\n        setCurrent(null)\n    }, [hideTooltip])\n\n    return (\n        <rect\n            x={slice.x0}\n            y={slice.y0}\n            width={slice.width}\n            height={slice.height}\n            stroke=\"red\"\n            strokeWidth={debug ? 1 : 0}\n            strokeOpacity={0.75}\n            fill=\"red\"\n            fillOpacity={isCurrent && debug ? 0.35 : 0}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n        />\n    )\n}\n\nSlicesItem.propTypes = {\n    slice: PropTypes.object.isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    debug: PropTypes.bool.isRequired,\n    height: PropTypes.number.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    isCurrent: PropTypes.bool.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n}\n\nexport default memo(SlicesItem)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport SlicesItem from './SlicesItem'\n\nconst Slices = ({ slices, axis, debug, height, tooltip, current, setCurrent }) => {\n    return slices.map(slice => (\n        <SlicesItem\n            key={slice.id}\n            slice={slice}\n            axis={axis}\n            debug={debug}\n            height={height}\n            tooltip={tooltip}\n            setCurrent={setCurrent}\n            isCurrent={current !== null && current.id === slice.id}\n        />\n    ))\n}\n\nSlices.propTypes = {\n    slices: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string,\n                PropTypes.instanceOf(Date),\n            ]).isRequired,\n            x: PropTypes.number.isRequired,\n            y: PropTypes.number.isRequired,\n            points: PropTypes.arrayOf(PropTypes.object).isRequired,\n        })\n    ).isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    debug: PropTypes.bool.isRequired,\n    height: PropTypes.number.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    current: PropTypes.object,\n    setCurrent: PropTypes.func.isRequired,\n}\n\nexport default memo(Slices)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { getLabelGenerator, DotsItem, useTheme } from '@nivo/core'\n\nconst Points = ({ points, symbol, size, borderWidth, enableLabel, label, labelYOffset }) => {\n    const theme = useTheme()\n    const getLabel = getLabelGenerator(label)\n\n    /**\n     * We reverse the `points` array so that points from the lower lines in stacked lines\n     * graph are drawn on top. See https://github.com/plouc/nivo/issues/1051.\n     */\n    const mappedPoints = points.reverse().map(point => {\n        const mappedPoint = {\n            id: point.id,\n            x: point.x,\n            y: point.y,\n            datum: point.data,\n            fill: point.color,\n            stroke: point.borderColor,\n            label: enableLabel ? getLabel(point.data) : null,\n        }\n\n        return mappedPoint\n    })\n\n    return (\n        <g>\n            {mappedPoints.map(point => (\n                <DotsItem\n                    key={point.id}\n                    x={point.x}\n                    y={point.y}\n                    datum={point.datum}\n                    symbol={symbol}\n                    size={size}\n                    color={point.fill}\n                    borderWidth={borderWidth}\n                    borderColor={point.stroke}\n                    label={point.label}\n                    labelYOffset={labelYOffset}\n                    theme={theme}\n                />\n            ))}\n        </g>\n    )\n}\n\nPoints.propTypes = {\n    points: PropTypes.arrayOf(PropTypes.object),\n    symbol: PropTypes.func,\n    size: PropTypes.number.isRequired,\n    color: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.func.isRequired,\n    enableLabel: PropTypes.bool.isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    labelYOffset: PropTypes.number,\n}\n\nexport default memo(Points)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTooltip } from '@nivo/tooltip'\nimport { Mesh as BaseMesh } from '@nivo/voronoi'\n\nconst Mesh = ({\n    points,\n    width,\n    height,\n    margin,\n    setCurrent,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n    debug,\n}) => {\n    const { showTooltipAt, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        (point, event) => {\n            showTooltipAt(\n                React.createElement(tooltip, { point }),\n                [point.x + margin.left, point.y + margin.top],\n                'top'\n            )\n            setCurrent(point)\n            onMouseEnter && onMouseEnter(point, event)\n        },\n        [setCurrent, showTooltipAt, tooltip, onMouseEnter, margin]\n    )\n\n    const handleMouseMove = useCallback(\n        (point, event) => {\n            showTooltipAt(\n                React.createElement(tooltip, { point }),\n                [point.x + margin.left, point.y + margin.top],\n                'top'\n            )\n            setCurrent(point)\n            onMouseMove && onMouseMove(point, event)\n        },\n        [setCurrent, showTooltipAt, tooltip, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        (point, event) => {\n            hideTooltip()\n            setCurrent(null)\n            onMouseLeave && onMouseLeave(point, event)\n        },\n        [hideTooltip, setCurrent, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        (point, event) => {\n            onClick && onClick(point, event)\n        },\n        [onClick]\n    )\n\n    return (\n        <BaseMesh\n            nodes={points}\n            width={width}\n            height={height}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n            debug={debug}\n        />\n    )\n}\n\nMesh.propTypes = {\n    points: PropTypes.arrayOf(PropTypes.object).isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    margin: PropTypes.object.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    debug: PropTypes.bool.isRequired,\n}\n\nexport default memo(Mesh)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Fragment, useState, useMemo } from 'react'\nimport {\n    bindDefs,\n    withContainer,\n    useDimensions,\n    useTheme,\n    SvgWrapper,\n    CartesianMarkers,\n} from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { Axes, Grid } from '@nivo/axes'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { Crosshair } from '@nivo/tooltip'\nimport { useLine } from './hooks'\nimport { LinePropTypes, LineDefaultProps } from './props'\nimport Areas from './Areas'\nimport Lines from './Lines'\nimport Slices from './Slices'\nimport Points from './Points'\nimport Mesh from './Mesh'\n\nconst Line = props => {\n    const {\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        layers,\n        curve,\n        areaBaselineValue,\n\n        colors,\n\n        margin: partialMargin,\n        width,\n        height,\n\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        enableGridX,\n        enableGridY,\n        gridXValues,\n        gridYValues,\n\n        lineWidth,\n        enableArea,\n        areaOpacity,\n        areaBlendMode,\n\n        enablePoints,\n        pointSymbol,\n        pointSize,\n        pointColor,\n        pointBorderWidth,\n        pointBorderColor,\n        enablePointLabel,\n        pointLabel,\n        pointLabelYOffset,\n\n        defs,\n        fill,\n\n        markers,\n\n        legends,\n\n        isInteractive,\n\n        useMesh,\n        debugMesh,\n\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n\n        tooltip,\n\n        enableSlices,\n        debugSlices,\n        sliceTooltip,\n\n        enableCrosshair,\n        crosshairType,\n\n        role,\n    } = props\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { lineGenerator, areaGenerator, series, xScale, yScale, slices, points } = useLine({\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        width: innerWidth,\n        height: innerHeight,\n        colors,\n        curve,\n        areaBaselineValue,\n        pointColor,\n        pointBorderColor,\n        enableSlices,\n    })\n\n    const theme = useTheme()\n    const getPointColor = useInheritedColor(pointColor, theme)\n    const getPointBorderColor = useInheritedColor(pointBorderColor, theme)\n\n    const [currentPoint, setCurrentPoint] = useState(null)\n    const [currentSlice, setCurrentSlice] = useState(null)\n\n    const legendData = useMemo(\n        () =>\n            series\n                .map(line => ({\n                    id: line.id,\n                    label: line.id,\n                    color: line.color,\n                }))\n                .reverse(),\n        [series]\n    )\n\n    const layerById = {\n        grid: (\n            <Grid\n                key=\"grid\"\n                theme={theme}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        ),\n        markers: (\n            <CartesianMarkers\n                key=\"markers\"\n                markers={markers}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={xScale}\n                yScale={yScale}\n                theme={theme}\n            />\n        ),\n        axes: (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth}\n                height={innerHeight}\n                theme={theme}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        ),\n        areas: null,\n        lines: (\n            <Lines key=\"lines\" lines={series} lineGenerator={lineGenerator} lineWidth={lineWidth} />\n        ),\n        slices: null,\n        points: null,\n        crosshair: null,\n        mesh: null,\n        legends: legends.map((legend, i) => (\n            <BoxLegendSvg\n                key={`legend.${i}`}\n                {...legend}\n                containerWidth={innerWidth}\n                containerHeight={innerHeight}\n                data={legend.data || legendData}\n                theme={theme}\n            />\n        )),\n    }\n\n    const boundDefs = bindDefs(defs, series, fill)\n\n    if (enableArea) {\n        layerById.areas = (\n            <Areas\n                key=\"areas\"\n                areaGenerator={areaGenerator}\n                areaOpacity={areaOpacity}\n                areaBlendMode={areaBlendMode}\n                lines={series}\n            />\n        )\n    }\n\n    if (isInteractive && enableSlices !== false) {\n        layerById.slices = (\n            <Slices\n                key=\"slices\"\n                slices={slices}\n                axis={enableSlices}\n                debug={debugSlices}\n                height={innerHeight}\n                tooltip={sliceTooltip}\n                current={currentSlice}\n                setCurrent={setCurrentSlice}\n            />\n        )\n    }\n\n    if (enablePoints) {\n        layerById.points = (\n            <Points\n                key=\"points\"\n                points={points}\n                symbol={pointSymbol}\n                size={pointSize}\n                color={getPointColor}\n                borderWidth={pointBorderWidth}\n                borderColor={getPointBorderColor}\n                enableLabel={enablePointLabel}\n                label={pointLabel}\n                labelYOffset={pointLabelYOffset}\n            />\n        )\n    }\n\n    if (isInteractive && enableCrosshair) {\n        if (currentPoint !== null) {\n            layerById.crosshair = (\n                <Crosshair\n                    key=\"crosshair\"\n                    width={innerWidth}\n                    height={innerHeight}\n                    x={currentPoint.x}\n                    y={currentPoint.y}\n                    type={crosshairType}\n                />\n            )\n        }\n        if (currentSlice !== null) {\n            layerById.crosshair = (\n                <Crosshair\n                    key=\"crosshair\"\n                    width={innerWidth}\n                    height={innerHeight}\n                    x={currentSlice.x}\n                    y={currentSlice.y}\n                    type={enableSlices}\n                />\n            )\n        }\n    }\n\n    if (isInteractive && useMesh && enableSlices === false) {\n        layerById.mesh = (\n            <Mesh\n                key=\"mesh\"\n                points={points}\n                width={innerWidth}\n                height={innerHeight}\n                margin={margin}\n                current={currentPoint}\n                setCurrent={setCurrentPoint}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onClick={onClick}\n                tooltip={tooltip}\n                debug={debugMesh}\n            />\n        )\n    }\n\n    return (\n        <SvgWrapper\n            defs={boundDefs}\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return (\n                        <Fragment key={i}>\n                            {layer({\n                                ...props,\n                                innerWidth,\n                                innerHeight,\n                                series,\n                                slices,\n                                points,\n                                xScale,\n                                yScale,\n                                lineGenerator,\n                                areaGenerator,\n                                currentPoint,\n                                setCurrentPoint,\n                                currentSlice,\n                                setCurrentSlice,\n                            })}\n                        </Fragment>\n                    )\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nLine.propTypes = LinePropTypes\nLine.defaultProps = LineDefaultProps\n\nexport default withContainer(Line)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Line from './Line'\n\nconst ResponsiveLine = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Line width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveLine\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useRef, useEffect, useState, useCallback, forwardRef } from 'react'\nimport {\n    withContainer,\n    useDimensions,\n    useTheme,\n    getRelativeCursor,\n    isCursorInRect,\n} from '@nivo/core'\nimport { renderAxesToCanvas, renderGridLinesToCanvas } from '@nivo/axes'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useVoronoiMesh, renderVoronoiToCanvas, renderVoronoiCellToCanvas } from '@nivo/voronoi'\nimport { LineCanvasPropTypes, LineCanvasDefaultProps } from './props'\nimport { useLine } from './hooks'\n\nconst LineCanvas = ({\n    width,\n    height,\n    margin: partialMargin,\n    pixelRatio,\n\n    data,\n    xScale: xScaleSpec,\n    xFormat,\n    yScale: yScaleSpec,\n    yFormat,\n    curve,\n\n    layers,\n\n    colors,\n    lineWidth,\n\n    enableArea,\n    areaBaselineValue,\n    areaOpacity,\n\n    enablePoints,\n    pointSize,\n    pointColor,\n    pointBorderWidth,\n    pointBorderColor,\n\n    enableGridX,\n    gridXValues,\n    enableGridY,\n    gridYValues,\n    axisTop,\n    axisRight,\n    axisBottom,\n    axisLeft,\n\n    legends,\n\n    isInteractive,\n    debugMesh,\n    //onMouseEnter,\n    //onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n\n    canvasRef,\n}) => {\n    const canvasEl = useRef(null)\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n    const theme = useTheme()\n    const [currentPoint, setCurrentPoint] = useState(null)\n\n    const { lineGenerator, areaGenerator, series, xScale, yScale, points } = useLine({\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        width: innerWidth,\n        height: innerHeight,\n        colors,\n        curve,\n        areaBaselineValue,\n        pointColor,\n        pointBorderColor,\n    })\n\n    const { delaunay, voronoi } = useVoronoiMesh({\n        points,\n        width: innerWidth,\n        height: innerHeight,\n        debug: debugMesh,\n    })\n\n    useEffect(() => {\n        if (canvasRef) {\n            canvasRef.current = canvasEl.current\n        }\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (typeof layer === 'function') {\n                layer({\n                    ctx,\n                    innerWidth,\n                    innerHeight,\n                    series,\n                    points,\n                    xScale,\n                    yScale,\n                    lineWidth,\n                    lineGenerator,\n                    areaGenerator,\n                    currentPoint,\n                    setCurrentPoint,\n                })\n            }\n\n            if (layer === 'grid' && theme.grid.line.strokeWidth > 0) {\n                ctx.lineWidth = theme.grid.line.strokeWidth\n                ctx.strokeStyle = theme.grid.line.stroke\n\n                enableGridX &&\n                    renderGridLinesToCanvas(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: xScale,\n                        axis: 'x',\n                        values: gridXValues,\n                    })\n\n                enableGridY &&\n                    renderGridLinesToCanvas(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: yScale,\n                        axis: 'y',\n                        values: gridYValues,\n                    })\n            }\n\n            if (layer === 'axes') {\n                renderAxesToCanvas(ctx, {\n                    xScale,\n                    yScale,\n                    width: innerWidth,\n                    height: innerHeight,\n                    top: axisTop,\n                    right: axisRight,\n                    bottom: axisBottom,\n                    left: axisLeft,\n                    theme,\n                })\n            }\n\n            if (layer === 'areas' && enableArea === true) {\n                ctx.save()\n                ctx.globalAlpha = areaOpacity\n\n                areaGenerator.context(ctx)\n                series.forEach(serie => {\n                    ctx.fillStyle = serie.color\n                    ctx.beginPath()\n                    areaGenerator(serie.data.map(d => d.position))\n                    ctx.fill()\n                })\n\n                ctx.restore()\n            }\n\n            if (layer === 'lines') {\n                lineGenerator.context(ctx)\n                series.forEach(serie => {\n                    ctx.strokeStyle = serie.color\n                    ctx.lineWidth = lineWidth\n                    ctx.beginPath()\n                    lineGenerator(serie.data.map(d => d.position))\n                    ctx.stroke()\n                })\n            }\n\n            if (layer === 'points' && enablePoints === true && pointSize > 0) {\n                points.forEach(point => {\n                    ctx.fillStyle = point.color\n                    ctx.beginPath()\n                    ctx.arc(point.x, point.y, pointSize / 2, 0, 2 * Math.PI)\n                    ctx.fill()\n\n                    if (pointBorderWidth > 0) {\n                        ctx.strokeStyle = point.borderColor\n                        ctx.lineWidth = pointBorderWidth\n                        ctx.stroke()\n                    }\n                })\n            }\n\n            if (layer === 'mesh' && debugMesh === true) {\n                renderVoronoiToCanvas(ctx, voronoi)\n                if (currentPoint) {\n                    renderVoronoiCellToCanvas(ctx, voronoi, currentPoint.index)\n                }\n            }\n\n            if (layer === 'legends') {\n                const legendData = series\n                    .map(serie => ({\n                        id: serie.id,\n                        label: serie.id,\n                        color: serie.color,\n                    }))\n                    .reverse()\n\n                legends.forEach(legend => {\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data: legend.data || legendData,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        theme,\n                    })\n                })\n            }\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        layers,\n        theme,\n        lineGenerator,\n        series,\n        xScale,\n        yScale,\n        enableGridX,\n        gridXValues,\n        enableGridY,\n        gridYValues,\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        legends,\n        points,\n        enablePoints,\n        pointSize,\n        currentPoint,\n    ])\n\n    const getPointFromMouseEvent = useCallback(\n        event => {\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            if (!isCursorInRect(margin.left, margin.top, innerWidth, innerHeight, x, y)) return null\n\n            const pointIndex = delaunay.find(x - margin.left, y - margin.top)\n            return points[pointIndex]\n        },\n        [canvasEl, margin, innerWidth, innerHeight, delaunay]\n    )\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        event => {\n            const point = getPointFromMouseEvent(event)\n            setCurrentPoint(point)\n\n            if (point) {\n                showTooltipFromEvent(React.createElement(tooltip, { point }), event)\n            } else {\n                hideTooltip()\n            }\n        },\n        [getPointFromMouseEvent, setCurrentPoint, showTooltipFromEvent, hideTooltip, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        event => {\n            hideTooltip()\n            setCurrentPoint(null)\n            currentPoint && onMouseLeave && onMouseLeave(currentPoint, event)\n        },\n        [hideTooltip, setCurrentPoint, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        event => {\n            if (onClick) {\n                const point = getPointFromMouseEvent(event)\n                point && onClick(point, event)\n            }\n        },\n        [getPointFromMouseEvent, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nLineCanvas.propTypes = LineCanvasPropTypes\nLineCanvas.defaultProps = LineCanvasDefaultProps\n\nconst LineCanvasWithContainer = withContainer(LineCanvas)\n\nexport default forwardRef((props, ref) => <LineCanvasWithContainer {...props} canvasRef={ref} />)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { forwardRef } from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport LineCanvas from './LineCanvas'\n\nconst ResponsiveLineCanvas = (props, ref) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <LineCanvas width={width} height={height} {...props} ref={ref} />}\n    </ResponsiveWrapper>\n)\n\nexport default forwardRef(ResponsiveLineCanvas)\n"]},"metadata":{},"sourceType":"module"}