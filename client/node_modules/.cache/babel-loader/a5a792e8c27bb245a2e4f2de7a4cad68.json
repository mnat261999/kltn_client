{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kltn\\\\test\\\\social-media\\\\client\\\\src\\\\components\\\\Profile\\\\userProfile.js\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport Layout from \"../../hoc/layout\";\nimport { connect } from \"react-redux\";\nimport { findProfile, findTagged, findPosted, unfollow, follow } from \"../../../src/actions/user_action\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\nimport \"./profile.scss\";\nimport { GridDots, LayoutList, Edit, Settings, LayoutGrid, Tag, Dots, Bookmark, CircleX } from \"tabler-icons-react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport faBars from \"@fortawesome/fontawesome-free-solid/faBars\";\nimport faTh from \"@fortawesome/fontawesome-free-solid/faTh\";\nimport Story from \"../Story/index\";\nimport { getAllTags } from \"../../actions/tag_actions\";\nimport { Link, withRouter, useParams } from \"react-router-dom\";\nimport { withTheme } from \"@material-ui/core\";\nimport { set } from \"mongoose\";\nimport { ISO_8601 } from \"moment\";\n\nclass UserProfile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      setType: \"posted\",\n      setfollowerDiaglog: false,\n      setfollowingDiaglog: false\n    };\n\n    this.handleType = type => {\n      if (type == \"tagged\") {\n        this.setState({\n          setType: type\n        });\n        this.props.dispatch(findTagged(this.props.user.userProfile ? this.props.user.userProfile._id : 0));\n      }\n\n      if (type == \"posted\") {\n        this.setState({\n          setType: type\n        });\n        this.props.dispatch(findPosted(this.props.user.userProfile ? this.props.user.userProfile._id : 0));\n      }\n\n      if (type == \"saved\") {\n        this.setState({\n          setType: type\n        });\n      }\n    };\n\n    this.handleClickunfollow = async id => {\n      await this.props.dispatch(unfollow(id)).then(response => {}); //await this.props.dispatch(findProfile(this.props.user.userData._id))\n\n      this.setState({\n        setSnack: true,\n        setMessage: \"Đã bỏ theo dõi\",\n        severity: \"success\"\n      });\n    };\n\n    this.handleClickfollow = async id => {\n      await this.props.dispatch(follow(id)).then(response => {}); //await this.props.dispatch(findProfile(this.props.user.userData._id))\n\n      this.setState({\n        setSnack: true,\n        setMessage: \"Đã theo dõi\",\n        severity: \"success\"\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(findProfile(this.props.user.userData._id));\n    this.props.dispatch(findPosted(this.props.user.userData._id));\n  }\n\n  render() {\n    const postlist = this.props.user.postlist;\n    const typelist = this.props.user.typelist;\n    const userProfile = this.props.user.userProfile;\n    const yourProfile = this.props.user.userData;\n    console.log(userProfile); //const userProfile = this.props.user.userProfile\n\n    return /*#__PURE__*/React.createElement(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop_wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row pro_header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4 img_contain\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.props.user.userData.avt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-7 col-lg-7 col-md-7 col-sm-7 col-7 action_contain\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"prolile_header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 19\n      }\n    }, this.props.user.userData.userName), /*#__PURE__*/React.createElement(Button, {\n      className: \"follow_options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/profilesettings`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, \"Ch\\u1EC9nh s\\u1EEDa th\\xF4ng tin c\\xE1 nh\\xE2n\")), /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Settings, {\n      size: 30,\n      strokeWidth: 1,\n      color: \"grey\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile_number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"number_holder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, postlist ? postlist.length : 0), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, \"B\\xE0i vi\\u1EBFt\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"number_holder\",\n      onClick: () => {\n        this.setState({\n          setfollowerDiaglog: true\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, this.props.user.userData.followers.length), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }, \"Ng\\u01B0\\u1EDDi theo d\\xF5i\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"number_holder\",\n      onClick: () => {\n        this.setState({\n          setfollowingDiaglog: true\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, this.props.user.userData.followings.length), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    }, \"\\u0110ang theo d\\xF5i\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, this.props.user.userData.bio))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row no-gutters divide_type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, this.state.setType == \"posted\" ? /*#__PURE__*/React.createElement(Button, {\n      className: \"photo_type\",\n      onClick: () => this.handleType(\"posted\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(GridDots, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 23\n      }\n    }, \"\\u0110\\xC3 \\u0110\\u0102NG\")) : /*#__PURE__*/React.createElement(Button, {\n      className: \"photo_type diselected\",\n      onClick: () => this.handleType(\"posted\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(GridDots, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 23\n      }\n    }, \"\\u0110\\xC3 \\u0110\\u0102NG\"))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }, this.state.setType == \"tagged\" ? /*#__PURE__*/React.createElement(Button, {\n      className: \"photo_type\",\n      onClick: () => this.handleType(\"tagged\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Tag, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 23\n      }\n    }, \"\\u0110\\u01AF\\u1EE2C G\\u1EAEN TH\\u1EBA\")) : /*#__PURE__*/React.createElement(Button, {\n      className: \"photo_type diselected\",\n      onClick: () => this.handleType(\"tagged\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Tag, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 23\n      }\n    }, \"\\u0110\\u01AF\\u1EE2C G\\u1EAEN TH\\u1EBA\"))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }, this.state.setType == \"saved\" ? /*#__PURE__*/React.createElement(Button, {\n      className: \"photo_type\",\n      onClick: () => this.handleType(\"saved\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Bookmark, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 23\n      }\n    }, \"\\u0110\\xC3 L\\u01AFU\")) : /*#__PURE__*/React.createElement(Button, {\n      className: \"photo_type diselected\",\n      onClick: () => this.handleType(\"saved\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Bookmark, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 23\n      }\n    }, \"\\u0110\\xC3 L\\u01AFU\"))))), typelist ? typelist.map(posts => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-xl-4 image_contain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: posts.images[0].url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-xl-4 image_contain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: posts.images[0].url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-xl-4 image_contain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: posts.images[0].url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 27\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-xl-4 image_contain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: posts.images[0].url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-xl-4 image_contain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: posts.images[0].url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-xl-4 image_contain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: posts.images[0].url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 27\n        }\n      }))));\n    }) : \"\")), /*#__PURE__*/React.createElement(Dialog, {\n      className: \"dialog_cont\",\n      onClose: () => {\n        this.setState({\n          setfollowerDiaglog: false\n        });\n        this.props.dispatch(findProfile(this.props.user.userData._id));\n      },\n      open: this.state.setfollowerDiaglog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 13\n      }\n    }, \"Danh s\\xE1ch theo d\\xF5i\"), /*#__PURE__*/React.createElement(CircleX, {\n      size: 24,\n      strokeWidth: 0.5,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 13\n      }\n    })), userProfile ? userProfile.followers ? userProfile.followers.map(follower => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"follow_list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"list_info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: follower.avt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 25\n        }\n      }, follower.userName)), yourProfile ? yourProfile._id == follower._id ? /*#__PURE__*/React.createElement(Button, {\n        className: \"minibtn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 27\n        }\n      }, \" Trang c\\xE1 nh\\xE2n\") : yourProfile ? yourProfile.followings.includes(follower._id) ? /*#__PURE__*/React.createElement(Button, {\n        className: \"minibtn\",\n        onClick: () => this.handleClickunfollow(follower._id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 29\n        }\n      }, \" \", \"\\u0110ang theo d\\xF5i\") : /*#__PURE__*/React.createElement(Button, {\n        className: \"minibtn\",\n        onClick: () => this.handleClickfollow(follower._id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 29\n        }\n      }, \"Theo d\\xF5i\") : null : null);\n    }) : \"\" : \"\"), /*#__PURE__*/React.createElement(Dialog, {\n      className: \"dialog_cont\",\n      onClose: () => {\n        this.setState({\n          setfollowingDiaglog: false\n        });\n        this.props.dispatch(findProfile(this.props.user.userData._id));\n      },\n      open: this.state.setfollowingDiaglog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 13\n      }\n    }, \"Danh s\\xE1ch \\u0111ang theo d\\xF5i\"), /*#__PURE__*/React.createElement(CircleX, {\n      size: 24,\n      strokeWidth: 0.5,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 13\n      }\n    })), userProfile ? userProfile.followings ? userProfile.followings.map(following => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"follow_list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"list_info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: following.avt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 25\n        }\n      }, following.userName)), yourProfile ? yourProfile._id == following._id ? /*#__PURE__*/React.createElement(Button, {\n        className: \"minibtn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 27\n        }\n      }, \" Trang c\\xE1 nh\\xE2n\") : yourProfile ? yourProfile.followings.includes(following._id) ? /*#__PURE__*/React.createElement(Button, {\n        className: \"minibtn\",\n        onClick: () => this.handleClickunfollow(following._id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 29\n        }\n      }, \" \", \"\\u0110ang theo d\\xF5i\") : /*#__PURE__*/React.createElement(Button, {\n        className: \"minibtn\",\n        onClick: () => this.handleClickfollow(following._id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 29\n        }\n      }, \"Theo d\\xF5i\") : null : null);\n    }) : \"\" : \"\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps)(withRouter(UserProfile));","map":{"version":3,"sources":["D:/Kltn/test/social-media/client/src/components/Profile/userProfile.js"],"names":["React","Component","useEffect","useState","Layout","connect","findProfile","findTagged","findPosted","unfollow","follow","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Slide","GridDots","LayoutList","Edit","Settings","LayoutGrid","Tag","Dots","Bookmark","CircleX","FontAwesomeIcon","faBars","faTh","Story","getAllTags","Link","withRouter","useParams","withTheme","set","ISO_8601","UserProfile","state","setType","setfollowerDiaglog","setfollowingDiaglog","handleType","type","setState","props","dispatch","user","userProfile","_id","handleClickunfollow","id","then","response","setSnack","setMessage","severity","handleClickfollow","componentDidMount","userData","render","postlist","typelist","yourProfile","console","log","avt","userName","length","followers","followings","bio","map","posts","images","url","follower","includes","following","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\nimport Layout from \"../../hoc/layout\";\nimport { connect } from \"react-redux\";\nimport {\n  findProfile,\n  findTagged,\n  findPosted,\n  unfollow,\n  follow,\n} from \"../../../src/actions/user_action\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\nimport \"./profile.scss\";\nimport {\n  GridDots,\n  LayoutList,\n  Edit,\n  Settings,\n  LayoutGrid,\n  Tag,\n  Dots,\n  Bookmark,\n  CircleX,\n} from \"tabler-icons-react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport faBars from \"@fortawesome/fontawesome-free-solid/faBars\";\nimport faTh from \"@fortawesome/fontawesome-free-solid/faTh\";\nimport Story from \"../Story/index\";\nimport { getAllTags } from \"../../actions/tag_actions\";\nimport { Link, withRouter, useParams } from \"react-router-dom\";\nimport { withTheme } from \"@material-ui/core\";\nimport { set } from \"mongoose\";\nimport { ISO_8601 } from \"moment\";\n\nclass UserProfile extends Component {\n  state = {\n    setType: \"posted\",\n    setfollowerDiaglog: false,\n    setfollowingDiaglog: false,\n  };\n  componentDidMount() {\n    this.props.dispatch(findProfile(this.props.user.userData._id));\n    this.props.dispatch(findPosted(this.props.user.userData._id));\n  }\n  handleType = (type) => {\n    if (type == \"tagged\") {\n      this.setState({ setType: type });\n      this.props.dispatch(\n        findTagged(\n          this.props.user.userProfile ? this.props.user.userProfile._id : 0\n        )\n      );\n    }\n    if (type == \"posted\") {\n      this.setState({ setType: type });\n      this.props.dispatch(\n        findPosted(\n          this.props.user.userProfile ? this.props.user.userProfile._id : 0\n        )\n      );\n    }\n    if (type == \"saved\") {\n      this.setState({ setType: type });\n    }\n  };\n  handleClickunfollow = async (id) => {\n    await this.props.dispatch(unfollow(id)).then((response) => {});\n    //await this.props.dispatch(findProfile(this.props.user.userData._id))\n    this.setState({\n      setSnack: true,\n      setMessage: \"Đã bỏ theo dõi\",\n      severity: \"success\",\n    });\n  };\n  handleClickfollow = async (id) => {\n    await this.props.dispatch(follow(id)).then((response) => {});\n    //await this.props.dispatch(findProfile(this.props.user.userData._id))\n    this.setState({\n      setSnack: true,\n      setMessage: \"Đã theo dõi\",\n      severity: \"success\",\n    });\n  };\n  render() {\n    const postlist = this.props.user.postlist;\n    const typelist = this.props.user.typelist;\n    const userProfile = this.props.user.userProfile;\n    const yourProfile = this.props.user.userData;\n    console.log(userProfile);\n    //const userProfile = this.props.user.userProfile\n    return (\n      <Layout>\n        <div className=\"shop_container\">\n          <div className=\"shop_wrapper\">\n            <div className=\"row pro_header\">\n              <div className=\"col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4 img_contain\">\n                <div className=\"profile-img\">\n                  <img src={this.props.user.userData.avt}></img>\n                </div>\n              </div>\n              <div className=\"col-xl-7 col-lg-7 col-md-7 col-sm-7 col-7 action_contain\">\n                <div className=\"prolile_header\">\n                  <div className=\"name\">\n                    {this.props.user.userData.userName}\n                  </div>\n                  <Button className=\"follow_options\">\n                    <Link to={`/profilesettings`}>\n                      Chỉnh sửa thông tin cá nhân\n                    </Link>\n                  </Button>\n                  <Button>\n                    {\" \"}\n                    <Settings size={30} strokeWidth={1} color=\"grey\" />\n                  </Button>\n                </div>\n                <div className=\"profile_number\">\n                  <div className=\"number_holder\">\n                    <div className=\"number\">\n                      {postlist ? postlist.length : 0}\n                    </div>\n                    <div className=\"type\">Bài viết</div>\n                  </div>\n                  <div\n                    className=\"number_holder\"\n                    onClick={() => {\n                      this.setState({ setfollowerDiaglog: true });\n                    }}\n                  >\n                    <div className=\"number\">\n                      {this.props.user.userData.followers.length}\n                    </div>\n                    <div className=\"type\">Người theo dõi</div>\n                  </div>\n                  <div\n                    className=\"number_holder\"\n                    onClick={() => {\n                      this.setState({ setfollowingDiaglog: true });\n                    }}\n                  >\n                    <div className=\"number\">\n                      {this.props.user.userData.followings.length}\n                    </div>\n                    <div className=\"type\">Đang theo dõi</div>\n                  </div>\n                </div>\n                <div className=\"bio\">{this.props.user.userData.bio}</div>\n              </div>\n            </div>\n            <div className=\"row no-gutters divide_type\">\n              <ul>\n                <li>\n                  {this.state.setType == \"posted\" ? (\n                    <Button\n                      className=\"photo_type\"\n                      onClick={() => this.handleType(\"posted\")}\n                    >\n                      <GridDots\n                        size={20}\n                        strokeWidth={1}\n                        color=\"black\"\n                      ></GridDots>\n                      <h2>ĐÃ ĐĂNG</h2>\n                    </Button>\n                  ) : (\n                    <Button\n                      className=\"photo_type diselected\"\n                      onClick={() => this.handleType(\"posted\")}\n                    >\n                      <GridDots\n                        size={20}\n                        strokeWidth={1}\n                        color=\"black\"\n                      ></GridDots>\n                      <h2>ĐÃ ĐĂNG</h2>\n                    </Button>\n                  )}\n                </li>\n                <li>\n                  {this.state.setType == \"tagged\" ? (\n                    <Button\n                      className=\"photo_type\"\n                      onClick={() => this.handleType(\"tagged\")}\n                    >\n                      <Tag size={20} strokeWidth={1} color=\"black\"></Tag>\n                      <h2>ĐƯỢC GẮN THẺ</h2>\n                    </Button>\n                  ) : (\n                    <Button\n                      className=\"photo_type diselected\"\n                      onClick={() => this.handleType(\"tagged\")}\n                    >\n                      <Tag size={20} strokeWidth={1} color=\"black\"></Tag>\n                      <h2>ĐƯỢC GẮN THẺ</h2>\n                    </Button>\n                  )}\n                </li>\n                <li>\n                  {this.state.setType == \"saved\" ? (\n                    <Button\n                      className=\"photo_type\"\n                      onClick={() => this.handleType(\"saved\")}\n                    >\n                      <Bookmark\n                        size={20}\n                        strokeWidth={1}\n                        color=\"black\"\n                      ></Bookmark>\n                      <h2>ĐÃ LƯU</h2>\n                    </Button>\n                  ) : (\n                    <Button\n                      className=\"photo_type diselected\"\n                      onClick={() => this.handleType(\"saved\")}\n                    >\n                      <Bookmark\n                        size={20}\n                        strokeWidth={1}\n                        color=\"black\"\n                      ></Bookmark>\n                      <h2>ĐÃ LƯU</h2>\n                    </Button>\n                  )}\n                </li>\n              </ul>\n            </div>\n            {typelist\n              ? typelist.map((posts) => {\n                  return (\n                    <div>\n                      <div className=\"row body\">\n                        <div className=\"col-xl-4 image_contain\">\n                          <img src={posts.images[0].url}></img>\n                        </div>\n                        <div className=\"col-xl-4 image_contain\">\n                          <img src={posts.images[0].url}></img>\n                        </div>\n                        <div className=\"col-xl-4 image_contain\">\n                          <img src={posts.images[0].url}></img>\n                        </div>\n                      </div>\n                      <div className=\"row body\">\n                        <div className=\"col-xl-4 image_contain\">\n                          <img src={posts.images[0].url}></img>\n                        </div>\n                        <div className=\"col-xl-4 image_contain\">\n                          <img src={posts.images[0].url}></img>\n                        </div>\n                        <div className=\"col-xl-4 image_contain\">\n                          <img src={posts.images[0].url}></img>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })\n              : \"\"}\n          </div>\n        </div>\n        <Dialog\n          className=\"dialog_cont\"\n          onClose={() => {\n            this.setState({ setfollowerDiaglog: false });\n            this.props.dispatch(findProfile(this.props.user.userData._id));\n          }}\n          open={this.state.setfollowerDiaglog}\n        >\n          <div className=\"header\">\n            <h5>Danh sách theo dõi</h5>\n            <CircleX size={24} strokeWidth={0.5} color=\"black\"></CircleX>\n          </div>\n          {userProfile\n            ? userProfile.followers\n              ? userProfile.followers.map((follower) => {\n                  return (\n                    <div className=\"follow_list\">\n                      <div className=\"list_info\">\n                        <img src={follower.avt}></img>\n                        <h2>{follower.userName}</h2>\n                      </div>\n                      {yourProfile ? (\n                        yourProfile._id == follower._id ? (\n                          <Button className=\"minibtn\"> Trang cá nhân</Button>\n                        ) : yourProfile ? (\n                          yourProfile.followings.includes(follower._id) ? (\n                            <Button\n                              className=\"minibtn\"\n                              onClick={() =>\n                                this.handleClickunfollow(follower._id)\n                              }\n                            >\n                              {\" \"}\n                              Đang theo dõi\n                            </Button>\n                          ) : (\n                            <Button\n                              className=\"minibtn\"\n                              onClick={() =>\n                                this.handleClickfollow(follower._id)\n                              }\n                            >\n                              Theo dõi\n                            </Button>\n                          )\n                        ) : null\n                      ) : null}\n                    </div>\n                  );\n                })\n              : \"\"\n            : \"\"}\n        </Dialog>\n        <Dialog\n          className=\"dialog_cont\"\n          onClose={() => {\n            this.setState({ setfollowingDiaglog: false });\n            this.props.dispatch(findProfile(this.props.user.userData._id));\n          }}\n          open={this.state.setfollowingDiaglog}\n        >\n          <div className=\"header\">\n            <h5>Danh sách đang theo dõi</h5>\n            <CircleX size={24} strokeWidth={0.5} color=\"black\"></CircleX>\n          </div>\n          {userProfile\n            ? userProfile.followings\n              ? userProfile.followings.map((following) => {\n                  return (\n                    <div className=\"follow_list\">\n                      <div className=\"list_info\">\n                        <img src={following.avt}></img>\n                        <h2>{following.userName}</h2>\n                      </div>\n                      {yourProfile ? (\n                        yourProfile._id == following._id ? (\n                          <Button className=\"minibtn\"> Trang cá nhân</Button>\n                        ) : yourProfile ? (\n                          yourProfile.followings.includes(following._id) ? (\n                            <Button\n                              className=\"minibtn\"\n                              onClick={() =>\n                                this.handleClickunfollow(following._id)\n                              }\n                            >\n                              {\" \"}\n                              Đang theo dõi\n                            </Button>\n                          ) : (\n                            <Button\n                              className=\"minibtn\"\n                              onClick={() =>\n                                this.handleClickfollow(following._id)\n                              }\n                            >\n                              Theo dõi\n                            </Button>\n                          )\n                        ) : null\n                      ) : null}\n                    </div>\n                  );\n                })\n              : \"\"\n            : \"\"}\n        </Dialog>\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nexport default connect(mapStateToProps)(withRouter(UserProfile));\n"]},"metadata":{},"sourceType":"module"}