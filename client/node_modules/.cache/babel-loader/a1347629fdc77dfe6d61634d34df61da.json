{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kltn\\\\test\\\\social-media\\\\client\\\\src\\\\components\\\\ultils\\\\Form\\\\FormField.js\";\nimport React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport faExclamation from \"@fortawesome/fontawesome-free-solid/faExclamation\";\nimport faSmile from \"@fortawesome/fontawesome-free-solid/faSmile\";\nimport TextInput from \"react-autocomplete-input\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { Picker } from \"emoji-mart\";\n\nclass FormField extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      emojiToggle: false,\n      selectedEmoji: \"\"\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        emojiToggle: !this.state.emojiToggle\n      });\n    };\n\n    this.addEmoji = e => {\n      const input = document.getElementById(\"description_textarea\");\n      console.log(input.selectionStart);\n      const {\n        formData,\n        change,\n        id\n      } = this.props;\n      let event = e.native; //Copy icon\n\n      var textfield = document.createElement(\"input\");\n      textfield.type = \"text\";\n      textfield.value = event;\n      document.body.appendChild(textfield);\n      textfield.select();\n      textfield.setSelectionRange(0, 99999);\n      document.execCommand(\"copy\");\n      document.body.removeChild(textfield);\n    };\n\n    this.showError = () => {\n      const {\n        formData\n      } = this.props;\n\n      if (formData.validation && !formData.valid) {\n        if (formData.validationMessage) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n            icon: faExclamation,\n            style: {\n              marginRight: \"10px\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 13\n            }\n          }), formData.validationMessage);\n        }\n      }\n    };\n\n    this.renderTemplate = () => {\n      const {\n        formData,\n        change,\n        id\n      } = this.props;\n      let formTemplate = null;\n\n      switch (formData.element) {\n        case \"input\":\n          formTemplate = /*#__PURE__*/React.createElement(\"div\", {\n            className: \"formBlock\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 11\n            }\n          }, formData.showlabel ? /*#__PURE__*/React.createElement(\"div\", {\n            className: \"label_input\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }\n          }, formData.config.label) : null, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, formData.config, {\n            value: formData.value //sự kiện onBlur được dùng để validate required\n            ,\n            onBlur: event => change({\n              event,\n              id,\n              blur: true\n            }) //sự kiện change được dùng để validate email/password có pass đc Regex không\n            ,\n            onChange: event => change({\n              event,\n              id,\n              blur: true\n            }),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 13\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"error_label\",\n            style: {\n              height: \"20px\",\n              fontSize: \"15px\",\n              marginTop: \"5px\",\n              marginBottom: \"5px\",\n              color: \"red\",\n              textTransform: \"capitalize\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 13\n            }\n          }, this.showError()));\n          break;\n\n        case \"datetime\":\n          formTemplate = /*#__PURE__*/React.createElement(\"div\", {\n            className: \"formBlock\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 11\n            }\n          }, formData.showlabel ? /*#__PURE__*/React.createElement(\"div\", {\n            className: \"label_input\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }\n          }, formData.config.label) : null, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, formData.config, {\n            value: formData.value //sự kiện onBlur được dùng để validate required\n            ,\n            onBlur: event => change({\n              event,\n              id,\n              blur: true\n            }) //sự kiện change được dùng để validate email/password có pass đc Regex không\n            ,\n            onChange: event => change({\n              event,\n              id,\n              blur: true\n            }),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 13\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"error_label\",\n            style: {\n              height: \"20px\",\n              fontSize: \"15px\",\n              marginTop: \"5px\",\n              marginBottom: \"5px\",\n              color: \"red\",\n              textTransform: \"capitalize\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 13\n            }\n          }, this.showError()));\n          break;\n\n        case \"password\":\n          formTemplate = /*#__PURE__*/React.createElement(\"div\", {\n            className: \"formBlock\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, formData.config, {\n            value: formData.value,\n            onBlur: event => change({\n              event,\n              id,\n              blur: true\n            }),\n            onChange: event => change({\n              event,\n              id,\n              blur: true\n            }),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 13\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"error_label\",\n            style: {\n              height: \"20px\",\n              fontSize: \"15px\",\n              marginTop: \"5px\",\n              marginBottom: \"5px\",\n              color: \"red\",\n              textTransform: \"capitalize\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 13\n            }\n          }, this.showError()));\n          break;\n\n        case \"select\":\n          formTemplate = /*#__PURE__*/React.createElement(\"div\", {\n            className: \"formBlock\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 11\n            }\n          }, formData.showlabel ? /*#__PURE__*/React.createElement(\"div\", {\n            className: \"label_input\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }\n          }, formData.config.label) : null, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"error_label\",\n            style: {\n              height: \"20px\",\n              fontSize: \"15px\",\n              marginTop: \"5px\",\n              marginBottom: \"5px\",\n              color: \"red\",\n              textTransform: \"capitalize\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 13\n            }\n          }, this.showError()));\n          break;\n\n        case \"textarea\":\n          formTemplate = /*#__PURE__*/React.createElement(\"div\", {\n            className: \"formBlock\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 11\n            }\n          }, formData.showlabel ? /*#__PURE__*/React.createElement(\"div\", {\n            className: \"label_input\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }\n          }, formData.config.label) : null, /*#__PURE__*/React.createElement(\"textarea\", Object.assign({}, formData.config, {\n            value: formData.value,\n            onBlur: event => change({\n              event,\n              id,\n              blur: true\n            }),\n            onChange: event => change({\n              event,\n              id\n            }),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 13\n            }\n          })), this.showError());\n          break;\n\n        case \"description\":\n          formTemplate = /*#__PURE__*/React.createElement(\"div\", {\n            className: \"formBlock\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"description_input\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(TextInput, {\n            id: \"description_textarea\",\n            className: \"description_textarea\",\n            placeholder: formData.config.placeholder,\n            options: formData.config.options,\n            defaultValue: formData.value,\n            trigger: \"#\",\n            onChange: event => {\n              console.log(event);\n              change({\n                event,\n                emojiInfo: {\n                  emoji: false\n                },\n                id\n              });\n            },\n            maxOptions: 7,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }\n          }), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n            icon: faSmile,\n            class: \"emoji_button\",\n            onClick: this.handleChange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }\n          }), this.state.emojiToggle ? /*#__PURE__*/React.createElement(Picker, {\n            style: {\n              position: \"absolute\",\n              right: 0,\n              top: \"100%\"\n            },\n            onSelect: this.addEmoji,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }\n          }) : null));\n          break;\n\n        case \"userTag\":\n          formTemplate = /*#__PURE__*/React.createElement(\"div\", {\n            className: \"formBlock\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 11\n            }\n          }, formData.showlabel ? /*#__PURE__*/React.createElement(\"div\", {\n            className: \"label_input\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }\n          }, formData.config.label) : null, /*#__PURE__*/React.createElement(TextInput, {\n            Component: \"input\",\n            placeholder: formData.config.placeholder,\n            options: formData.config.options,\n            trigger: \"@\",\n            defaultValue: formData.value // onChange={this.handleChange}\n            ,\n            onChange: event => {\n              console.log(event);\n              change({\n                event,\n                id\n              });\n            },\n            maxOptions: 7,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 13\n            }\n          }));\n          break;\n\n        case \"locationInput\":\n          formTemplate = /*#__PURE__*/React.createElement(\"div\", {\n            className: \"formBlock\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 11\n            }\n          }, formData.showlabel ? /*#__PURE__*/React.createElement(\"div\", {\n            className: \"label_input\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }\n          }, formData.config.label) : null, /*#__PURE__*/React.createElement(TextInput, {\n            Component: \"input\",\n            placeholder: formData.config.placeholder,\n            options: formData.config.options,\n            trigger: \"#\",\n            onChange: event => {\n              console.log(event);\n              change({\n                event,\n                id\n              });\n            },\n            maxOptions: 3,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 13\n            }\n          }));\n          break;\n\n        default:\n          formTemplate = null;\n      }\n\n      return formTemplate;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"formField_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 12\n      }\n    }, this.renderTemplate());\n  }\n\n}\n\nexport default FormField;","map":{"version":3,"sources":["D:/Kltn/test/social-media/client/src/components/ultils/Form/FormField.js"],"names":["React","Component","FontAwesomeIcon","faExclamation","faSmile","TextInput","Picker","FormField","state","emojiToggle","selectedEmoji","handleChange","e","setState","addEmoji","input","document","getElementById","console","log","selectionStart","formData","change","id","props","event","native","textfield","createElement","type","value","body","appendChild","select","setSelectionRange","execCommand","removeChild","showError","validation","valid","validationMessage","marginRight","renderTemplate","formTemplate","element","showlabel","config","label","blur","height","fontSize","marginTop","marginBottom","color","textTransform","placeholder","options","emojiInfo","emoji","position","right","top","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,aAAP,MAA0B,mDAA1B;AACA,OAAOC,OAAP,MAAoB,6CAApB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAO,+BAAP;AACA,SAASC,MAAT,QAAuB,YAAvB;;AAEA,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCO,KADgC,GACxB;AACNC,MAAAA,WAAW,EAAE,KADP;AAENC,MAAAA,aAAa,EAAE;AAFT,KADwB;;AAAA,SAKhCC,YALgC,GAKhBC,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,WAAW,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAA3B,OAAd;AACD,KAP+B;;AAAA,SAQhCK,QARgC,GAQpBF,CAAD,IAAO;AAChB,YAAMG,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,sBAAxB,CAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,cAAlB;AACA,YAAM;AAAEC,QAAAA,QAAF;AAAYC,QAAAA,MAAZ;AAAoBC,QAAAA;AAApB,UAA2B,KAAKC,KAAtC;AACA,UAAIC,KAAK,GAAGb,CAAC,CAACc,MAAd,CAJgB,CAKhB;;AACA,UAAIC,SAAS,GAAGX,QAAQ,CAACY,aAAT,CAAuB,OAAvB,CAAhB;AACAD,MAAAA,SAAS,CAACE,IAAV,GAAiB,MAAjB;AACAF,MAAAA,SAAS,CAACG,KAAV,GAAkBL,KAAlB;AACAT,MAAAA,QAAQ,CAACe,IAAT,CAAcC,WAAd,CAA0BL,SAA1B;AACAA,MAAAA,SAAS,CAACM,MAAV;AACAN,MAAAA,SAAS,CAACO,iBAAV,CAA4B,CAA5B,EAA+B,KAA/B;AACAlB,MAAAA,QAAQ,CAACmB,WAAT,CAAqB,MAArB;AACAnB,MAAAA,QAAQ,CAACe,IAAT,CAAcK,WAAd,CAA0BT,SAA1B;AACD,KAtB+B;;AAAA,SAwBhCU,SAxBgC,GAwBpB,MAAM;AAChB,YAAM;AAAEhB,QAAAA;AAAF,UAAe,KAAKG,KAA1B;;AACA,UAAIH,QAAQ,CAACiB,UAAT,IAAuB,CAACjB,QAAQ,CAACkB,KAArC,EAA4C;AAC1C,YAAIlB,QAAQ,CAACmB,iBAAb,EAAgC;AAC9B,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE,oBAAC,eAAD;AACE,YAAA,IAAI,EAAErC,aADR;AAEE,YAAA,KAAK,EAAE;AAAEsC,cAAAA,WAAW,EAAE;AAAf,aAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAKGpB,QAAQ,CAACmB,iBALZ,CADF;AASD;AACF;AACF,KAvC+B;;AAAA,SAyChCE,cAzCgC,GAyCf,MAAM;AACrB,YAAM;AAAErB,QAAAA,QAAF;AAAYC,QAAAA,MAAZ;AAAoBC,QAAAA;AAApB,UAA2B,KAAKC,KAAtC;AACA,UAAImB,YAAY,GAAG,IAAnB;;AACA,cAAQtB,QAAQ,CAACuB,OAAjB;AACE,aAAK,OAAL;AACED,UAAAA,YAAY,gBACV;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGtB,QAAQ,CAACwB,SAAT,gBACC;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA8BxB,QAAQ,CAACyB,MAAT,CAAgBC,KAA9C,CADD,GAEG,IAHN,eAIE,+CACM1B,QAAQ,CAACyB,MADf;AAEE,YAAA,KAAK,EAAEzB,QAAQ,CAACS,KAFlB,CAGE;AAHF;AAIE,YAAA,MAAM,EAAGL,KAAD,IAAWH,MAAM,CAAC;AAAEG,cAAAA,KAAF;AAASF,cAAAA,EAAT;AAAayB,cAAAA,IAAI,EAAE;AAAnB,aAAD,CAJ3B,CAKE;AALF;AAME,YAAA,QAAQ,EAAGvB,KAAD,IAAWH,MAAM,CAAC;AAAEG,cAAAA,KAAF;AAASF,cAAAA,EAAT;AAAayB,cAAAA,IAAI,EAAE;AAAnB,aAAD,CAN7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,eAYE;AACE,YAAA,SAAS,EAAC,aADZ;AAEE,YAAA,KAAK,EAAE;AACLC,cAAAA,MAAM,EAAE,MADH;AAELC,cAAAA,QAAQ,EAAE,MAFL;AAGLC,cAAAA,SAAS,EAAE,KAHN;AAILC,cAAAA,YAAY,EAAE,KAJT;AAKLC,cAAAA,KAAK,EAAE,KALF;AAMLC,cAAAA,aAAa,EAAE;AANV,aAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAWG,KAAKjB,SAAL,EAXH,CAZF,CADF;AA4BA;;AACF,aAAK,UAAL;AACEM,UAAAA,YAAY,gBACV;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGtB,QAAQ,CAACwB,SAAT,gBACC;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA8BxB,QAAQ,CAACyB,MAAT,CAAgBC,KAA9C,CADD,GAEG,IAHN,eAKE,+CACM1B,QAAQ,CAACyB,MADf;AAEE,YAAA,KAAK,EAAEzB,QAAQ,CAACS,KAFlB,CAGE;AAHF;AAIE,YAAA,MAAM,EAAGL,KAAD,IAAWH,MAAM,CAAC;AAAEG,cAAAA,KAAF;AAASF,cAAAA,EAAT;AAAayB,cAAAA,IAAI,EAAE;AAAnB,aAAD,CAJ3B,CAKE;AALF;AAME,YAAA,QAAQ,EAAGvB,KAAD,IAAWH,MAAM,CAAC;AAAEG,cAAAA,KAAF;AAASF,cAAAA,EAAT;AAAayB,cAAAA,IAAI,EAAE;AAAnB,aAAD,CAN7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,eAcE;AACE,YAAA,SAAS,EAAC,aADZ;AAEE,YAAA,KAAK,EAAE;AACLC,cAAAA,MAAM,EAAE,MADH;AAELC,cAAAA,QAAQ,EAAE,MAFL;AAGLC,cAAAA,SAAS,EAAE,KAHN;AAILC,cAAAA,YAAY,EAAE,KAJT;AAKLC,cAAAA,KAAK,EAAE,KALF;AAMLC,cAAAA,aAAa,EAAE;AANV,aAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAWG,KAAKjB,SAAL,EAXH,CAdF,CADF;AA8BA;;AACF,aAAK,UAAL;AACEM,UAAAA,YAAY,gBACV;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE,+CACMtB,QAAQ,CAACyB,MADf;AAEE,YAAA,KAAK,EAAEzB,QAAQ,CAACS,KAFlB;AAGE,YAAA,MAAM,EAAGL,KAAD,IAAWH,MAAM,CAAC;AAAEG,cAAAA,KAAF;AAASF,cAAAA,EAAT;AAAayB,cAAAA,IAAI,EAAE;AAAnB,aAAD,CAH3B;AAIE,YAAA,QAAQ,EAAGvB,KAAD,IAAWH,MAAM,CAAC;AAAEG,cAAAA,KAAF;AAASF,cAAAA,EAAT;AAAayB,cAAAA,IAAI,EAAE;AAAnB,aAAD,CAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAOE;AACE,YAAA,SAAS,EAAC,aADZ;AAEE,YAAA,KAAK,EAAE;AACLC,cAAAA,MAAM,EAAE,MADH;AAELC,cAAAA,QAAQ,EAAE,MAFL;AAGLC,cAAAA,SAAS,EAAE,KAHN;AAILC,cAAAA,YAAY,EAAE,KAJT;AAKLC,cAAAA,KAAK,EAAE,KALF;AAMLC,cAAAA,aAAa,EAAE;AANV,aAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAWG,KAAKjB,SAAL,EAXH,CAPF,CADF;AAuBA;;AACF,aAAK,QAAL;AACEM,UAAAA,YAAY,gBACV;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGtB,QAAQ,CAACwB,SAAT,gBACC;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA8BxB,QAAQ,CAACyB,MAAT,CAAgBC,KAA9C,CADD,GAEG,IAHN,eAIE;AACE,YAAA,SAAS,EAAC,aADZ;AAEE,YAAA,KAAK,EAAE;AACLE,cAAAA,MAAM,EAAE,MADH;AAELC,cAAAA,QAAQ,EAAE,MAFL;AAGLC,cAAAA,SAAS,EAAE,KAHN;AAILC,cAAAA,YAAY,EAAE,KAJT;AAKLC,cAAAA,KAAK,EAAE,KALF;AAMLC,cAAAA,aAAa,EAAE;AANV,aAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAWG,KAAKjB,SAAL,EAXH,CAJF,CADF;AAoBA;;AACF,aAAK,UAAL;AACEM,UAAAA,YAAY,gBACV;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGtB,QAAQ,CAACwB,SAAT,gBACC;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA8BxB,QAAQ,CAACyB,MAAT,CAAgBC,KAA9C,CADD,GAEG,IAHN,eAIE,kDACM1B,QAAQ,CAACyB,MADf;AAEE,YAAA,KAAK,EAAEzB,QAAQ,CAACS,KAFlB;AAGE,YAAA,MAAM,EAAGL,KAAD,IAAWH,MAAM,CAAC;AAAEG,cAAAA,KAAF;AAASF,cAAAA,EAAT;AAAayB,cAAAA,IAAI,EAAE;AAAnB,aAAD,CAH3B;AAIE,YAAA,QAAQ,EAAGvB,KAAD,IAAWH,MAAM,CAAC;AAAEG,cAAAA,KAAF;AAASF,cAAAA;AAAT,aAAD,CAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,EAUG,KAAKc,SAAL,EAVH,CADF;AAcA;;AACF,aAAK,aAAL;AACEM,UAAAA,YAAY,gBACV;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE,oBAAC,SAAD;AACE,YAAA,EAAE,EAAC,sBADL;AAEE,YAAA,SAAS,EAAC,sBAFZ;AAGE,YAAA,WAAW,EAAEtB,QAAQ,CAACyB,MAAT,CAAgBS,WAH/B;AAIE,YAAA,OAAO,EAAElC,QAAQ,CAACyB,MAAT,CAAgBU,OAJ3B;AAKE,YAAA,YAAY,EAAEnC,QAAQ,CAACS,KALzB;AAME,YAAA,OAAO,EAAC,GANV;AAOE,YAAA,QAAQ,EAAGL,KAAD,IAAW;AACnBP,cAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACAH,cAAAA,MAAM,CAAC;AAAEG,gBAAAA,KAAF;AAASgC,gBAAAA,SAAS,EAAE;AAAEC,kBAAAA,KAAK,EAAE;AAAT,iBAApB;AAAsCnC,gBAAAA;AAAtC,eAAD,CAAN;AACD,aAVH;AAWE,YAAA,UAAU,EAAE,CAXd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAcE,oBAAC,eAAD;AACE,YAAA,IAAI,EAAEnB,OADR;AAEE,YAAA,KAAK,EAAC,cAFR;AAGE,YAAA,OAAO,EAAE,KAAKO,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF,EAmBG,KAAKH,KAAL,CAAWC,WAAX,gBACC,oBAAC,MAAD;AACE,YAAA,KAAK,EAAE;AAAEkD,cAAAA,QAAQ,EAAE,UAAZ;AAAwBC,cAAAA,KAAK,EAAE,CAA/B;AAAkCC,cAAAA,GAAG,EAAE;AAAvC,aADT;AAEE,YAAA,QAAQ,EAAE,KAAK/C,QAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,GAKG,IAxBN,CADF,CADF;AA8BA;;AACF,aAAK,SAAL;AACE6B,UAAAA,YAAY,gBACV;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGtB,QAAQ,CAACwB,SAAT,gBACC;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA8BxB,QAAQ,CAACyB,MAAT,CAAgBC,KAA9C,CADD,GAEG,IAHN,eAIE,oBAAC,SAAD;AACE,YAAA,SAAS,EAAC,OADZ;AAEE,YAAA,WAAW,EAAE1B,QAAQ,CAACyB,MAAT,CAAgBS,WAF/B;AAGE,YAAA,OAAO,EAAElC,QAAQ,CAACyB,MAAT,CAAgBU,OAH3B;AAIE,YAAA,OAAO,EAAC,GAJV;AAKE,YAAA,YAAY,EAAEnC,QAAQ,CAACS,KALzB,CAME;AANF;AAOE,YAAA,QAAQ,EAAGL,KAAD,IAAW;AACnBP,cAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACAH,cAAAA,MAAM,CAAC;AAAEG,gBAAAA,KAAF;AAASF,gBAAAA;AAAT,eAAD,CAAN;AACD,aAVH;AAWE,YAAA,UAAU,EAAE,CAXd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,CADF;AAoBA;;AACF,aAAK,eAAL;AACEoB,UAAAA,YAAY,gBACV;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGtB,QAAQ,CAACwB,SAAT,gBACC;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA8BxB,QAAQ,CAACyB,MAAT,CAAgBC,KAA9C,CADD,GAEG,IAHN,eAIE,oBAAC,SAAD;AACE,YAAA,SAAS,EAAC,OADZ;AAEE,YAAA,WAAW,EAAE1B,QAAQ,CAACyB,MAAT,CAAgBS,WAF/B;AAGE,YAAA,OAAO,EAAElC,QAAQ,CAACyB,MAAT,CAAgBU,OAH3B;AAIE,YAAA,OAAO,EAAC,GAJV;AAKE,YAAA,QAAQ,EAAG/B,KAAD,IAAW;AACnBP,cAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACAH,cAAAA,MAAM,CAAC;AAAEG,gBAAAA,KAAF;AAASF,gBAAAA;AAAT,eAAD,CAAN;AACD,aARH;AASE,YAAA,UAAU,EAAE,CATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,CADF;AAkBA;;AACF;AACEoB,UAAAA,YAAY,GAAG,IAAf;AAzMJ;;AA2MA,aAAOA,YAAP;AACD,KAxP+B;AAAA;;AA0PhCmB,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAK,MAAA,KAAK,EAAC,qBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC,KAAKpB,cAAL,EAAlC,CAAP;AACD;;AA5P+B;;AA+PlC,eAAenC,SAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport faExclamation from \"@fortawesome/fontawesome-free-solid/faExclamation\";\r\nimport faSmile from \"@fortawesome/fontawesome-free-solid/faSmile\";\r\nimport TextInput from \"react-autocomplete-input\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\nimport { Picker } from \"emoji-mart\";\r\n\r\nclass FormField extends Component {\r\n  state = {\r\n    emojiToggle: false,\r\n    selectedEmoji: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({ emojiToggle: !this.state.emojiToggle });\r\n  };\r\n  addEmoji = (e) => {\r\n    const input = document.getElementById(\"description_textarea\");\r\n    console.log(input.selectionStart);\r\n    const { formData, change, id } = this.props;\r\n    let event = e.native;\r\n    //Copy icon\r\n    var textfield = document.createElement(\"input\");\r\n    textfield.type = \"text\";\r\n    textfield.value = event;\r\n    document.body.appendChild(textfield);\r\n    textfield.select();\r\n    textfield.setSelectionRange(0, 99999);\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(textfield);\r\n  };\r\n\r\n  showError = () => {\r\n    const { formData } = this.props;\r\n    if (formData.validation && !formData.valid) {\r\n      if (formData.validationMessage) {\r\n        return (\r\n          <div>\r\n            <FontAwesomeIcon\r\n              icon={faExclamation}\r\n              style={{ marginRight: \"10px\" }}\r\n            />\r\n            {formData.validationMessage}\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  renderTemplate = () => {\r\n    const { formData, change, id } = this.props;\r\n    let formTemplate = null;\r\n    switch (formData.element) {\r\n      case \"input\":\r\n        formTemplate = (\r\n          <div className=\"formBlock\">\r\n            {formData.showlabel ? (\r\n              <div className=\"label_input\">{formData.config.label}</div>\r\n            ) : null}\r\n            <input\r\n              {...formData.config}\r\n              value={formData.value}\r\n              //sự kiện onBlur được dùng để validate required\r\n              onBlur={(event) => change({ event, id, blur: true })}\r\n              //sự kiện change được dùng để validate email/password có pass đc Regex không\r\n              onChange={(event) => change({ event, id, blur: true })}\r\n            />\r\n            <div\r\n              className=\"error_label\"\r\n              style={{\r\n                height: \"20px\",\r\n                fontSize: \"15px\",\r\n                marginTop: \"5px\",\r\n                marginBottom: \"5px\",\r\n                color: \"red\",\r\n                textTransform: \"capitalize\",\r\n              }}\r\n            >\r\n              {this.showError()}\r\n            </div>\r\n          </div>\r\n        );\r\n        break;\r\n      case \"datetime\":\r\n        formTemplate = (\r\n          <div className=\"formBlock\">\r\n            {formData.showlabel ? (\r\n              <div className=\"label_input\">{formData.config.label}</div>\r\n            ) : null}\r\n\r\n            <input\r\n              {...formData.config}\r\n              value={formData.value}\r\n              //sự kiện onBlur được dùng để validate required\r\n              onBlur={(event) => change({ event, id, blur: true })}\r\n              //sự kiện change được dùng để validate email/password có pass đc Regex không\r\n              onChange={(event) => change({ event, id, blur: true })}\r\n            />\r\n\r\n            <div\r\n              className=\"error_label\"\r\n              style={{\r\n                height: \"20px\",\r\n                fontSize: \"15px\",\r\n                marginTop: \"5px\",\r\n                marginBottom: \"5px\",\r\n                color: \"red\",\r\n                textTransform: \"capitalize\",\r\n              }}\r\n            >\r\n              {this.showError()}\r\n            </div>\r\n          </div>\r\n        );\r\n        break;\r\n      case \"password\":\r\n        formTemplate = (\r\n          <div className=\"formBlock\">\r\n            <input\r\n              {...formData.config}\r\n              value={formData.value}\r\n              onBlur={(event) => change({ event, id, blur: true })}\r\n              onChange={(event) => change({ event, id, blur: true })}\r\n            />\r\n            <div\r\n              className=\"error_label\"\r\n              style={{\r\n                height: \"20px\",\r\n                fontSize: \"15px\",\r\n                marginTop: \"5px\",\r\n                marginBottom: \"5px\",\r\n                color: \"red\",\r\n                textTransform: \"capitalize\",\r\n              }}\r\n            >\r\n              {this.showError()}\r\n            </div>\r\n          </div>\r\n        );\r\n        break;\r\n      case \"select\":\r\n        formTemplate = (\r\n          <div className=\"formBlock\">\r\n            {formData.showlabel ? (\r\n              <div className=\"label_input\">{formData.config.label}</div>\r\n            ) : null}\r\n            <div\r\n              className=\"error_label\"\r\n              style={{\r\n                height: \"20px\",\r\n                fontSize: \"15px\",\r\n                marginTop: \"5px\",\r\n                marginBottom: \"5px\",\r\n                color: \"red\",\r\n                textTransform: \"capitalize\",\r\n              }}\r\n            >\r\n              {this.showError()}\r\n            </div>\r\n          </div>\r\n        );\r\n        break;\r\n      case \"textarea\":\r\n        formTemplate = (\r\n          <div className=\"formBlock\">\r\n            {formData.showlabel ? (\r\n              <div className=\"label_input\">{formData.config.label}</div>\r\n            ) : null}\r\n            <textarea\r\n              {...formData.config}\r\n              value={formData.value}\r\n              onBlur={(event) => change({ event, id, blur: true })}\r\n              onChange={(event) => change({ event, id })}\r\n            />\r\n            {this.showError()}\r\n          </div>\r\n        );\r\n        break;\r\n      case \"description\":\r\n        formTemplate = (\r\n          <div className=\"formBlock\">\r\n            <div className=\"description_input\">\r\n              <TextInput\r\n                id=\"description_textarea\"\r\n                className=\"description_textarea\"\r\n                placeholder={formData.config.placeholder}\r\n                options={formData.config.options}\r\n                defaultValue={formData.value}\r\n                trigger=\"#\"\r\n                onChange={(event) => {\r\n                  console.log(event);\r\n                  change({ event, emojiInfo: { emoji: false }, id });\r\n                }}\r\n                maxOptions={7}\r\n              />\r\n              <FontAwesomeIcon\r\n                icon={faSmile}\r\n                class=\"emoji_button\"\r\n                onClick={this.handleChange}\r\n              ></FontAwesomeIcon>\r\n              {this.state.emojiToggle ? (\r\n                <Picker\r\n                  style={{ position: \"absolute\", right: 0, top: \"100%\" }}\r\n                  onSelect={this.addEmoji}\r\n                />\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        );\r\n        break;\r\n      case \"userTag\":\r\n        formTemplate = (\r\n          <div className=\"formBlock\">\r\n            {formData.showlabel ? (\r\n              <div className=\"label_input\">{formData.config.label}</div>\r\n            ) : null}\r\n            <TextInput\r\n              Component=\"input\"\r\n              placeholder={formData.config.placeholder}\r\n              options={formData.config.options}\r\n              trigger=\"@\"\r\n              defaultValue={formData.value}\r\n              // onChange={this.handleChange}\r\n              onChange={(event) => {\r\n                console.log(event);\r\n                change({ event, id });\r\n              }}\r\n              maxOptions={7}\r\n            />\r\n          </div>\r\n        );\r\n        break;\r\n      case \"locationInput\":\r\n        formTemplate = (\r\n          <div className=\"formBlock\">\r\n            {formData.showlabel ? (\r\n              <div className=\"label_input\">{formData.config.label}</div>\r\n            ) : null}\r\n            <TextInput\r\n              Component=\"input\"\r\n              placeholder={formData.config.placeholder}\r\n              options={formData.config.options}\r\n              trigger=\"#\"\r\n              onChange={(event) => {\r\n                console.log(event);\r\n                change({ event, id });\r\n              }}\r\n              maxOptions={3}\r\n            />\r\n          </div>\r\n        );\r\n        break;\r\n      default:\r\n        formTemplate = null;\r\n    }\r\n    return formTemplate;\r\n  };\r\n\r\n  render() {\r\n    return <div class=\"formField_container\">{this.renderTemplate()}</div>;\r\n  }\r\n}\r\n\r\nexport default FormField;\r\n"]},"metadata":{},"sourceType":"module"}