{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kltn\\\\test\\\\social-media\\\\client\\\\src\\\\components\\\\Admin\\\\login\\\\login.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport FormField from '../../ultils/Form/FormField';\nimport { update, generateData, ifFormValid } from '../../ultils/Form/FormActions';\nimport { loginUser } from '../../../actions/user_action';\nimport { withRouter } from 'react-router-dom';\nimport MyButton from '../../ultils/button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      formError: false,\n      formSuccess: '',\n      formData: {\n        email: {\n          element: 'input',\n          value: '',\n          config: {\n            label: 'Tên tài khoản',\n            name: 'email_input',\n            type: 'email',\n            placeholder: ''\n          },\n          validation: {\n            required: true,\n            email: true\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showlabel: true\n        },\n        password: {\n          element: 'password',\n          value: '',\n          config: {\n            name: 'password_input',\n            type: 'password',\n            placeholder: ''\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          validationMessage: ''\n        }\n      }\n    };\n\n    this.updateForm = element => {\n      //Hàm update được viết trong FormActions.js\n      const newFormdata = update(element, this.state.formData, 'login'); //Cập nhật lại State\n\n      this.setState({\n        formError: false,\n        formData: newFormdata\n      });\n    };\n\n    this.submitForm = event => {\n      event.preventDefault();\n      let dataToSubmit = generateData(this.state.formData, 'login');\n      let formIsValid = ifFormValid(this.state.formData, 'login');\n      console.log(\"login\", dataToSubmit);\n\n      if (formIsValid) {\n        this.props.dispatch(loginUser(dataToSubmit)).then(response => {\n          if (response.payload.loginSuccess) {\n            console.log(response.payload);\n            this.props.history.push('/Admin/Dashboard');\n          } else {\n            this.setState({\n              formError: true\n            });\n          }\n        });\n      } else {\n        this.setState({\n          formError: true\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signin\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Admin_signin__container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"signin__form\",\n          onSubmit: event => this.submitForm(event),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"signin__logo\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"logo\",\n              src: require('../../../asset/login-page/logo2x.png')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"stunning_text\",\n              src: require('../../../asset/login-page/stun2x.png')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"or_label\",\n            children: \"D\\xC0NH CHO QU\\u1EA2N TR\\u1ECA VI\\xCAN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            id: 'email',\n            formData: this.state.formData.email //Hàm change nhận vào một element và gọi đến hàm updateForm(element) \n            ,\n            change: element => this.updateForm(element)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"password_container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"label\",\n              children: \"M\\u1EADt kh\\u1EA9u\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"password_forgot_link\",\n              children: /*#__PURE__*/_jsxDEV(MyButton, {\n                type: \"default\",\n                title: \"Qu\\xEAn m\\u1EADt kh\\u1EA9u\",\n                linkTo: \"/reset_password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            id: 'password',\n            formData: this.state.formData.password,\n            change: element => this.updateForm(element)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), this.state.formError ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"errorLabel\",\n            children: \"PLease check yoour data!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 29\n          }, this) : '', /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"signin__button\",\n            onClick: event => {\n              this.submitForm(event);\n            },\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this);\n  }\n\n} //HOC connect và withRouter \n//gắn vào component Login các props dispatch, getStored, history,....\n\n\nexport default connect()(withRouter(Login));","map":{"version":3,"names":["React","Component","connect","FormField","update","generateData","ifFormValid","loginUser","withRouter","MyButton","Login","state","formError","formSuccess","formData","email","element","value","config","label","name","type","placeholder","validation","required","valid","touched","validationMessage","showlabel","password","updateForm","newFormdata","setState","submitForm","event","preventDefault","dataToSubmit","formIsValid","console","log","props","dispatch","then","response","payload","loginSuccess","history","push","render","require"],"sources":["D:/Kltn/test/social-media/client/src/components/Admin/login/login.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FormField from '../../ultils/Form/FormField';\r\nimport { update, generateData, ifFormValid } from '../../ultils/Form/FormActions';\r\nimport { loginUser } from '../../../actions/user_action'; \r\nimport { withRouter } from 'react-router-dom';\r\nimport MyButton from '../../ultils/button';\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        formError: false,\r\n        formSuccess: '',\r\n        formData: {\r\n            email: {\r\n                element: 'input',\r\n                value: '',\r\n                config: {\r\n                    label: 'Tên tài khoản',\r\n                    name: 'email_input',\r\n                    type: 'email',\r\n                    placeholder: ''\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    email: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: true\r\n            },\r\n            password: {\r\n                element: 'password',\r\n                value: '',\r\n                config: {\r\n                    name: 'password_input',\r\n                    type: 'password',\r\n                    placeholder: ''\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                validationMessage: '',\r\n            }\r\n        }\r\n    }\r\n    //Hàm này truyền vào props change của formfield để khi có thay đổi trên Formfield\r\n    //thì gọi đến callback Funciton này xử lý các thay đổi và cập nhật lại state -> reRender lại component\r\n    updateForm = (element) => {\r\n        //Hàm update được viết trong FormActions.js\r\n        const newFormdata = update(element, this.state.formData, 'login');\r\n        //Cập nhật lại State\r\n        this.setState({\r\n            formError: false,\r\n            formData: newFormdata\r\n        });\r\n    }\r\n    submitForm = (event) => {\r\n        event.preventDefault();\r\n\r\n        let dataToSubmit = generateData(this.state.formData, 'login');\r\n\r\n        let formIsValid = ifFormValid(this.state.formData, 'login');\r\n        console.log(\"login\",dataToSubmit);\r\n        if (formIsValid) {\r\n            this.props.dispatch(loginUser(dataToSubmit)).then(response => {\r\n                if (response.payload.loginSuccess) {\r\n                    console.log(response.payload);\r\n                    this.props.history.push('/Admin/Dashboard')\r\n                } else {\r\n                    this.setState({\r\n                        formError: true\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                formError: true\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"signin\">\r\n                <div className='Admin_signin__container'>\r\n                    <form className='signin__form' onSubmit={(event) => this.submitForm(event)}>\r\n                        {/* Component Formfild trả lại các thành phần của form \r\n                    như text, checkBox, button,... dựa vào prop id \r\n                        Component Formfield nhận vào 3 props:\r\n                        - id: id của trường này\r\n                        - formData: dữ liệu cho field, sử dụng những dữ liệu trong formData này để xử lý các sự kiện thay đổi trên field, gồm có:\r\n                                    element: là element ( thẻ input, checkBox, button, .....)\r\n                                    value: giá trị của element '',\r\n                                    config: là 1 object là các props của Thẻ ví dụ \r\n                                        {\r\n                                            name: 'email_input',\r\n                                            type: 'email',\r\n                                            placeholder: 'Enter your email'\r\n                                        },\r\n                                    validation: là 1 Obj chứa các kiểu xác thực là key, \r\n                                                nếu value là true thì field này phải đc xác thực theo kiểu đó, ví dụ: \r\n                                                {\r\n                                                    required: true,\r\n                                                    email: true\r\n                                                },\r\n                                    valid: Xác thực hay không ( false/ true)\r\n                                    touched: Có đc touch hay không (false/true) \r\n                                    validationMessage: Lưu message sau khi xác thực ('thành công'/'thất bại'),\r\n                        -change: callBackfunction dùng để xử lý sự kiện thay đổi trên field */}\r\n\r\n                        <div className='signin__logo'>\r\n                            <img className=\"logo\" src={require('../../../asset/login-page/logo2x.png')} />\r\n                            <img className=\"stunning_text\" src={require('../../../asset/login-page/stun2x.png')} />\r\n                        </div>\r\n                        <div className=\"or_label\">\r\n                            DÀNH CHO QUẢN TRỊ VIÊN\r\n                        </div>\r\n                        <FormField\r\n                            id={'email'}\r\n                            formData={this.state.formData.email}\r\n                            //Hàm change nhận vào một element và gọi đến hàm updateForm(element) \r\n                            change={(element) => this.updateForm(element)}\r\n                        />\r\n                        <div className=\"password_container\">\r\n                            <div className=\"label\">\r\n                                Mật khẩu\r\n                        </div>\r\n                            <div className=\"password_forgot_link\">\r\n                                <MyButton\r\n                                    type=\"default\"\r\n                                    title=\"Quên mật khẩu\"\r\n                                    linkTo=\"/reset_password\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <FormField\r\n                            id={'password'}\r\n                            formData={this.state.formData.password}\r\n                            change={(element) => this.updateForm(element)}\r\n                        />\r\n                        {this.state.formError ?\r\n                            <div className=\"errorLabel\">\r\n                                PLease check yoour data!\r\n                        </div>\r\n                            : ''}\r\n\r\n                        <button className='signin__button' onClick={(event) => { this.submitForm(event) }}>Login</button>\r\n                      \r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n//HOC connect và withRouter \r\n//gắn vào component Login các props dispatch, getStored, history,....\r\nexport default connect()(withRouter(Login));"],"mappings":"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"},"metadata":{},"sourceType":"module"}