{"ast":null,"code":"import axios from 'axios';\nimport { ACCOUNT_SERVER } from '../components/ultils/mise';\nimport { GET_ALL_ACCOUNT, SORT_ACCOUNT, UPDATE_ACCOUNT, DELETE_ACCOUNT, GET_ACCOUNT } from './types';\nexport function getAll(limit, skip) {\n  let prevState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  const data = {\n    skip,\n    limit\n  };\n  console.log(data);\n  const request = axios.post(`${ACCOUNT_SERVER}/getAll`, data).then(response => {\n    console.log(response.data.accounts);\n    let newState = [...prevState, ...response.data.accounts];\n    return {\n      size: response.data.size,\n      accounts: newState\n    };\n  });\n  return {\n    type: GET_ALL_ACCOUNT,\n    payload: request\n  };\n}\nexport function sort(sortBy, list) {\n  switch (sortBy.type) {\n    case \"name\":\n      list.sort((a, b) => {\n        if (a.name > b.name) {\n          console.log(a.name, b.name);\n          return 1 * sortBy.order;\n        } else {\n          console.log(a.name, b.name);\n          return -1 * sortBy.order;\n        }\n      });\n      console.log(list);\n      return list;\n\n    case \"userName\":\n      list.sort((a, b) => {\n        if (a.userName > b.userName) {\n          return 1 * sortBy.order;\n        } else {\n          return -1 * sortBy.order;\n        }\n      });\n      console.log(list);\n      return list;\n\n    case \"email\":\n      console.log(sortBy);\n      list.sort((a, b) => {\n        if (a.email > b.email) {\n          return 1 * sortBy.order;\n        } else {\n          return -1 * sortBy.order;\n        }\n      });\n      console.log(list);\n      return list;\n\n    default:\n      return list;\n  }\n} // export function getReportDetail(id) {\n//     const data = { id }\n//     const request = axios.post(`${REPORT_SERVER}/getDetail`, data)\n//         .then(response => {\n//             console.log(response.data);\n//             return response.data\n//         })\n//     return {\n//         type: GET_REPORT_DETAIL,\n//         payload: request\n//     }\n// }\n// export function updateReport(id) {\n//     const data = { id }\n//     const request = axios.put(`${REPORT_SERVER}/updateReport`, data)\n//         .then(response => {\n//             console.log(response.data);\n//             return response.data\n//         })\n//     return {\n//         type: UPDATE_REPORT,\n//         payload: request\n//     }\n// }\n// export function deletePost(postId, reportId) {\n//     const data = { postId, reportId }\n//     const request = axios.post(`${REPORT_SERVER}/delete_post`, data)\n//         .then(response => {\n//             console.log(response.data);\n//             return response.data\n//         })\n//     return {\n//         type: UPDATE_REPORT,\n//         payload: request\n//     }\n// }","map":{"version":3,"names":["axios","ACCOUNT_SERVER","GET_ALL_ACCOUNT","SORT_ACCOUNT","UPDATE_ACCOUNT","DELETE_ACCOUNT","GET_ACCOUNT","getAll","limit","skip","prevState","data","console","log","request","post","then","response","accounts","newState","size","type","payload","sort","sortBy","list","a","b","name","order","userName","email"],"sources":["D:/Kltn/test/social-media/client/src/actions/account_actions.js"],"sourcesContent":["import axios from 'axios';\r\nimport { ACCOUNT_SERVER,  } from '../components/ultils/mise';\r\nimport {\r\n    GET_ALL_ACCOUNT,\r\n    SORT_ACCOUNT,\r\n    UPDATE_ACCOUNT,\r\n    DELETE_ACCOUNT,\r\n    GET_ACCOUNT,\r\n} from './types';\r\n\r\nexport function getAll(limit, skip, prevState = []) {\r\n    const data = {\r\n        skip,\r\n        limit,\r\n    }\r\n    console.log(data);\r\n    const request = axios.post(`${ACCOUNT_SERVER}/getAll`, data)\r\n        .then(response => {\r\n            console.log(response.data.accounts);\r\n            let newState = [\r\n                ...prevState,\r\n                ...response.data.accounts\r\n            ]\r\n            return {\r\n                size: response.data.size,\r\n                accounts: newState\r\n            }\r\n        })\r\n    return {\r\n        type: GET_ALL_ACCOUNT,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function sort(sortBy, list) {\r\n    switch (sortBy.type) {\r\n        case \"name\":\r\n            list.sort((a, b) => {\r\n                if (a.name > b.name) {\r\n                    console.log(a.name,b.name);\r\n                    return 1 * sortBy.order\r\n                } else {\r\n                    console.log(a.name, b.name);\r\n                    return -1 * sortBy.order\r\n                }\r\n            })\r\n            console.log(list);\r\n            return list;\r\n        case \"userName\":\r\n            list.sort((a, b) => {\r\n                if (a.userName > b.userName) {\r\n                    return 1 * sortBy.order\r\n                } else {\r\n                    return -1 * sortBy.order\r\n                }\r\n            })\r\n            console.log(list);\r\n            return list;\r\n        case \"email\":\r\n            console.log(sortBy);\r\n            list.sort((a, b) => {\r\n                if (a.email > b.email) {\r\n                    return 1 * sortBy.order\r\n                } else {\r\n                    return -1 * sortBy.order\r\n                }\r\n            })\r\n            console.log(list);\r\n            return list;\r\n        default: return list;\r\n    }\r\n}\r\n\r\n// export function getReportDetail(id) {\r\n//     const data = { id }\r\n//     const request = axios.post(`${REPORT_SERVER}/getDetail`, data)\r\n//         .then(response => {\r\n//             console.log(response.data);\r\n//             return response.data\r\n//         })\r\n//     return {\r\n//         type: GET_REPORT_DETAIL,\r\n//         payload: request\r\n//     }\r\n// }\r\n\r\n// export function updateReport(id) {\r\n//     const data = { id }\r\n//     const request = axios.put(`${REPORT_SERVER}/updateReport`, data)\r\n//         .then(response => {\r\n//             console.log(response.data);\r\n//             return response.data\r\n//         })\r\n//     return {\r\n//         type: UPDATE_REPORT,\r\n//         payload: request\r\n//     }\r\n// }\r\n\r\n// export function deletePost(postId, reportId) {\r\n//     const data = { postId, reportId }\r\n//     const request = axios.post(`${REPORT_SERVER}/delete_post`, data)\r\n//         .then(response => {\r\n//             console.log(response.data);\r\n//             return response.data\r\n//         })\r\n//     return {\r\n//         type: UPDATE_REPORT,\r\n//         payload: request\r\n//     }\r\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module"}