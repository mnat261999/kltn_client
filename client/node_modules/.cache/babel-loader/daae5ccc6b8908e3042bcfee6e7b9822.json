{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kltn\\\\test\\\\social-media\\\\client\\\\src\\\\hoc\\\\auth.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { auth } from \"../actions/user_action\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nexport default function (ComposedClass, reload, adminRoute = null) {\n  class AuthenicationCheck extends Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        loading: true\n      };\n    }\n\n    //Sau khi render\n    componentDidMount() {\n      //gọi hàm auth trong user_action gửi request đến sever lấy dữ liệu về đưa vào payload\n      //hàm auth trả về action -> dispatch action đến userreducer này để cập nhật lại store\n      this.props.dispatch(auth()).then(respond => {\n        //Lấy userData từ trong props của class AuthenicationCheck\n        let user = this.props.user.userData; // console.log(this.props.user);\n        //Kiểm tra nếu isAuth false là thì trở lại trang đăng nhập\n\n        if (!user.isAuth) {\n          if (reload) {\n            if (adminRoute) {\n              this.props.history.push(adminRoute);\n            } else {\n              this.props.history.push(\"/register_login\");\n            }\n          }\n        } //nếu isAuth true là thì dẫn vào trang newfeed\n        else {\n            //Là trang của admin\n            if (adminRoute != null) {\n              //ng dùng k phải admin chuyển qua trang đăng nhập của admin\n              if (!user.isAdmin) {\n                if (reload === true) {\n                  this.props.history.push(\"/Newfeed\");\n                }\n              }\n\n              if (reload === false) {\n                this.props.history.push(\"/Admin/Dashboard\");\n              }\n            } else {\n              if (user.isAdmin) {\n                this.props.history.push(\"/Admin/Dashboard\");\n              }\n\n              if (reload === false) {\n                this.props.history.push(\"/Newfeed\");\n              }\n            }\n          }\n\n        this.setState({\n          loading: false\n        });\n      });\n    }\n\n    render() {\n      if (this.state.loading) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"main_loader\",\n          style: {\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(CircularProgress, {\n          style: {\n            color: \"#5477D5\"\n          },\n          thickness: 7,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }\n        }));\n      } else {\n        //this.props.user là prop của class AuthenticationCheck\n        //{...this.props} để copy luôn các state loading của class AuthenticationCheck\n        return /*#__PURE__*/React.createElement(ComposedClass, Object.assign({}, this.props, {\n          user: this.props.user,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 16\n          }\n        }));\n      }\n    }\n\n  } //state trong hàm này là state trong store của redux\n  //Hàm này lấy state của reducer user trong store đưa vào làm prop của class AuthenicationCheck\n\n\n  function mapStateToProps(state) {\n    return {\n      user: state.user\n    };\n  }\n\n  return connect(mapStateToProps)(AuthenicationCheck);\n}","map":{"version":3,"sources":["D:/Kltn/test/social-media/client/src/hoc/auth.js"],"names":["React","Component","connect","auth","CircularProgress","ComposedClass","reload","adminRoute","AuthenicationCheck","state","loading","componentDidMount","props","dispatch","then","respond","user","userData","isAuth","history","push","isAdmin","setState","render","position","top","left","transform","color","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { auth } from \"../actions/user_action\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nexport default function (ComposedClass, reload, adminRoute = null) {\n  class AuthenicationCheck extends Component {\n    state = {\n      loading: true,\n    };\n\n    //Sau khi render\n    componentDidMount() {\n      //gọi hàm auth trong user_action gửi request đến sever lấy dữ liệu về đưa vào payload\n      //hàm auth trả về action -> dispatch action đến userreducer này để cập nhật lại store\n      this.props.dispatch(auth()).then((respond) => {\n        //Lấy userData từ trong props của class AuthenicationCheck\n        let user = this.props.user.userData;\n        // console.log(this.props.user);\n        //Kiểm tra nếu isAuth false là thì trở lại trang đăng nhập\n        if (!user.isAuth) {\n          if (reload) {\n            if (adminRoute) {\n              this.props.history.push(adminRoute);\n            } else {\n              this.props.history.push(\"/register_login\");\n            }\n          }\n        }\n        //nếu isAuth true là thì dẫn vào trang newfeed\n        else {\n          //Là trang của admin\n          if (adminRoute != null) {\n            //ng dùng k phải admin chuyển qua trang đăng nhập của admin\n            if (!user.isAdmin) {\n              if (reload === true) {\n                this.props.history.push(\"/Newfeed\");\n              }\n            }\n            if (reload === false) {\n              this.props.history.push(\"/Admin/Dashboard\");\n            }\n          } else {\n            if (user.isAdmin) {\n              this.props.history.push(\"/Admin/Dashboard\");\n            }\n            if (reload === false) {\n              this.props.history.push(\"/Newfeed\");\n            }\n          }\n        }\n        this.setState({ loading: false });\n      });\n    }\n\n    render() {\n      if (this.state.loading) {\n        return (\n          <div\n            className=\"main_loader\"\n            style={{\n              position: \"absolute\",\n              top: \"50%\",\n              left: \"50%\",\n              transform: \"translate(-50%, -50%)\",\n            }}\n          >\n            <CircularProgress style={{ color: \"#5477D5\" }} thickness={7} />\n          </div>\n        );\n      } else {\n        //this.props.user là prop của class AuthenticationCheck\n        //{...this.props} để copy luôn các state loading của class AuthenticationCheck\n        return <ComposedClass {...this.props} user={this.props.user} />;\n      }\n    }\n  }\n\n  //state trong hàm này là state trong store của redux\n  //Hàm này lấy state của reducer user trong store đưa vào làm prop của class AuthenicationCheck\n  function mapStateToProps(state) {\n    return {\n      user: state.user,\n    };\n  }\n\n  return connect(mapStateToProps)(AuthenicationCheck);\n}\n"]},"metadata":{},"sourceType":"module"}