{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kltn\\\\test\\\\social-media\\\\client\\\\src\\\\components\\\\ultils\\\\FileUpload.js\";\nimport React, { Component } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport faImages from \"@fortawesome/fontawesome-free-solid/faImages\";\nimport faTimesCircle from \"@fortawesome/fontawesome-free-solid/faTimesCircle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nclass FileUpload extends Component {\n  constructor() {\n    super();\n\n    this.updateImageList = image => {\n      console.log(image);\n      this.setState({\n        uploadedImages: [...this.state.uploadedImages, image]\n      }, () => {\n        this.props.imagesHandler(this.state.uploadedImages);\n      });\n    };\n\n    this.onDrop = async files => {\n      console.log(\"files\", files);\n      this.setState({\n        uploading: true\n      });\n      let formData = new FormData();\n      const config = {\n        header: {\n          \"content-type\": \"multipart/form-data\"\n        }\n      };\n      formData.append(\"file\", files[0]);\n      this.setState({\n        uploading: false,\n        uploadedFiles: [...this.state.uploadedFiles, URL.createObjectURL(files[0])]\n      });\n      this.readFile(files[0], image => this.updateImageList(image));\n    };\n\n    this.onRemove = id => {\n      this.setState({\n        uploading: true\n      });\n      axios.get(`/api/users/removeimage?public_id=${id}`).then(response => {\n        let images = this.state.uploadedFiles.filter(item => {\n          return item.public_id !== id;\n        });\n        this.setState({\n          uploading: false,\n          uploadedFiles: images\n        }, () => {\n          this.props.imagesHandler(images);\n        });\n      });\n    };\n\n    this.showUploadImages = () => this.state.uploadedFiles.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropzone_UploadedImg_wrapper\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: \"delete_image_icon\",\n      onClick: () => this.onRemove(item.public_id),\n      icon: faTimesCircle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploaded_img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"uploaded_img\",\n      src: item,\n      alt: \"photo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }))));\n\n    this.state = {\n      uploadedFiles: [],\n      uploadedImages: [],\n      uploading: false,\n      imageTest: \"\"\n    };\n  }\n\n  readFile(file, callback) {\n    var reader = new FileReader();\n    var baseString;\n\n    reader.onloadend = function () {\n      baseString = reader.result;\n      callback(baseString);\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  static getDirevedStateFromProps(props, state) {\n    if (props.reset) {\n      return state = {\n        uploadedFiles: []\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropzone clear\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropzone_wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Dropzone, {\n      onDrop: e => this.onDrop(e),\n      multiple: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, ({\n      getRootProps,\n      getInputProps\n    }) => /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n      className: \"dropzone_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps, {\n      className: \"dropzone_Add_button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faImages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }))))), this.state.uploading ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"process_bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(LinearProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    })) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploaded_image_display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, this.showUploadImages()));\n  }\n\n}\n\nexport default FileUpload;","map":{"version":3,"sources":["D:/Kltn/test/social-media/client/src/components/ultils/FileUpload.js"],"names":["React","Component","Dropzone","axios","FontAwesomeIcon","faImages","faTimesCircle","CircularProgress","LinearProgress","FileUpload","constructor","updateImageList","image","console","log","setState","uploadedImages","state","props","imagesHandler","onDrop","files","uploading","formData","FormData","config","header","append","uploadedFiles","URL","createObjectURL","readFile","onRemove","id","get","then","response","images","filter","item","public_id","showUploadImages","map","index","imageTest","file","callback","reader","FileReader","baseString","onloadend","result","readAsDataURL","getDirevedStateFromProps","reset","render","e","getRootProps","getInputProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport faImages from \"@fortawesome/fontawesome-free-solid/faImages\";\r\nimport faTimesCircle from \"@fortawesome/fontawesome-free-solid/faTimesCircle\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\nclass FileUpload extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      uploadedFiles: [],\r\n      uploadedImages: [],\r\n      uploading: false,\r\n      imageTest: \"\",\r\n    };\r\n  }\r\n\r\n  updateImageList = (image) => {\r\n    console.log(image);\r\n    this.setState(\r\n      {\r\n        uploadedImages: [...this.state.uploadedImages, image],\r\n      },\r\n      () => {\r\n        this.props.imagesHandler(this.state.uploadedImages);\r\n      }\r\n    );\r\n  };\r\n\r\n  readFile(file, callback) {\r\n    var reader = new FileReader();\r\n    var baseString;\r\n    reader.onloadend = function () {\r\n      baseString = reader.result;\r\n      callback(baseString);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  onDrop = async (files) => {\r\n    console.log(\"files\", files);\r\n    this.setState({ uploading: true });\r\n    let formData = new FormData();\r\n    const config = {\r\n      header: { \"content-type\": \"multipart/form-data\" },\r\n    };\r\n    formData.append(\"file\", files[0]);\r\n    this.setState({\r\n      uploading: false,\r\n      uploadedFiles: [\r\n        ...this.state.uploadedFiles,\r\n        URL.createObjectURL(files[0]),\r\n      ],\r\n    });\r\n\r\n    this.readFile(files[0], (image) => this.updateImageList(image));\r\n  };\r\n\r\n  onRemove = (id) => {\r\n    this.setState({ uploading: true });\r\n    axios.get(`/api/users/removeimage?public_id=${id}`).then((response) => {\r\n      let images = this.state.uploadedFiles.filter((item) => {\r\n        return item.public_id !== id;\r\n      });\r\n      this.setState(\r\n        {\r\n          uploading: false,\r\n          uploadedFiles: images,\r\n        },\r\n        () => {\r\n          this.props.imagesHandler(images);\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  showUploadImages = () =>\r\n    this.state.uploadedFiles.map((item, index) => (\r\n      <div className=\"dropzone_UploadedImg_wrapper\" key={index}>\r\n        <FontAwesomeIcon\r\n          className=\"delete_image_icon\"\r\n          onClick={() => this.onRemove(item.public_id)}\r\n          icon={faTimesCircle}\r\n        />\r\n        <div className=\"uploaded_img\">\r\n          <img className=\"uploaded_img\" src={item} alt=\"photo\" />\r\n        </div>\r\n      </div>\r\n    ));\r\n\r\n  static getDirevedStateFromProps(props, state) {\r\n    if (props.reset) {\r\n      return (state = { uploadedFiles: [] });\r\n    }\r\n    return null;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"dropzone clear\">\r\n        <div className=\"dropzone_wrapper\">\r\n          <Dropzone onDrop={(e) => this.onDrop(e)} multiple={false}>\r\n            {({ getRootProps, getInputProps }) => (\r\n              <section>\r\n                <div {...getRootProps()} className=\"dropzone_container\">\r\n                  <input {...getInputProps()} />\r\n                  <div {...getRootProps} className=\"dropzone_Add_button\">\r\n                    <FontAwesomeIcon icon={faImages} />\r\n                  </div>\r\n                </div>\r\n              </section>\r\n            )}\r\n          </Dropzone>\r\n          {this.state.uploading ? (\r\n            <div className=\"process_bar\">\r\n              <LinearProgress />\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"uploaded_image_display\">{this.showUploadImages()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileUpload;\r\n"]},"metadata":{},"sourceType":"module"}