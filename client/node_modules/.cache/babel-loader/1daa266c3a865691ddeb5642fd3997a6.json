{"ast":null,"code":"import React, { useState, useCallback, useMemo } from 'react';\nimport { useTheme } from '@nivo/core';\nimport PropTypes from 'prop-types';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nvar isObject = function isObject(item) {\n  return typeof item === 'object' && !Array.isArray(item) && item !== null;\n};\n\nvar zeroPadding = {\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0\n};\n\nvar computeDimensions = function computeDimensions(_ref) {\n  var direction = _ref.direction,\n      itemsSpacing = _ref.itemsSpacing,\n      _padding = _ref.padding,\n      itemCount = _ref.itemCount,\n      itemWidth = _ref.itemWidth,\n      itemHeight = _ref.itemHeight;\n\n  if (typeof _padding !== 'number' && !isObject(_padding)) {\n    throw new Error('Invalid property padding, must be one of: number, object');\n  }\n\n  var padding = typeof _padding === 'number' ? {\n    top: _padding,\n    right: _padding,\n    bottom: _padding,\n    left: _padding\n  } : _objectSpread2(_objectSpread2({}, zeroPadding), _padding);\n  var horizontalPadding = padding.left + padding.right;\n  var verticalPadding = padding.top + padding.bottom;\n  var width = itemWidth + horizontalPadding;\n  var height = itemHeight + verticalPadding;\n  var spacing = (itemCount - 1) * itemsSpacing;\n\n  if (direction === 'row') {\n    width = itemWidth * itemCount + spacing + horizontalPadding;\n  } else if (direction === 'column') {\n    height = itemHeight * itemCount + spacing + verticalPadding;\n  }\n\n  return {\n    width: width,\n    height: height,\n    padding: padding\n  };\n};\n\nvar computePositionFromAnchor = function computePositionFromAnchor(_ref2) {\n  var anchor = _ref2.anchor,\n      translateX = _ref2.translateX,\n      translateY = _ref2.translateY,\n      containerWidth = _ref2.containerWidth,\n      containerHeight = _ref2.containerHeight,\n      width = _ref2.width,\n      height = _ref2.height;\n  var x = translateX;\n  var y = translateY;\n\n  switch (anchor) {\n    case 'top':\n      x += (containerWidth - width) / 2;\n      break;\n\n    case 'top-right':\n      x += containerWidth - width;\n      break;\n\n    case 'right':\n      x += containerWidth - width;\n      y += (containerHeight - height) / 2;\n      break;\n\n    case 'bottom-right':\n      x += containerWidth - width;\n      y += containerHeight - height;\n      break;\n\n    case 'bottom':\n      x += (containerWidth - width) / 2;\n      y += containerHeight - height;\n      break;\n\n    case 'bottom-left':\n      y += containerHeight - height;\n      break;\n\n    case 'left':\n      y += (containerHeight - height) / 2;\n      break;\n\n    case 'center':\n      x += (containerWidth - width) / 2;\n      y += (containerHeight - height) / 2;\n      break;\n  }\n\n  return {\n    x: x,\n    y: y\n  };\n};\n\nvar computeItemLayout = function computeItemLayout(_ref3) {\n  var direction = _ref3.direction,\n      justify = _ref3.justify,\n      symbolSize = _ref3.symbolSize,\n      symbolSpacing = _ref3.symbolSpacing,\n      width = _ref3.width,\n      height = _ref3.height;\n  var symbolX;\n  var symbolY;\n  var labelX;\n  var labelY;\n  var labelAnchor;\n  var labelAlignment;\n\n  switch (direction) {\n    case 'left-to-right':\n      symbolX = 0;\n      symbolY = (height - symbolSize) / 2;\n      labelY = height / 2;\n      labelAlignment = 'central';\n\n      if (justify === true) {\n        labelX = width;\n        labelAnchor = 'end';\n      } else {\n        labelX = symbolSize + symbolSpacing;\n        labelAnchor = 'start';\n      }\n\n      break;\n\n    case 'right-to-left':\n      symbolX = width - symbolSize;\n      symbolY = (height - symbolSize) / 2;\n      labelY = height / 2;\n      labelAlignment = 'central';\n\n      if (justify === true) {\n        labelX = 0;\n        labelAnchor = 'start';\n      } else {\n        labelX = width - symbolSize - symbolSpacing;\n        labelAnchor = 'end';\n      }\n\n      break;\n\n    case 'top-to-bottom':\n      symbolX = (width - symbolSize) / 2;\n      symbolY = 0;\n      labelX = width / 2;\n      labelAnchor = 'middle';\n\n      if (justify === true) {\n        labelY = height;\n        labelAlignment = 'alphabetic';\n      } else {\n        labelY = symbolSize + symbolSpacing;\n        labelAlignment = 'text-before-edge';\n      }\n\n      break;\n\n    case 'bottom-to-top':\n      symbolX = (width - symbolSize) / 2;\n      symbolY = height - symbolSize;\n      labelX = width / 2;\n      labelAnchor = 'middle';\n\n      if (justify === true) {\n        labelY = 0;\n        labelAlignment = 'text-before-edge';\n      } else {\n        labelY = height - symbolSize - symbolSpacing;\n        labelAlignment = 'alphabetic';\n      }\n\n      break;\n  }\n\n  return {\n    symbolX: symbolX,\n    symbolY: symbolY,\n    labelX: labelX,\n    labelY: labelY,\n    labelAnchor: labelAnchor,\n    labelAlignment: labelAlignment\n  };\n};\n\nvar SymbolCircle = function SymbolCircle(_ref) {\n  var x = _ref.x,\n      y = _ref.y,\n      size = _ref.size,\n      fill = _ref.fill,\n      _ref$borderWidth = _ref.borderWidth,\n      borderWidth = _ref$borderWidth === void 0 ? 0 : _ref$borderWidth,\n      _ref$borderColor = _ref.borderColor,\n      borderColor = _ref$borderColor === void 0 ? 'transparent' : _ref$borderColor;\n  return React.createElement(\"circle\", {\n    r: size / 2,\n    cx: x + size / 2,\n    cy: y + size / 2,\n    fill: fill,\n    strokeWidth: borderWidth,\n    stroke: borderColor,\n    style: {\n      pointerEvents: 'none'\n    }\n  });\n};\n\nvar SymbolDiamond = function SymbolDiamond(_ref) {\n  var x = _ref.x,\n      y = _ref.y,\n      size = _ref.size,\n      fill = _ref.fill,\n      _ref$borderWidth = _ref.borderWidth,\n      borderWidth = _ref$borderWidth === void 0 ? 0 : _ref$borderWidth,\n      _ref$borderColor = _ref.borderColor,\n      borderColor = _ref$borderColor === void 0 ? 'transparent' : _ref$borderColor;\n  return React.createElement(\"g\", {\n    transform: \"translate(\".concat(x, \",\").concat(y, \")\")\n  }, React.createElement(\"path\", {\n    d: \"\\n                    M\".concat(size / 2, \" 0\\n                    L\").concat(size * 0.8, \" \").concat(size / 2, \"\\n                    L\").concat(size / 2, \" \").concat(size, \"\\n                    L\").concat(size * 0.2, \" \").concat(size / 2, \"\\n                    L\").concat(size / 2, \" 0\\n                \"),\n    fill: fill,\n    strokeWidth: borderWidth,\n    stroke: borderColor,\n    style: {\n      pointerEvents: 'none'\n    }\n  }));\n};\n\nvar SymbolSquare = function SymbolSquare(_ref) {\n  var x = _ref.x,\n      y = _ref.y,\n      size = _ref.size,\n      fill = _ref.fill,\n      _ref$borderWidth = _ref.borderWidth,\n      borderWidth = _ref$borderWidth === void 0 ? 0 : _ref$borderWidth,\n      _ref$borderColor = _ref.borderColor,\n      borderColor = _ref$borderColor === void 0 ? 'transparent' : _ref$borderColor;\n  return React.createElement(\"rect\", {\n    x: x,\n    y: y,\n    fill: fill,\n    strokeWidth: borderWidth,\n    stroke: borderColor,\n    width: size,\n    height: size,\n    style: {\n      pointerEvents: 'none'\n    }\n  });\n};\n\nvar SymbolTriangle = function SymbolTriangle(_ref) {\n  var x = _ref.x,\n      y = _ref.y,\n      size = _ref.size,\n      fill = _ref.fill,\n      _ref$borderWidth = _ref.borderWidth,\n      borderWidth = _ref$borderWidth === void 0 ? 0 : _ref$borderWidth,\n      _ref$borderColor = _ref.borderColor,\n      borderColor = _ref$borderColor === void 0 ? 'transparent' : _ref$borderColor;\n  return React.createElement(\"g\", {\n    transform: \"translate(\".concat(x, \",\").concat(y, \")\")\n  }, React.createElement(\"path\", {\n    d: \"\\n                M\".concat(size / 2, \" 0\\n                L\").concat(size, \" \").concat(size, \"\\n                L0 \").concat(size, \"\\n                L\").concat(size / 2, \" 0\\n            \"),\n    fill: fill,\n    strokeWidth: borderWidth,\n    stroke: borderColor,\n    style: {\n      pointerEvents: 'none'\n    }\n  }));\n};\n\nvar symbolByShape = {\n  circle: SymbolCircle,\n  diamond: SymbolDiamond,\n  square: SymbolSquare,\n  triangle: SymbolTriangle\n};\n\nvar LegendSvgItem = function LegendSvgItem(_ref) {\n  var _style$symbolSize, _style$itemOpacity, _style$itemBackground, _style$symbolSize2, _ref4, _data$fill, _style$symbolBorderWi, _style$symbolBorderCo, _ref5, _ref6, _style$itemTextColor;\n\n  var x = _ref.x,\n      y = _ref.y,\n      width = _ref.width,\n      height = _ref.height,\n      data = _ref.data,\n      _ref$direction = _ref.direction,\n      direction = _ref$direction === void 0 ? 'left-to-right' : _ref$direction,\n      _ref$justify = _ref.justify,\n      justify = _ref$justify === void 0 ? false : _ref$justify,\n      textColor = _ref.textColor,\n      _ref$background = _ref.background,\n      background = _ref$background === void 0 ? 'transparent' : _ref$background,\n      _ref$opacity = _ref.opacity,\n      opacity = _ref$opacity === void 0 ? 1 : _ref$opacity,\n      _ref$symbolShape = _ref.symbolShape,\n      symbolShape = _ref$symbolShape === void 0 ? 'square' : _ref$symbolShape,\n      _ref$symbolSize = _ref.symbolSize,\n      symbolSize = _ref$symbolSize === void 0 ? 16 : _ref$symbolSize,\n      _ref$symbolSpacing = _ref.symbolSpacing,\n      symbolSpacing = _ref$symbolSpacing === void 0 ? 8 : _ref$symbolSpacing,\n      _ref$symbolBorderWidt = _ref.symbolBorderWidth,\n      symbolBorderWidth = _ref$symbolBorderWidt === void 0 ? 0 : _ref$symbolBorderWidt,\n      _ref$symbolBorderColo = _ref.symbolBorderColor,\n      symbolBorderColor = _ref$symbolBorderColo === void 0 ? 'transparent' : _ref$symbolBorderColo,\n      _onClick = _ref.onClick,\n      onMouseEnter = _ref.onMouseEnter,\n      onMouseLeave = _ref.onMouseLeave,\n      effects = _ref.effects;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      style = _useState2[0],\n      setStyle = _useState2[1];\n\n  var theme = useTheme();\n  var handleMouseEnter = useCallback(function (event) {\n    if (effects) {\n      var applyEffects = effects.filter(function (_ref2) {\n        var on = _ref2.on;\n        return on === 'hover';\n      });\n\n      var _style = applyEffects.reduce(function (acc, effect) {\n        return _objectSpread2(_objectSpread2({}, acc), effect.style);\n      }, {});\n\n      setStyle(_style);\n    }\n\n    onMouseEnter === null || onMouseEnter === void 0 ? void 0 : onMouseEnter(data, event);\n  }, [onMouseEnter, data, effects]);\n  var handleMouseLeave = useCallback(function (event) {\n    if (effects) {\n      var applyEffects = effects.filter(function (_ref3) {\n        var on = _ref3.on;\n        return on !== 'hover';\n      });\n\n      var _style2 = applyEffects.reduce(function (acc, effect) {\n        return _objectSpread2(_objectSpread2({}, acc), effect.style);\n      }, {});\n\n      setStyle(_style2);\n    }\n\n    onMouseLeave === null || onMouseLeave === void 0 ? void 0 : onMouseLeave(data, event);\n  }, [onMouseLeave, data, effects]);\n\n  var _computeItemLayout = computeItemLayout({\n    direction: direction,\n    justify: justify,\n    symbolSize: (_style$symbolSize = style.symbolSize) !== null && _style$symbolSize !== void 0 ? _style$symbolSize : symbolSize,\n    symbolSpacing: symbolSpacing,\n    width: width,\n    height: height\n  }),\n      symbolX = _computeItemLayout.symbolX,\n      symbolY = _computeItemLayout.symbolY,\n      labelX = _computeItemLayout.labelX,\n      labelY = _computeItemLayout.labelY,\n      labelAnchor = _computeItemLayout.labelAnchor,\n      labelAlignment = _computeItemLayout.labelAlignment;\n\n  var isInteractive = [_onClick, onMouseEnter, onMouseLeave].some(function (handler) {\n    return handler !== undefined;\n  });\n  var SymbolShape = typeof symbolShape === 'function' ? symbolShape : symbolByShape[symbolShape];\n  return React.createElement(\"g\", {\n    transform: \"translate(\".concat(x, \",\").concat(y, \")\"),\n    style: {\n      opacity: (_style$itemOpacity = style.itemOpacity) !== null && _style$itemOpacity !== void 0 ? _style$itemOpacity : opacity\n    }\n  }, React.createElement(\"rect\", {\n    width: width,\n    height: height,\n    fill: (_style$itemBackground = style.itemBackground) !== null && _style$itemBackground !== void 0 ? _style$itemBackground : background,\n    style: {\n      cursor: isInteractive ? 'pointer' : 'auto'\n    },\n    onClick: function onClick(event) {\n      _onClick === null || _onClick === void 0 ? void 0 : _onClick(data, event);\n    },\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave\n  }), React.createElement(SymbolShape, {\n    id: data.id,\n    x: symbolX,\n    y: symbolY,\n    size: (_style$symbolSize2 = style.symbolSize) !== null && _style$symbolSize2 !== void 0 ? _style$symbolSize2 : symbolSize,\n    fill: (_ref4 = (_data$fill = data.fill) !== null && _data$fill !== void 0 ? _data$fill : data.color) !== null && _ref4 !== void 0 ? _ref4 : 'black',\n    borderWidth: (_style$symbolBorderWi = style.symbolBorderWidth) !== null && _style$symbolBorderWi !== void 0 ? _style$symbolBorderWi : symbolBorderWidth,\n    borderColor: (_style$symbolBorderCo = style.symbolBorderColor) !== null && _style$symbolBorderCo !== void 0 ? _style$symbolBorderCo : symbolBorderColor\n  }), React.createElement(\"text\", {\n    textAnchor: labelAnchor,\n    style: _objectSpread2(_objectSpread2({}, theme.legends.text), {}, {\n      fill: (_ref5 = (_ref6 = (_style$itemTextColor = style.itemTextColor) !== null && _style$itemTextColor !== void 0 ? _style$itemTextColor : textColor) !== null && _ref6 !== void 0 ? _ref6 : theme.legends.text.fill) !== null && _ref5 !== void 0 ? _ref5 : 'black',\n      dominantBaseline: labelAlignment,\n      pointerEvents: 'none',\n      userSelect: 'none'\n    }),\n    x: labelX,\n    y: labelY\n  }, data.label));\n};\n\nvar LegendSvg = function LegendSvg(_ref) {\n  var data = _ref.data,\n      x = _ref.x,\n      y = _ref.y,\n      direction = _ref.direction,\n      _ref$padding = _ref.padding,\n      _padding = _ref$padding === void 0 ? 0 : _ref$padding,\n      justify = _ref.justify,\n      effects = _ref.effects,\n      itemWidth = _ref.itemWidth,\n      itemHeight = _ref.itemHeight,\n      _ref$itemDirection = _ref.itemDirection,\n      itemDirection = _ref$itemDirection === void 0 ? 'left-to-right' : _ref$itemDirection,\n      _ref$itemsSpacing = _ref.itemsSpacing,\n      itemsSpacing = _ref$itemsSpacing === void 0 ? 0 : _ref$itemsSpacing,\n      itemTextColor = _ref.itemTextColor,\n      _ref$itemBackground = _ref.itemBackground,\n      itemBackground = _ref$itemBackground === void 0 ? 'transparent' : _ref$itemBackground,\n      _ref$itemOpacity = _ref.itemOpacity,\n      itemOpacity = _ref$itemOpacity === void 0 ? 1 : _ref$itemOpacity,\n      symbolShape = _ref.symbolShape,\n      symbolSize = _ref.symbolSize,\n      symbolSpacing = _ref.symbolSpacing,\n      symbolBorderWidth = _ref.symbolBorderWidth,\n      symbolBorderColor = _ref.symbolBorderColor,\n      onClick = _ref.onClick,\n      onMouseEnter = _ref.onMouseEnter,\n      onMouseLeave = _ref.onMouseLeave;\n\n  var _computeDimensions = computeDimensions({\n    itemCount: data.length,\n    itemWidth: itemWidth,\n    itemHeight: itemHeight,\n    itemsSpacing: itemsSpacing,\n    direction: direction,\n    padding: _padding\n  }),\n      padding = _computeDimensions.padding;\n\n  var xStep = direction === 'row' ? itemWidth + itemsSpacing : 0;\n  var yStep = direction === 'column' ? itemHeight + itemsSpacing : 0;\n  return React.createElement(\"g\", {\n    transform: \"translate(\".concat(x, \",\").concat(y, \")\")\n  }, data.map(function (data, i) {\n    return React.createElement(LegendSvgItem, {\n      key: i,\n      data: data,\n      x: i * xStep + padding.left,\n      y: i * yStep + padding.top,\n      width: itemWidth,\n      height: itemHeight,\n      direction: itemDirection,\n      justify: justify,\n      effects: effects,\n      textColor: itemTextColor,\n      background: itemBackground,\n      opacity: itemOpacity,\n      symbolShape: symbolShape,\n      symbolSize: symbolSize,\n      symbolSpacing: symbolSpacing,\n      symbolBorderWidth: symbolBorderWidth,\n      symbolBorderColor: symbolBorderColor,\n      onClick: onClick,\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: onMouseLeave\n    });\n  }));\n};\n\nvar BoxLegendSvg = function BoxLegendSvg(_ref) {\n  var data = _ref.data,\n      containerWidth = _ref.containerWidth,\n      containerHeight = _ref.containerHeight,\n      _ref$translateX = _ref.translateX,\n      translateX = _ref$translateX === void 0 ? 0 : _ref$translateX,\n      _ref$translateY = _ref.translateY,\n      translateY = _ref$translateY === void 0 ? 0 : _ref$translateY,\n      anchor = _ref.anchor,\n      direction = _ref.direction,\n      _ref$padding = _ref.padding,\n      padding = _ref$padding === void 0 ? 0 : _ref$padding,\n      justify = _ref.justify,\n      _ref$itemsSpacing = _ref.itemsSpacing,\n      itemsSpacing = _ref$itemsSpacing === void 0 ? 0 : _ref$itemsSpacing,\n      itemWidth = _ref.itemWidth,\n      itemHeight = _ref.itemHeight,\n      itemDirection = _ref.itemDirection,\n      itemTextColor = _ref.itemTextColor,\n      itemBackground = _ref.itemBackground,\n      itemOpacity = _ref.itemOpacity,\n      symbolShape = _ref.symbolShape,\n      symbolSize = _ref.symbolSize,\n      symbolSpacing = _ref.symbolSpacing,\n      symbolBorderWidth = _ref.symbolBorderWidth,\n      symbolBorderColor = _ref.symbolBorderColor,\n      onClick = _ref.onClick,\n      onMouseEnter = _ref.onMouseEnter,\n      onMouseLeave = _ref.onMouseLeave,\n      effects = _ref.effects;\n\n  var _computeDimensions = computeDimensions({\n    itemCount: data.length,\n    itemsSpacing: itemsSpacing,\n    itemWidth: itemWidth,\n    itemHeight: itemHeight,\n    direction: direction,\n    padding: padding\n  }),\n      width = _computeDimensions.width,\n      height = _computeDimensions.height;\n\n  var _computePositionFromA = computePositionFromAnchor({\n    anchor: anchor,\n    translateX: translateX,\n    translateY: translateY,\n    containerWidth: containerWidth,\n    containerHeight: containerHeight,\n    width: width,\n    height: height\n  }),\n      x = _computePositionFromA.x,\n      y = _computePositionFromA.y;\n\n  return React.createElement(LegendSvg, {\n    data: data,\n    x: x,\n    y: y,\n    direction: direction,\n    padding: padding,\n    justify: justify,\n    effects: effects,\n    itemsSpacing: itemsSpacing,\n    itemWidth: itemWidth,\n    itemHeight: itemHeight,\n    itemDirection: itemDirection,\n    itemTextColor: itemTextColor,\n    itemBackground: itemBackground,\n    itemOpacity: itemOpacity,\n    symbolShape: symbolShape,\n    symbolSize: symbolSize,\n    symbolSpacing: symbolSpacing,\n    symbolBorderWidth: symbolBorderWidth,\n    symbolBorderColor: symbolBorderColor,\n    onClick: onClick,\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave\n  });\n};\n\nvar textAlignMapping = {\n  start: 'left',\n  middle: 'center',\n  end: 'right'\n};\n\nvar renderLegendToCanvas = function renderLegendToCanvas(ctx, _ref) {\n  var data = _ref.data,\n      containerWidth = _ref.containerWidth,\n      containerHeight = _ref.containerHeight,\n      _ref$translateX = _ref.translateX,\n      translateX = _ref$translateX === void 0 ? 0 : _ref$translateX,\n      _ref$translateY = _ref.translateY,\n      translateY = _ref$translateY === void 0 ? 0 : _ref$translateY,\n      anchor = _ref.anchor,\n      direction = _ref.direction,\n      _ref$padding = _ref.padding,\n      _padding = _ref$padding === void 0 ? 0 : _ref$padding,\n      _ref$justify = _ref.justify,\n      justify = _ref$justify === void 0 ? false : _ref$justify,\n      _ref$itemsSpacing = _ref.itemsSpacing,\n      itemsSpacing = _ref$itemsSpacing === void 0 ? 0 : _ref$itemsSpacing,\n      itemWidth = _ref.itemWidth,\n      itemHeight = _ref.itemHeight,\n      _ref$itemDirection = _ref.itemDirection,\n      itemDirection = _ref$itemDirection === void 0 ? 'left-to-right' : _ref$itemDirection,\n      itemTextColor = _ref.itemTextColor,\n      _ref$symbolSize = _ref.symbolSize,\n      symbolSize = _ref$symbolSize === void 0 ? 16 : _ref$symbolSize,\n      _ref$symbolSpacing = _ref.symbolSpacing,\n      symbolSpacing = _ref$symbolSpacing === void 0 ? 8 : _ref$symbolSpacing,\n      theme = _ref.theme;\n\n  var _computeDimensions = computeDimensions({\n    itemCount: data.length,\n    itemWidth: itemWidth,\n    itemHeight: itemHeight,\n    itemsSpacing: itemsSpacing,\n    direction: direction,\n    padding: _padding\n  }),\n      width = _computeDimensions.width,\n      height = _computeDimensions.height,\n      padding = _computeDimensions.padding;\n\n  var _computePositionFromA = computePositionFromAnchor({\n    anchor: anchor,\n    translateX: translateX,\n    translateY: translateY,\n    containerWidth: containerWidth,\n    containerHeight: containerHeight,\n    width: width,\n    height: height\n  }),\n      x = _computePositionFromA.x,\n      y = _computePositionFromA.y;\n\n  var xStep = direction === 'row' ? itemWidth + itemsSpacing : 0;\n  var yStep = direction === 'column' ? itemHeight + itemsSpacing : 0;\n  ctx.save();\n  ctx.translate(x, y);\n  ctx.font = \"\".concat(theme.legends.text.fontSize, \"px \").concat(theme.legends.text.fontFamily || 'sans-serif');\n  data.forEach(function (d, i) {\n    var _d$color, _ref2;\n\n    var itemX = i * xStep + padding.left;\n    var itemY = i * yStep + padding.top;\n\n    var _computeItemLayout = computeItemLayout({\n      direction: itemDirection,\n      justify: justify,\n      symbolSize: symbolSize,\n      symbolSpacing: symbolSpacing,\n      width: itemWidth,\n      height: itemHeight\n    }),\n        symbolX = _computeItemLayout.symbolX,\n        symbolY = _computeItemLayout.symbolY,\n        labelX = _computeItemLayout.labelX,\n        labelY = _computeItemLayout.labelY,\n        labelAnchor = _computeItemLayout.labelAnchor,\n        labelAlignment = _computeItemLayout.labelAlignment;\n\n    ctx.fillStyle = (_d$color = d.color) !== null && _d$color !== void 0 ? _d$color : 'black';\n    ctx.fillRect(itemX + symbolX, itemY + symbolY, symbolSize, symbolSize);\n    ctx.textAlign = textAlignMapping[labelAnchor];\n\n    if (labelAlignment === 'central') {\n      ctx.textBaseline = 'middle';\n    }\n\n    ctx.fillStyle = (_ref2 = itemTextColor !== null && itemTextColor !== void 0 ? itemTextColor : theme.legends.text.fill) !== null && _ref2 !== void 0 ? _ref2 : 'black';\n    ctx.fillText(String(d.label), itemX + labelX, itemY + labelY);\n  });\n  ctx.restore();\n};\n\nvar useQuantizeColorScaleLegendData = function useQuantizeColorScaleLegendData(_ref) {\n  var scale = _ref.scale,\n      overriddenDomain = _ref.domain,\n      _ref$reverse = _ref.reverse,\n      reverse = _ref$reverse === void 0 ? false : _ref$reverse,\n      _ref$valueFormat = _ref.valueFormat,\n      valueFormat = _ref$valueFormat === void 0 ? function (v) {\n    return v;\n  } : _ref$valueFormat,\n      _ref$separator = _ref.separator,\n      separator = _ref$separator === void 0 ? ' - ' : _ref$separator;\n  return useMemo(function () {\n    var domain = overriddenDomain !== null && overriddenDomain !== void 0 ? overriddenDomain : scale.range();\n    var items = domain.map(function (domainValue, index) {\n      var _scale$invertExtent = scale.invertExtent(domainValue),\n          _scale$invertExtent2 = _slicedToArray(_scale$invertExtent, 2),\n          start = _scale$invertExtent2[0],\n          end = _scale$invertExtent2[1];\n\n      return {\n        id: domainValue,\n        index: index,\n        extent: [start, end],\n        label: \"\".concat(valueFormat(start)).concat(separator).concat(valueFormat(end)),\n        value: scale(start),\n        color: domainValue\n      };\n    });\n    if (reverse === true) items.reverse();\n    return items;\n  }, [overriddenDomain, scale, reverse]);\n};\n\nvar LegendPropShape = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    color: PropTypes.string,\n    fill: PropTypes.string\n  })),\n  anchor: PropTypes.oneOf(['top', 'top-right', 'right', 'bottom-right', 'bottom', 'bottom-left', 'left', 'top-left', 'center']).isRequired,\n  translateX: PropTypes.number,\n  translateY: PropTypes.number,\n  direction: PropTypes.oneOf(['row', 'column']).isRequired,\n  itemsSpacing: PropTypes.number,\n  itemWidth: PropTypes.number.isRequired,\n  itemHeight: PropTypes.number.isRequired,\n  itemDirection: PropTypes.oneOf(['left-to-right', 'right-to-left', 'top-to-bottom', 'bottom-to-top']),\n  itemTextColor: PropTypes.string,\n  itemBackground: PropTypes.string,\n  itemOpacity: PropTypes.number,\n  symbolShape: PropTypes.oneOfType([PropTypes.oneOf(['circle', 'diamond', 'square', 'triangle']), PropTypes.func]),\n  symbolSize: PropTypes.number,\n  symbolSpacing: PropTypes.number,\n  symbolBorderWidth: PropTypes.number,\n  symbolBorderColor: PropTypes.string,\n  onClick: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  effects: PropTypes.arrayOf(PropTypes.shape({\n    on: PropTypes.oneOfType([PropTypes.oneOf(['hover'])]).isRequired,\n    style: PropTypes.shape({\n      itemTextColor: PropTypes.string,\n      itemBackground: PropTypes.string,\n      itemOpacity: PropTypes.number,\n      symbolSize: PropTypes.number,\n      symbolBorderWidth: PropTypes.number,\n      symbolBorderColor: PropTypes.string\n    }).isRequired\n  }))\n};\nexport { BoxLegendSvg, LegendPropShape, LegendSvg, LegendSvgItem, renderLegendToCanvas, useQuantizeColorScaleLegendData };","map":{"version":3,"mappings":"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","names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_arrayWithHoles","arr","Array","isArray","_iterableToArrayLimit","Symbol","iterator","_arr","_n","_d","_e","undefined","_i","_s","next","done","err","_arrayLikeToArray","len","arr2","_unsupportedIterableToArray","o","minLen","arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","from","test","_nonIterableRest","TypeError","_slicedToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","isObject","item","zeroPadding","top","right","bottom","left","computeDimensions","direction","itemsSpacing","_padding","padding","itemCount","itemWidth","itemHeight","Error","horizontalPadding","verticalPadding","width","height","spacing","computePositionFromAnchor","anchor","translateX","translateY","containerWidth","containerHeight","x","y","computeItemLayout","justify","symbolSize","symbolSpacing","symbolX","symbolY","labelX","labelY","labelAnchor","labelAlignment","SymbolCircle","size","fill","borderWidth","borderColor","React","r","cx","cy","strokeWidth","stroke","style","pointerEvents","SymbolDiamond","transform","d","SymbolSquare","SymbolTriangle","symbolByShape","circle","diamond","square","triangle","LegendSvgItem","data","textColor","background","opacity","symbolShape","symbolBorderWidth","symbolBorderColor","onClick","onMouseEnter","onMouseLeave","effects","useState","setStyle","theme","useTheme","handleMouseEnter","useCallback","event","applyEffects","on","reduce","acc","effect","handleMouseLeave","isInteractive","some","handler","SymbolShape","itemOpacity","itemBackground","cursor","createElement","id","color","textAnchor","legends","text","itemTextColor","dominantBaseline","userSelect","label","LegendSvg","itemDirection","xStep","yStep","map","BoxLegendSvg","textAlignMapping","start","middle","end","renderLegendToCanvas","ctx","save","translate","font","fontSize","fontFamily","itemX","itemY","fillStyle","fillRect","textAlign","textBaseline","fillText","String","restore","useQuantizeColorScaleLegendData","scale","overriddenDomain","domain","reverse","valueFormat","v","separator","useMemo","range","items","domainValue","index","invertExtent","extent","LegendPropShape","PropTypes","arrayOf","shape","oneOfType","string","number","isRequired","oneOf","func"],"sources":["D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\defineProperty.js","D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\objectSpread2.js","D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\arrayWithHoles.js","D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\iterableToArrayLimit.js","D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\arrayLikeToArray.js","D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\unsupportedIterableToArray.js","D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\nonIterableRest.js","D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\slicedToArray.js","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\legends\\src\\compute.ts","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\legends\\src\\svg\\symbols\\SymbolCircle.tsx","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\legends\\src\\svg\\symbols\\SymbolDiamond.tsx","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\legends\\src\\svg\\symbols\\SymbolSquare.tsx","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\legends\\src\\svg\\symbols\\SymbolTriangle.tsx","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\legends\\src\\svg\\LegendSvgItem.tsx","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\legends\\src\\svg\\LegendSvg.tsx","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\legends\\src\\svg\\BoxLegendSvg.tsx","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\legends\\src\\canvas.ts","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\legends\\src\\hooks.ts","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\legends\\src\\props.ts"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import { BoxLegendSvgProps, LegendAnchor, LegendItemDirection } from './types'\n\nconst isObject = <T>(item: unknown): item is T =>\n    typeof item === 'object' && !Array.isArray(item) && item !== null\n\nconst zeroPadding = {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n}\n\nexport const computeDimensions = ({\n    direction,\n    itemsSpacing,\n    padding: _padding,\n    itemCount,\n    itemWidth,\n    itemHeight,\n}: Pick<BoxLegendSvgProps, 'direction' | 'padding'> &\n    Record<'itemsSpacing' | 'itemCount' | 'itemWidth' | 'itemHeight', number>) => {\n    if (typeof _padding !== 'number' && !isObject(_padding)) {\n        throw new Error('Invalid property padding, must be one of: number, object')\n    }\n\n    const padding =\n        typeof _padding === 'number'\n            ? {\n                  top: _padding,\n                  right: _padding,\n                  bottom: _padding,\n                  left: _padding,\n              }\n            : {\n                  ...zeroPadding,\n                  ..._padding,\n              }\n\n    const horizontalPadding = padding.left + padding.right\n    const verticalPadding = padding.top + padding.bottom\n    let width = itemWidth + horizontalPadding\n    let height = itemHeight + verticalPadding\n    const spacing = (itemCount - 1) * itemsSpacing\n    if (direction === 'row') {\n        width = itemWidth * itemCount + spacing + horizontalPadding\n    } else if (direction === 'column') {\n        height = itemHeight * itemCount + spacing + verticalPadding\n    }\n\n    return { width, height, padding }\n}\n\nexport const computePositionFromAnchor = ({\n    anchor,\n    translateX,\n    translateY,\n    containerWidth,\n    containerHeight,\n    width,\n    height,\n}: { anchor: LegendAnchor } & Record<\n    'translateX' | 'translateY' | 'containerWidth' | 'containerHeight' | 'width' | 'height',\n    number\n>) => {\n    let x = translateX\n    let y = translateY\n\n    switch (anchor) {\n        case 'top':\n            x += (containerWidth - width) / 2\n            break\n\n        case 'top-right':\n            x += containerWidth - width\n            break\n\n        case 'right':\n            x += containerWidth - width\n            y += (containerHeight - height) / 2\n            break\n\n        case 'bottom-right':\n            x += containerWidth - width\n            y += containerHeight - height\n            break\n\n        case 'bottom':\n            x += (containerWidth - width) / 2\n            y += containerHeight - height\n            break\n\n        case 'bottom-left':\n            y += containerHeight - height\n            break\n\n        case 'left':\n            y += (containerHeight - height) / 2\n            break\n\n        case 'center':\n            x += (containerWidth - width) / 2\n            y += (containerHeight - height) / 2\n            break\n    }\n\n    return { x, y }\n}\n\nexport const computeItemLayout = ({\n    direction,\n    justify,\n    symbolSize,\n    symbolSpacing,\n    width,\n    height,\n}: {\n    direction: LegendItemDirection\n    justify: boolean\n} & Record<'symbolSize' | 'symbolSpacing' | 'width' | 'height', number>) => {\n    let symbolX\n    let symbolY\n\n    let labelX\n    let labelY\n    let labelAnchor: 'start' | 'middle' | 'end'\n    let labelAlignment: 'alphabetic' | 'central' | 'text-before-edge'\n\n    switch (direction) {\n        case 'left-to-right':\n            symbolX = 0\n            symbolY = (height - symbolSize) / 2\n\n            labelY = height / 2\n            labelAlignment = 'central'\n            if (justify === true) {\n                labelX = width\n                labelAnchor = 'end'\n            } else {\n                labelX = symbolSize + symbolSpacing\n                labelAnchor = 'start'\n            }\n            break\n\n        case 'right-to-left':\n            symbolX = width - symbolSize\n            symbolY = (height - symbolSize) / 2\n\n            labelY = height / 2\n            labelAlignment = 'central'\n            if (justify === true) {\n                labelX = 0\n                labelAnchor = 'start'\n            } else {\n                labelX = width - symbolSize - symbolSpacing\n                labelAnchor = 'end'\n            }\n            break\n\n        case 'top-to-bottom':\n            symbolX = (width - symbolSize) / 2\n            symbolY = 0\n\n            labelX = width / 2\n\n            labelAnchor = 'middle'\n            if (justify === true) {\n                labelY = height\n                labelAlignment = 'alphabetic'\n            } else {\n                labelY = symbolSize + symbolSpacing\n                labelAlignment = 'text-before-edge'\n            }\n            break\n\n        case 'bottom-to-top':\n            symbolX = (width - symbolSize) / 2\n            symbolY = height - symbolSize\n\n            labelX = width / 2\n            labelAnchor = 'middle'\n            if (justify === true) {\n                labelY = 0\n                labelAlignment = 'text-before-edge'\n            } else {\n                labelY = height - symbolSize - symbolSpacing\n                labelAlignment = 'alphabetic'\n            }\n            break\n    }\n\n    return {\n        symbolX,\n        symbolY,\n\n        labelX,\n        labelY,\n        labelAnchor,\n        labelAlignment,\n    }\n}\n","import React from 'react'\nimport { SymbolProps } from './types'\n\nexport const SymbolCircle = ({\n    x,\n    y,\n    size,\n    fill,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <circle\n            r={size / 2}\n            cx={x + size / 2}\n            cy={y + size / 2}\n            fill={fill}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            style={{\n                pointerEvents: 'none',\n            }}\n        />\n    )\n}\n","import React from 'react'\nimport { SymbolProps } from './types'\n\nexport const SymbolDiamond = ({\n    x,\n    y,\n    size,\n    fill,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <g transform={`translate(${x},${y})`}>\n            <path\n                d={`\n                    M${size / 2} 0\n                    L${size * 0.8} ${size / 2}\n                    L${size / 2} ${size}\n                    L${size * 0.2} ${size / 2}\n                    L${size / 2} 0\n                `}\n                fill={fill}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                style={{\n                    pointerEvents: 'none',\n                }}\n            />\n        </g>\n    )\n}\n","import React from 'react'\nimport { SymbolProps } from './types'\n\nexport const SymbolSquare = ({\n    x,\n    y,\n    size,\n    fill,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <rect\n            x={x}\n            y={y}\n            fill={fill}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            width={size}\n            height={size}\n            style={{\n                pointerEvents: 'none',\n            }}\n        />\n    )\n}\n","import React from 'react'\nimport { SymbolProps } from './types'\n\nexport const SymbolTriangle = ({\n    x,\n    y,\n    size,\n    fill,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <g transform={`translate(${x},${y})`}>\n            <path\n                d={`\n                M${size / 2} 0\n                L${size} ${size}\n                L0 ${size}\n                L${size / 2} 0\n            `}\n                fill={fill}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                style={{\n                    pointerEvents: 'none',\n                }}\n            />\n        </g>\n    )\n}\n","import React, { useState, useCallback } from 'react'\nimport { useTheme } from '@nivo/core'\nimport { LegendSvgItemProps } from '../types'\nimport { computeItemLayout } from '../compute'\nimport { SymbolCircle, SymbolDiamond, SymbolSquare, SymbolTriangle } from './symbols'\n\ntype Style = Partial<{\n    itemBackground: string\n    itemOpacity: number\n    itemTextColor: string\n    symbolBorderColor: string\n    symbolBorderWidth: number\n    symbolSize: number\n}>\n\nconst symbolByShape = {\n    circle: SymbolCircle,\n    diamond: SymbolDiamond,\n    square: SymbolSquare,\n    triangle: SymbolTriangle,\n}\n\nexport const LegendSvgItem = ({\n    x,\n    y,\n    width,\n    height,\n    data,\n    direction = 'left-to-right',\n    justify = false,\n    textColor,\n    background = 'transparent',\n    opacity = 1,\n\n    symbolShape = 'square',\n    symbolSize = 16,\n    symbolSpacing = 8,\n    symbolBorderWidth = 0,\n    symbolBorderColor = 'transparent',\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    effects,\n}: LegendSvgItemProps) => {\n    const [style, setStyle] = useState<Style>({})\n    const theme = useTheme()\n\n    const handleMouseEnter = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            if (effects) {\n                const applyEffects = effects.filter(({ on }) => on === 'hover')\n                const style = applyEffects.reduce(\n                    (acc, effect) => ({\n                        ...acc,\n                        ...effect.style,\n                    }),\n                    {}\n                )\n                setStyle(style)\n            }\n\n            onMouseEnter?.(data, event)\n        },\n        [onMouseEnter, data, effects]\n    )\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            if (effects) {\n                const applyEffects = effects.filter(({ on }) => on !== 'hover')\n                const style = applyEffects.reduce(\n                    (acc, effect) => ({\n                        ...acc,\n                        ...effect.style,\n                    }),\n                    {}\n                )\n                setStyle(style)\n            }\n\n            onMouseLeave?.(data, event)\n        },\n        [onMouseLeave, data, effects]\n    )\n\n    const { symbolX, symbolY, labelX, labelY, labelAnchor, labelAlignment } = computeItemLayout({\n        direction,\n        justify,\n        symbolSize: style.symbolSize ?? symbolSize,\n        symbolSpacing,\n        width,\n        height,\n    })\n\n    const isInteractive = [onClick, onMouseEnter, onMouseLeave].some(\n        handler => handler !== undefined\n    )\n\n    const SymbolShape = typeof symbolShape === 'function' ? symbolShape : symbolByShape[symbolShape]\n\n    return (\n        <g\n            transform={`translate(${x},${y})`}\n            style={{\n                opacity: style.itemOpacity ?? opacity,\n            }}\n        >\n            <rect\n                width={width}\n                height={height}\n                fill={style.itemBackground ?? background}\n                style={{\n                    cursor: isInteractive ? 'pointer' : 'auto',\n                }}\n                onClick={event => {\n                    onClick?.(data, event)\n                }}\n                onMouseEnter={handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n            />\n            {React.createElement(SymbolShape, {\n                id: data.id,\n                x: symbolX,\n                y: symbolY,\n                size: style.symbolSize ?? symbolSize,\n                fill: data.fill ?? data.color ?? 'black',\n                borderWidth: style.symbolBorderWidth ?? symbolBorderWidth,\n                borderColor: style.symbolBorderColor ?? symbolBorderColor,\n            })}\n            <text\n                textAnchor={labelAnchor}\n                style={{\n                    ...theme.legends.text,\n                    fill: style.itemTextColor ?? textColor ?? theme.legends.text.fill ?? 'black',\n                    dominantBaseline: labelAlignment,\n                    pointerEvents: 'none',\n                    userSelect: 'none',\n                }}\n                x={labelX}\n                y={labelY}\n            >\n                {data.label}\n            </text>\n        </g>\n    )\n}\n","import React from 'react'\nimport { LegendSvgItem } from './LegendSvgItem'\nimport { LegendSvgProps } from '../types'\nimport { computeDimensions } from '../compute'\n\nexport const LegendSvg = ({\n    data,\n\n    x,\n    y,\n    direction,\n    padding: _padding = 0,\n    justify,\n    effects,\n\n    itemWidth,\n    itemHeight,\n    itemDirection = 'left-to-right',\n    itemsSpacing = 0,\n    itemTextColor,\n    itemBackground = 'transparent',\n    itemOpacity = 1,\n\n    symbolShape,\n    symbolSize,\n    symbolSpacing,\n    symbolBorderWidth,\n    symbolBorderColor,\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n}: LegendSvgProps) => {\n    const { padding } = computeDimensions({\n        itemCount: data.length,\n        itemWidth,\n        itemHeight,\n        itemsSpacing,\n        direction,\n        padding: _padding,\n    })\n\n    const xStep = direction === 'row' ? itemWidth + itemsSpacing : 0\n    const yStep = direction === 'column' ? itemHeight + itemsSpacing : 0\n\n    return (\n        <g transform={`translate(${x},${y})`}>\n            {data.map((data, i) => (\n                <LegendSvgItem\n                    key={i}\n                    data={data}\n                    x={i * xStep + padding.left}\n                    y={i * yStep + padding.top}\n                    width={itemWidth}\n                    height={itemHeight}\n                    direction={itemDirection}\n                    justify={justify}\n                    effects={effects}\n                    textColor={itemTextColor}\n                    background={itemBackground}\n                    opacity={itemOpacity}\n                    symbolShape={symbolShape}\n                    symbolSize={symbolSize}\n                    symbolSpacing={symbolSpacing}\n                    symbolBorderWidth={symbolBorderWidth}\n                    symbolBorderColor={symbolBorderColor}\n                    onClick={onClick}\n                    onMouseEnter={onMouseEnter}\n                    onMouseLeave={onMouseLeave}\n                />\n            ))}\n        </g>\n    )\n}\n","import React from 'react'\nimport { LegendSvg } from './LegendSvg'\nimport { BoxLegendSvgProps } from '../types'\nimport { computeDimensions, computePositionFromAnchor } from '../compute'\n\nexport const BoxLegendSvg = ({\n    data,\n\n    containerWidth,\n    containerHeight,\n    translateX = 0,\n    translateY = 0,\n    anchor,\n    direction,\n    padding = 0,\n    justify,\n\n    itemsSpacing = 0,\n    itemWidth,\n    itemHeight,\n    itemDirection,\n    itemTextColor,\n    itemBackground,\n    itemOpacity,\n\n    symbolShape,\n    symbolSize,\n    symbolSpacing,\n    symbolBorderWidth,\n    symbolBorderColor,\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    effects,\n}: BoxLegendSvgProps) => {\n    const { width, height } = computeDimensions({\n        itemCount: data.length,\n        itemsSpacing,\n        itemWidth,\n        itemHeight,\n        direction,\n        padding,\n    })\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    return (\n        <LegendSvg\n            data={data}\n            x={x}\n            y={y}\n            direction={direction}\n            padding={padding}\n            justify={justify}\n            effects={effects}\n            itemsSpacing={itemsSpacing}\n            itemWidth={itemWidth}\n            itemHeight={itemHeight}\n            itemDirection={itemDirection}\n            itemTextColor={itemTextColor}\n            itemBackground={itemBackground}\n            itemOpacity={itemOpacity}\n            symbolShape={symbolShape}\n            symbolSize={symbolSize}\n            symbolSpacing={symbolSpacing}\n            symbolBorderWidth={symbolBorderWidth}\n            symbolBorderColor={symbolBorderColor}\n            onClick={onClick}\n            onMouseEnter={onMouseEnter}\n            onMouseLeave={onMouseLeave}\n        />\n    )\n}\n","import { computeDimensions, computePositionFromAnchor, computeItemLayout } from './compute'\nimport { LegendCanvasProps } from './types'\n\nconst textAlignMapping = {\n    start: 'left',\n    middle: 'center',\n    end: 'right',\n} as const\n\nexport const renderLegendToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    {\n        data,\n\n        containerWidth,\n        containerHeight,\n        translateX = 0,\n        translateY = 0,\n        anchor,\n        direction,\n        padding: _padding = 0,\n        justify = false,\n\n        // items\n        itemsSpacing = 0,\n        itemWidth,\n        itemHeight,\n        itemDirection = 'left-to-right',\n        itemTextColor,\n\n        // symbol\n        symbolSize = 16,\n        symbolSpacing = 8,\n        // @todo add support for shapes\n        // symbolShape = LegendSvgItem.defaultProps.symbolShape,\n\n        theme,\n    }: LegendCanvasProps\n) => {\n    const { width, height, padding } = computeDimensions({\n        itemCount: data.length,\n        itemWidth,\n        itemHeight,\n        itemsSpacing,\n        direction,\n        padding: _padding,\n    })\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    const xStep = direction === 'row' ? itemWidth + itemsSpacing : 0\n    const yStep = direction === 'column' ? itemHeight + itemsSpacing : 0\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.font = `${theme.legends.text.fontSize}px ${theme.legends.text.fontFamily || 'sans-serif'}`\n\n    data.forEach((d, i) => {\n        const itemX = i * xStep + padding.left\n        const itemY = i * yStep + padding.top\n\n        const { symbolX, symbolY, labelX, labelY, labelAnchor, labelAlignment } = computeItemLayout(\n            {\n                direction: itemDirection,\n                justify,\n                symbolSize,\n                symbolSpacing,\n                width: itemWidth,\n                height: itemHeight,\n            }\n        )\n\n        ctx.fillStyle = d.color ?? 'black'\n        ctx.fillRect(itemX + symbolX, itemY + symbolY, symbolSize, symbolSize)\n\n        ctx.textAlign = textAlignMapping[labelAnchor]\n\n        if (labelAlignment === 'central') {\n            ctx.textBaseline = 'middle'\n        }\n\n        ctx.fillStyle = itemTextColor ?? theme.legends.text.fill ?? 'black'\n        ctx.fillText(String(d.label), itemX + labelX, itemY + labelY)\n    })\n\n    ctx.restore()\n}\n","import { useMemo } from 'react'\n\ntype Scale = {\n    (value: number): number\n    invertExtent: (value: number) => [number, number]\n    range: () => number[]\n}\n\nexport const useQuantizeColorScaleLegendData = ({\n    scale,\n    domain: overriddenDomain,\n    reverse = false,\n    valueFormat = v => v,\n    separator = ' - ',\n}: {\n    scale: Scale\n    domain?: number[]\n    reverse?: boolean\n    valueFormat?: <T, U>(value: T) => T | U\n    separator?: string\n}) => {\n    return useMemo(() => {\n        const domain = overriddenDomain ?? scale.range()\n\n        const items = domain.map((domainValue, index) => {\n            const [start, end] = scale.invertExtent(domainValue)\n\n            return {\n                id: domainValue,\n                index,\n                extent: [start, end],\n                label: `${valueFormat(start)}${separator}${valueFormat(end)}`,\n                value: scale(start),\n                color: domainValue,\n            }\n        })\n        if (reverse === true) items.reverse()\n\n        return items\n    }, [overriddenDomain, scale, reverse])\n}\n","import PropTypes from 'prop-types'\n\n/**\n * The prop type is exported as a simple object instead of `PropTypes.shape`\n * to be able to add extra properties.\n *\n * @example\n * ```javascript\n * import { LegendPropShape } from '@nivo/legends'\n *\n * const customLegendPropType = PropTypes.shape({\n *     ...LegendPropShape,\n *     extra: PropTypes.any.isRequired,\n * })\n * ```\n */\nexport const LegendPropShape = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            color: PropTypes.string,\n            fill: PropTypes.string,\n        })\n    ),\n\n    // position & layout\n    anchor: PropTypes.oneOf([\n        'top',\n        'top-right',\n        'right',\n        'bottom-right',\n        'bottom',\n        'bottom-left',\n        'left',\n        'top-left',\n        'center',\n    ]).isRequired,\n    translateX: PropTypes.number,\n    translateY: PropTypes.number,\n    direction: PropTypes.oneOf(['row', 'column']).isRequired,\n\n    // item\n    itemsSpacing: PropTypes.number,\n    itemWidth: PropTypes.number.isRequired,\n    itemHeight: PropTypes.number.isRequired,\n    itemDirection: PropTypes.oneOf([\n        'left-to-right',\n        'right-to-left',\n        'top-to-bottom',\n        'bottom-to-top',\n    ]),\n    itemTextColor: PropTypes.string,\n    itemBackground: PropTypes.string,\n    itemOpacity: PropTypes.number,\n\n    symbolShape: PropTypes.oneOfType([\n        PropTypes.oneOf(['circle', 'diamond', 'square', 'triangle']),\n        PropTypes.func,\n    ]),\n    symbolSize: PropTypes.number,\n    symbolSpacing: PropTypes.number,\n    symbolBorderWidth: PropTypes.number,\n    symbolBorderColor: PropTypes.string,\n\n    onClick: PropTypes.func,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n\n    effects: PropTypes.arrayOf(\n        PropTypes.shape({\n            on: PropTypes.oneOfType([PropTypes.oneOf(['hover'])]).isRequired,\n            style: PropTypes.shape({\n                itemTextColor: PropTypes.string,\n                itemBackground: PropTypes.string,\n                itemOpacity: PropTypes.number,\n                symbolSize: PropTypes.number,\n                symbolBorderWidth: PropTypes.number,\n                symbolBorderColor: PropTypes.string,\n            }).isRequired,\n        })\n    ),\n}\n"]},"metadata":{},"sourceType":"module"}