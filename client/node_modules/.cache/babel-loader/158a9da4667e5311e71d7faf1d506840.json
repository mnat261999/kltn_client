{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kltn\\\\test\\\\social-media\\\\client\\\\src\\\\components\\\\ProfileSettings\\\\index.js\";\nimport moment from \"moment\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport Layout from \"../../hoc/layout\";\nimport { connect } from \"react-redux\";\nimport { findPost } from \"../../../src/actions/user_action\";\nimport Switch from \"react-ios-switch\";\nimport FormField from \"../ultils/Form/FormField\";\nimport \"./profilesetting.scss\";\nimport { populateOptionFields, update, ifFormValid, generateData, resetFields } from \"../ultils/Form/FormActions\";\nimport { GridDots, User, Lock } from \"tabler-icons-react\";\nimport { updateprofileimgfile, updateprofileimg, changeProfile, changePassword, auth, getBlockedUsers, unBlockUser, blockUser, changePrivate } from \"../../actions/user_action\";\nimport { Link, withRouter, useParams } from \"react-router-dom\";\nimport { Button, CircularProgress, Snackbar } from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Header from \"../Header_Footer/Header\";\n\nclass ProfileSettings extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      privateMode: false,\n      inputValue: \"\",\n      settingState: \"profile\",\n      edited: false,\n      loading: false,\n      severity: \"\",\n      setSnack: false,\n      formError: false,\n      formSuccess: false,\n      formMessage: \"\",\n      formData: {\n        email: {\n          element: \"input\",\n          value: \"\",\n          config: {\n            placeholder: \"Email của bạn\",\n            label: \"Email\",\n            name: \"email\",\n            options: []\n          },\n          validation: {\n            required: true,\n            email: true\n          },\n          valid: false,\n          touched: false,\n          validationMessage: \"\",\n          showlabel: false\n        },\n        name: {\n          element: \"input\",\n          value: \"\",\n          config: {\n            placeholder: \"Tên của bạn\",\n            label: \"Tên\",\n            name: \"name\",\n            options: []\n          },\n          validation: {\n            required: false\n          },\n          valid: false,\n          touched: false,\n          validationMessage: \"\",\n          showlabel: false\n        },\n        bio: {\n          element: \"textarea\",\n          value: \"\",\n          config: {\n            placeholder: \"Mô tả về bản thân bạn\",\n            label: \"Tiểu sử\",\n            name: \"bio\",\n            options: []\n          },\n          validation: {\n            required: false\n          },\n          valid: false,\n          touched: false,\n          validationMessage: \"\",\n          showlabel: false\n        },\n        userName: {\n          element: \"input\",\n          value: \"\",\n          config: {\n            placeholder: \"Tên tài khoản\",\n            label: \"Tên tài khoản\",\n            name: \"userName\",\n            options: []\n          },\n          validation: {\n            required: false\n          },\n          valid: false,\n          touched: false,\n          validationMessage: \"\",\n          showlabel: false\n        },\n        dob: {\n          element: \"input\",\n          value: \"\",\n          valueAsNumber: \"\",\n          config: {\n            label: \"Ngày sinh\",\n            name: \"dob\",\n            type: \"date\",\n            placeholder: \"ngày sinh\"\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          validationMessage: \"\",\n          showlabel: false\n        }\n      },\n      passwordData: {\n        currentPassword: {\n          element: \"password\",\n          config: {\n            label: \"Mật khẩu\",\n            name: \"password_input\",\n            type: \"password\",\n            placeholder: \"Mật khẩu hiện tại\"\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          validationMessage: \"\",\n          showlabel: false\n        },\n        password: {\n          element: \"input\",\n          config: {\n            label: \"Mật khẩu mới\",\n            name: \"password_input\",\n            type: \"password\",\n            placeholder: \"Mật khẩu mới\"\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          validationMessage: \"\",\n          showlabel: false\n        },\n        confirmPassword: {\n          element: \"input\",\n          value: \"\",\n          config: {\n            label: \"Nhập lại mật khẩu\",\n            name: \"confirm_password_input\",\n            type: \"password\",\n            placeholder: \"Nhập lại mật khẩu\"\n          },\n          validation: {\n            required: true,\n            confirm: \"password\"\n          },\n          valid: false,\n          touched: false,\n          validationMessage: \"\",\n          showlabel: false\n        }\n      }\n    };\n\n    this.updateFields = newFormData => {\n      this.setState({\n        formData: newFormData\n      });\n    };\n\n    this.submitForm = async event => {\n      this.setState({\n        loading: true\n      });\n      event.preventDefault();\n      let dataToSubmit = generateData(this.state.formData, \"update_pro\");\n      console.log(dataToSubmit);\n      await this.props.dispatch(changeProfile(this.props.user.userData._id, dataToSubmit)).then(response => {\n        console.log(response);\n\n        if (response.payload.success === false) {\n          this.setState({\n            loading: false,\n            severity: \"error\",\n            setSnack: true,\n            formMessage: response.payload.message\n          });\n        } else {\n          this.setState({\n            loading: false,\n            severity: \"success\",\n            edited: false,\n            setSnack: true,\n            formMessage: response.payload.message\n          });\n          this.props.dispatch(auth());\n        } //  this.props.dispatch(auth());\n\n      });\n    };\n\n    this.onFileChange = async event => {\n      this.setState({\n        loading: true\n      });\n      await this.props.dispatch(updateprofileimgfile(event.target.files[0]));\n      await this.props.dispatch(updateprofileimg(this.props.user.img ? this.props.user.img.url : 0)).then(response => {\n        console.log(response);\n\n        if (response.payload.success == false) {\n          this.setState({\n            loading: false,\n            severity: \"error\",\n            setSnack: true,\n            formMessage: response.payload.message\n          });\n        } else {\n          this.setState({\n            loading: false,\n            severity: \"success\",\n            edited: false,\n            setSnack: true,\n            formMessage: response.payload.message\n          });\n          this.props.dispatch(auth());\n        }\n      });\n    };\n\n    this.handlePrivateChange = () => {\n      this.setState({\n        loading: true\n      });\n      this.setState({\n        privateMode: !this.state.privateMode\n      });\n      this.props.dispatch(changePrivate(this.state.privateMode)).then(response => {\n        console.log(response);\n\n        if (response.payload.success == false) {\n          this.setState({\n            loading: false,\n            severity: \"error\",\n            setSnack: true,\n            formMessage: response.payload.message\n          });\n        } else {\n          this.setState({\n            loading: false,\n            severity: \"success\",\n            edited: false,\n            setSnack: true,\n            formMessage: response.payload.message\n          });\n          this.props.dispatch(auth());\n        }\n      });\n    };\n\n    this.updateForm = element => {\n      const newFormdata = update(element, this.state.formData, \"update_pro\");\n      this.setState({\n        formError: false,\n        formData: newFormdata\n      });\n\n      if (JSON.stringify(this.state.formData.bio.value.trim()) != JSON.stringify(this.props.user.userData.bio.trim()) || JSON.stringify(this.state.formData.userName.value.trim()) != JSON.stringify(this.props.user.userData.userName.trim()) || JSON.stringify(this.state.formData.name.value.trim()) != JSON.stringify(this.props.user.userData.name.trim()) || JSON.stringify(this.state.formData.email.value.trim()) != JSON.stringify(this.props.user.userData.email.trim()) || JSON.stringify(this.state.formData.dob.value.trim()) != JSON.stringify(moment(this.props.user.userData.dob).format(\"YYYY-MM-DD\"))) {\n        this.setState({\n          edited: true\n        });\n      } else {\n        this.setState({\n          edited: false\n        });\n      }\n    };\n\n    this.handleSetting = type => {\n      this.setState({\n        settingState: type,\n        edited: false,\n        loading: false,\n        setSnack: false,\n        formError: false,\n        formMessage: \"\"\n      });\n    };\n\n    this.changePassword = event => {\n      this.setState({\n        loading: true\n      });\n      event.preventDefault();\n      let dataToSubmit = generateData(this.state.passwordData, \"change_password\");\n      let formIsValid = ifFormValid(this.state.passwordData, \"change_password\");\n\n      if (formIsValid) {\n        console.log(dataToSubmit);\n        this.props.dispatch(changePassword(dataToSubmit)).then(response => {\n          console.log(response);\n\n          if (response.payload.success) {\n            this.setState({\n              setSnack: true,\n              formMessage: response.payload.message\n            }, () => {\n              resetFields(this.state.passwordData);\n            });\n          } else {\n            this.setState({\n              formError: true,\n              formMessage: response.payload.message\n            });\n          }\n        });\n      } else {\n        this.setState({\n          formError: true,\n          formMessage: \"Vui lòng kiểm tra lại thông tin!\"\n        });\n      }\n    };\n\n    this.updatePasswordForm = element => {\n      const newFormdata = update(element, this.state.passwordData, \"update_password\");\n      this.setState({\n        formError: false,\n        passwordData: newFormdata\n      });\n      this.setState({\n        edited: true\n      });\n    };\n\n    this.unblock = id => {\n      this.props.dispatch(unBlockUser(id));\n    };\n\n    this.renderCotent = type => {\n      switch (type) {\n        case \"profile\":\n          return /*#__PURE__*/React.createElement(\"form\", {\n            className: \"col-xl-9 col-lg-9 col-md-9 col-sm-9 col-10 setting_detail\",\n            onSubmit: event => this.submitForm(event),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row setting_type\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-3 col-md-3 col-sm-3 col-4 label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 15\n            }\n          }, this.state.loading ? /*#__PURE__*/React.createElement(\"div\", {\n            class: \"overlay\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(CircularProgress, {\n            style: {\n              color: \"#5477D5\"\n            },\n            thickness: 7,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 21\n            }\n          })) : \"\", /*#__PURE__*/React.createElement(\"img\", {\n            src: this.props.user.userData.avt,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 17\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-9 col-md-9 col-sm-9 col-8 field\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"h2\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 17\n            }\n          }, this.props.user.userData.userName), /*#__PURE__*/React.createElement(\"label\", {\n            className: \"custom-file-upload\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            type: \"file\",\n            onChange: this.onFileChange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 19\n            }\n          }), /*#__PURE__*/React.createElement(\"h6\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 19\n            }\n          }, \"S\\u1EEDa \\u1EA3nh \\u0111\\u1EA1i di\\u1EC7n\")))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row setting_type\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"ol-xl-3 col-md-3 label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"h3\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 17\n            }\n          }, \"Ri\\xEAng t\\u01B0\")), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-9 col-md-9  field\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(Switch, {\n            checked: this.state.privateMode,\n            onColor: \"#0070F2\",\n            onChange: () => this.handlePrivateChange(),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 17\n            }\n          }))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row setting_type\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"ol-xl-3 col-md-3 label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"h3\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 17\n            }\n          }, \"H\\u1ECD T\\xEAn\")), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-9 col-md-9 field\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(FormField //Có thể để trống phần description nên k cần xử lý event onChange,..\n          , {\n            id: \"name\",\n            formData: this.state.formData.name,\n            change: element => this.updateForm(element),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 17\n            }\n          }))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row setting_type\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"ol-xl-3 col-md-3 label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"h3\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 17\n            }\n          }, \"Ng\\xE0y sinh\")), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-9 col-md-9 field\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(FormField, {\n            id: \"dob\",\n            formData: this.state.formData.dob,\n            change: element => this.updateForm(element),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 17\n            }\n          }))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row setting_type\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"ol-xl-3 col-md-3  label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"h3\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 17\n            }\n          }, \"User name\")), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-9 col-md-9  field\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(FormField //Có thể để trống phần description nên k cần xử lý event onChange,..\n          , {\n            id: \"userName\",\n            formData: this.state.formData.userName,\n            change: element => this.updateForm(element),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 17\n            }\n          }))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row setting_type\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"ol-xl-3 col-md-3  label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"h3\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 17\n            }\n          }, \"Email\")), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-9 col-md-9 field\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(FormField //Có thể để trống phần description nên k cần xử lý event onChange,..\n          , {\n            id: \"email\",\n            formData: this.state.formData.email,\n            change: element => this.updateForm(element),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 17\n            }\n          }))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row setting_type\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-3 col-md-3 label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"h3\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 17\n            }\n          }, \"M\\xF4 t\\u1EA3\")), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-9 col-md-9 field\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(FormField //Có thể để trống phần description nên k cần xử lý event onChange,..\n          , {\n            id: \"bio\",\n            formData: this.state.formData.bio,\n            change: element => this.updateForm(element),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 17\n            }\n          }))), this.state.formError ? /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row setting_type\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"ol-xl-3 col-md-3 label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 17\n            }\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-9 col-md-9 field\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 17\n            }\n          }, this.state.formMessage)) : \"\", /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row setting_type\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"ol-xl-3 col-md-3 label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 15\n            }\n          }), this.state.edited ? /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-9 col-md-9 field\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            className: \"send_btn\",\n            onClick: event => {\n              this.submitForm(event);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 19\n            }\n          }, \"G\\u1EEDi\")) : /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-9 col-md-9  field\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            className: \"send_btn disable\",\n            disabled: \"true\",\n            onClick: event => {\n              this.submitForm(event);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 19\n            }\n          }, \"G\\u1EEDi\"))));\n\n        case \"password\":\n          return /*#__PURE__*/React.createElement(\"form\", {\n            className: \"col-xl-9 col-lg-9 col-md-9 col-sm-9 col-10 setting_detail\",\n            onSubmit: event => this.changePassword(event),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row setting_type\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-3 col-md-3 label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"h3\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 17\n            }\n          }, \"M\\u1EADt kh\\u1EA9u\")), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-9 col-md-9 field\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(FormField, {\n            id: \"currentPassword\",\n            formData: this.state.passwordData.currentPassword //Hàm change nhận vào một element và gọi đến hàm updateForm(element)\n            ,\n            change: element => this.updatePasswordForm(element),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 17\n            }\n          }))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row setting_type\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"ol-xl-3 col-md-3 label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"h3\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 17\n            }\n          }, \"M\\u1EADt kh\\u1EA9u m\\u1EDBi\")), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-9 col-md-9 field\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(FormField, {\n            id: \"password\",\n            formData: this.state.passwordData.password //Hàm change nhận vào một element và gọi đến hàm updateForm(element)\n            ,\n            change: element => this.updatePasswordForm(element),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 17\n            }\n          }))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row setting_type\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"ol-xl-3 col-md-3 label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"h3\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 17\n            }\n          }, \"Nh\\u1EADp l\\u1EA1i\")), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-9 col-md-9 field\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(FormField, {\n            id: \"confirmPassword\",\n            formData: this.state.passwordData.confirmPassword //Hàm change nhận vào một element và gọi đến hàm updateForm(element)\n            ,\n            change: element => this.updatePasswordForm(element),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 17\n            }\n          }))), this.state.formError ? /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row setting_type\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"ol-xl-3 col-md-3 label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 619,\n              columnNumber: 17\n            }\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-9 col-md-9 field\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 17\n            }\n          }, this.state.formMessage)) : \"\", /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row setting_type\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"ol-xl-3 col-md-3 label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 15\n            }\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-9 col-md-9 field\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            className: \"send_btn\",\n            onClick: event => {\n              this.changePassword(event);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 17\n            }\n          }, \"G\\u1EEDi\"))));\n\n        case \"privacy\":\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \" col-xl-9 col-lg-9 col-md-9 col-sm-9 col-10 setting_detail\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"wrapper\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 645,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"h6\", {\n            className: \"title\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 15\n            }\n          }, \"Ng\\u01B0\\u1EDDi d\\xF9ng b\\u1ECB ch\\u1EB7n\"), /*#__PURE__*/React.createElement(\"ul\", {\n            className: \"blocked-user-list\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 15\n            }\n          }, this.props.user.blockedUsers.map(item => {\n            return /*#__PURE__*/React.createElement(\"li\", {\n              className: \"blocked-user-item\",\n              key: item._id,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 650,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"blocked-user-info\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 23\n              }\n            }, /*#__PURE__*/React.createElement(\"img\", {\n              src: item.avt,\n              className: \"blocked-user-avt\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 652,\n                columnNumber: 25\n              }\n            }), /*#__PURE__*/React.createElement(\"h6\", {\n              className: \"blocked-user-name\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 653,\n                columnNumber: 25\n              }\n            }, item.userName)), /*#__PURE__*/React.createElement(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 655,\n                columnNumber: 23\n              }\n            }, this.props.user.userData.blockedUsers.includes(item._id) ? /*#__PURE__*/React.createElement(\"button\", {\n              onClick: () => {\n                this.unblock(item._id);\n              },\n              className: \"bnt btn-block\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 27\n              }\n            }, \"B\\u1ECF ch\\u1EB7n\") : /*#__PURE__*/React.createElement(\"button\", {\n              onClick: () => {\n                this.props.dispatch(blockUser(item._id));\n              },\n              className: \"bnt btn-unblock\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 668,\n                columnNumber: 27\n              }\n            }, \"Ch\\u1EB7n\")));\n          }))));\n      }\n    };\n  }\n\n  reset() {\n    this.setState({\n      edited: false,\n      loading: false,\n      setSnack: false,\n      formError: false,\n      formMessage: \"\"\n    });\n  } // submitForm = (event) => {\n  //     this.setState({loading:true})\n  //     event.preventDefault();\n  //     this.state.formData.privateMode = this.state.privateMode;\n  //     let dataToSubmit = generateData(this.state.formData, 'update_pro')\n  //     console.log(dataToSubmit)\n  //     this.props.dispatch(changeProfile(this.props.user.userData._id, dataToSubmit))\n  //         .then(response => {\n  //             console.log(response);\n  //             if(response.payload.success == false)\n  //             {\n  //                 this.setState({loading:false,severity:'error', setSnack: true, formMessage: response.payload.message})\n  //             }\n  //             else\n  //             {\n  //                 this.setState({loading:false,severity:'success',edited:false, setSnack: true, formMessage: response.payload.message})\n  //                 this.props.dispatch(auth());\n  //             }\n  //           //  this.props.dispatch(auth());\n  //         })\n  // }\n\n\n  getUserForm() {\n    this.state.privateMode = this.props.user.userData.privateMode;\n    this.state.formData.bio.value = this.props.user.userData.bio;\n    this.state.formData.userName.value = this.props.user.userData.userName;\n    this.state.formData.name.value = this.props.user.userData.name;\n    this.state.formData.email.value = this.props.user.userData.email;\n    this.state.formData.email.value = this.props.user.userData.email;\n    this.state.formData.email.value = this.props.user.userData.email;\n    this.state.formData.dob.value = moment(this.props.user.userData.dob).format(\"YYYY-MM-DD\");\n    const formData = this.state.formData;\n    this.setState({\n      edited: false\n    });\n    this.updateFields(formData);\n  }\n\n  componentDidMount() {\n    this.getUserForm();\n    console.log(this.props.user.userData); // this.setState({privateMode:this.props.user.userData.privateMode?this.props.user.userData.privateMode:false})\n\n    this.props.dispatch(getBlockedUsers());\n    const formData = this.state.formData;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"setting_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"setting_wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-2 setting_options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 15\n      }\n    }, this.state.settingState == \"profile\" ? /*#__PURE__*/React.createElement(Button, {\n      className: \"options\",\n      onClick: () => this.handleSetting(\"profile\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(User, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 21\n      }\n    }, \"Th\\xF4ng tin\")) : /*#__PURE__*/React.createElement(Button, {\n      className: \"options disable\",\n      onClick: () => this.handleSetting(\"profile\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(User, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 709,\n        columnNumber: 21\n      }\n    }, \"Th\\xF4ng tin\")), this.state.settingState == \"password\" ? /*#__PURE__*/React.createElement(Button, {\n      className: \"options\",\n      onClick: () => this.handleSetting(\"password\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Lock, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 21\n      }\n    }, \"\\u0110\\u1ED5i m\\u1EADt kh\\u1EA9u\")) : /*#__PURE__*/React.createElement(Button, {\n      className: \"options disable\",\n      onClick: () => this.handleSetting(\"password\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Lock, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 725,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 21\n      }\n    }, \"\\u0110\\u1ED5i m\\u1EADt kh\\u1EA9u\")), this.state.settingState == \"Bảo mật\" ? /*#__PURE__*/React.createElement(Button, {\n      className: \"options\",\n      onClick: () => this.handleSetting(\"privacy\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Lock, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 734,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 21\n      }\n    }, \"B\\u1EA3o m\\u1EADt\")) : /*#__PURE__*/React.createElement(Button, {\n      className: \"options disable\",\n      onClick: () => this.handleSetting(\"privacy\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Lock, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 742,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 743,\n        columnNumber: 21\n      }\n    }, \"B\\u1EA3o m\\u1EADt\"))), this.renderCotent(this.state.settingState))), /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\"\n      },\n      open: this.state.setSnack,\n      onClose: () => this.setState({\n        setSnack: false\n      }),\n      autoHideDuration: 1000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MuiAlert, {\n      elevation: 6,\n      variant: \"filled\",\n      severity: this.state.severity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 13\n      }\n    }, this.state.formMessage))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps)(withRouter(ProfileSettings));","map":{"version":3,"sources":["D:/Kltn/test/social-media/client/src/components/ProfileSettings/index.js"],"names":["moment","React","Component","useEffect","useState","Layout","connect","findPost","Switch","FormField","populateOptionFields","update","ifFormValid","generateData","resetFields","GridDots","User","Lock","updateprofileimgfile","updateprofileimg","changeProfile","changePassword","auth","getBlockedUsers","unBlockUser","blockUser","changePrivate","Link","withRouter","useParams","Button","CircularProgress","Snackbar","MuiAlert","Header","ProfileSettings","state","privateMode","inputValue","settingState","edited","loading","severity","setSnack","formError","formSuccess","formMessage","formData","email","element","value","config","placeholder","label","name","options","validation","required","valid","touched","validationMessage","showlabel","bio","userName","dob","valueAsNumber","type","passwordData","currentPassword","password","confirmPassword","confirm","updateFields","newFormData","setState","submitForm","event","preventDefault","dataToSubmit","console","log","props","dispatch","user","userData","_id","then","response","payload","success","message","onFileChange","target","files","img","url","handlePrivateChange","updateForm","newFormdata","JSON","stringify","trim","format","handleSetting","formIsValid","updatePasswordForm","unblock","id","renderCotent","color","avt","blockedUsers","map","item","includes","reset","getUserForm","componentDidMount","render","vertical","horizontal","mapStateToProps"],"mappings":"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","sourcesContent":["import moment from \"moment\";\r\nimport React, { Component, useEffect, useState } from \"react\";\r\nimport Layout from \"../../hoc/layout\";\r\nimport { connect } from \"react-redux\";\r\nimport { findPost } from \"../../../src/actions/user_action\";\r\nimport Switch from \"react-ios-switch\";\r\nimport FormField from \"../ultils/Form/FormField\";\r\nimport \"./profilesetting.scss\";\r\nimport {\r\n  populateOptionFields,\r\n  update,\r\n  ifFormValid,\r\n  generateData,\r\n  resetFields,\r\n} from \"../ultils/Form/FormActions\";\r\nimport { GridDots, User, Lock } from \"tabler-icons-react\";\r\nimport {\r\n  updateprofileimgfile,\r\n  updateprofileimg,\r\n  changeProfile,\r\n  changePassword,\r\n  auth,\r\n  getBlockedUsers,\r\n  unBlockUser,\r\n  blockUser,\r\n  changePrivate,\r\n} from \"../../actions/user_action\";\r\nimport { Link, withRouter, useParams } from \"react-router-dom\";\r\nimport { Button, CircularProgress, Snackbar } from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Header from \"../Header_Footer/Header\";\r\n\r\nclass ProfileSettings extends Component {\r\n  state = {\r\n    privateMode: false,\r\n    inputValue: \"\",\r\n    settingState: \"profile\",\r\n    edited: false,\r\n    loading: false,\r\n    severity: \"\",\r\n    setSnack: false,\r\n\r\n    formError: false,\r\n    formSuccess: false,\r\n    formMessage: \"\",\r\n    formData: {\r\n      email: {\r\n        element: \"input\",\r\n        value: \"\",\r\n        config: {\r\n          placeholder: \"Email của bạn\",\r\n          label: \"Email\",\r\n          name: \"email\",\r\n          options: [],\r\n        },\r\n        validation: {\r\n          required: true,\r\n          email: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n        validationMessage: \"\",\r\n        showlabel: false,\r\n      },\r\n      name: {\r\n        element: \"input\",\r\n        value: \"\",\r\n        config: {\r\n          placeholder: \"Tên của bạn\",\r\n          label: \"Tên\",\r\n          name: \"name\",\r\n          options: [],\r\n        },\r\n        validation: {\r\n          required: false,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n        validationMessage: \"\",\r\n        showlabel: false,\r\n      },\r\n      bio: {\r\n        element: \"textarea\",\r\n        value: \"\",\r\n        config: {\r\n          placeholder: \"Mô tả về bản thân bạn\",\r\n          label: \"Tiểu sử\",\r\n          name: \"bio\",\r\n          options: [],\r\n        },\r\n        validation: {\r\n          required: false,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n        validationMessage: \"\",\r\n        showlabel: false,\r\n      },\r\n      userName: {\r\n        element: \"input\",\r\n        value: \"\",\r\n        config: {\r\n          placeholder: \"Tên tài khoản\",\r\n          label: \"Tên tài khoản\",\r\n          name: \"userName\",\r\n          options: [],\r\n        },\r\n        validation: {\r\n          required: false,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n        validationMessage: \"\",\r\n        showlabel: false,\r\n      },\r\n      dob: {\r\n        element: \"input\",\r\n        value: \"\",\r\n        valueAsNumber: \"\",\r\n        config: {\r\n          label: \"Ngày sinh\",\r\n          name: \"dob\",\r\n          type: \"date\",\r\n          placeholder: \"ngày sinh\",\r\n        },\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n        validationMessage: \"\",\r\n        showlabel: false,\r\n      },\r\n    },\r\n    passwordData: {\r\n      currentPassword: {\r\n        element: \"password\",\r\n        config: {\r\n          label: \"Mật khẩu\",\r\n          name: \"password_input\",\r\n          type: \"password\",\r\n          placeholder: \"Mật khẩu hiện tại\",\r\n        },\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n        validationMessage: \"\",\r\n        showlabel: false,\r\n      },\r\n      password: {\r\n        element: \"input\",\r\n        config: {\r\n          label: \"Mật khẩu mới\",\r\n          name: \"password_input\",\r\n          type: \"password\",\r\n          placeholder: \"Mật khẩu mới\",\r\n        },\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n        validationMessage: \"\",\r\n        showlabel: false,\r\n      },\r\n      confirmPassword: {\r\n        element: \"input\",\r\n        value: \"\",\r\n        config: {\r\n          label: \"Nhập lại mật khẩu\",\r\n          name: \"confirm_password_input\",\r\n          type: \"password\",\r\n          placeholder: \"Nhập lại mật khẩu\",\r\n        },\r\n        validation: {\r\n          required: true,\r\n          confirm: \"password\",\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n        validationMessage: \"\",\r\n        showlabel: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  updateFields = (newFormData) => {\r\n    this.setState({\r\n      formData: newFormData,\r\n    });\r\n  };\r\n\r\n  reset() {\r\n    this.setState({\r\n      edited: false,\r\n      loading: false,\r\n      setSnack: false,\r\n      formError: false,\r\n      formMessage: \"\",\r\n    });\r\n  }\r\n\r\n  // submitForm = (event) => {\r\n  //     this.setState({loading:true})\r\n  //     event.preventDefault();\r\n  //     this.state.formData.privateMode = this.state.privateMode;\r\n  //     let dataToSubmit = generateData(this.state.formData, 'update_pro')\r\n  //     console.log(dataToSubmit)\r\n  //     this.props.dispatch(changeProfile(this.props.user.userData._id, dataToSubmit))\r\n  //         .then(response => {\r\n  //             console.log(response);\r\n  //             if(response.payload.success == false)\r\n  //             {\r\n  //                 this.setState({loading:false,severity:'error', setSnack: true, formMessage: response.payload.message})\r\n\r\n  //             }\r\n  //             else\r\n  //             {\r\n  //                 this.setState({loading:false,severity:'success',edited:false, setSnack: true, formMessage: response.payload.message})\r\n  //                 this.props.dispatch(auth());\r\n  //             }\r\n\r\n  //           //  this.props.dispatch(auth());\r\n\r\n  //         })\r\n  // }\r\n\r\n  submitForm = async (event) => {\r\n    this.setState({ loading: true });\r\n    event.preventDefault();\r\n    let dataToSubmit = generateData(this.state.formData, \"update_pro\");\r\n    console.log(dataToSubmit);\r\n    await this.props\r\n      .dispatch(changeProfile(this.props.user.userData._id, dataToSubmit))\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.payload.success === false) {\r\n          this.setState({\r\n            loading: false,\r\n            severity: \"error\",\r\n            setSnack: true,\r\n            formMessage: response.payload.message,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            loading: false,\r\n            severity: \"success\",\r\n            edited: false,\r\n            setSnack: true,\r\n            formMessage: response.payload.message,\r\n          });\r\n          this.props.dispatch(auth());\r\n        }\r\n\r\n        //  this.props.dispatch(auth());\r\n      });\r\n  };\r\n\r\n  onFileChange = async (event) => {\r\n    this.setState({ loading: true });\r\n    await this.props.dispatch(updateprofileimgfile(event.target.files[0]));\r\n    await this.props\r\n      .dispatch(\r\n        updateprofileimg(this.props.user.img ? this.props.user.img.url : 0)\r\n      )\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.payload.success == false) {\r\n          this.setState({\r\n            loading: false,\r\n            severity: \"error\",\r\n            setSnack: true,\r\n            formMessage: response.payload.message,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            loading: false,\r\n            severity: \"success\",\r\n            edited: false,\r\n            setSnack: true,\r\n            formMessage: response.payload.message,\r\n          });\r\n          this.props.dispatch(auth());\r\n        }\r\n      });\r\n  };\r\n  handlePrivateChange = () => {\r\n    this.setState({ loading: true });\r\n    this.setState({ privateMode: !this.state.privateMode });\r\n    this.props\r\n      .dispatch(changePrivate(this.state.privateMode))\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.payload.success == false) {\r\n          this.setState({\r\n            loading: false,\r\n            severity: \"error\",\r\n            setSnack: true,\r\n            formMessage: response.payload.message,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            loading: false,\r\n            severity: \"success\",\r\n            edited: false,\r\n            setSnack: true,\r\n            formMessage: response.payload.message,\r\n          });\r\n          this.props.dispatch(auth());\r\n        }\r\n      });\r\n  };\r\n  updateForm = (element) => {\r\n    const newFormdata = update(element, this.state.formData, \"update_pro\");\r\n    this.setState({\r\n      formError: false,\r\n      formData: newFormdata,\r\n    });\r\n    if (\r\n      JSON.stringify(this.state.formData.bio.value.trim()) !=\r\n        JSON.stringify(this.props.user.userData.bio.trim()) ||\r\n      JSON.stringify(this.state.formData.userName.value.trim()) !=\r\n        JSON.stringify(this.props.user.userData.userName.trim()) ||\r\n      JSON.stringify(this.state.formData.name.value.trim()) !=\r\n        JSON.stringify(this.props.user.userData.name.trim()) ||\r\n      JSON.stringify(this.state.formData.email.value.trim()) !=\r\n        JSON.stringify(this.props.user.userData.email.trim()) ||\r\n      JSON.stringify(this.state.formData.dob.value.trim()) !=\r\n        JSON.stringify(\r\n          moment(this.props.user.userData.dob).format(\"YYYY-MM-DD\")\r\n        )\r\n    ) {\r\n      this.setState({ edited: true });\r\n    } else {\r\n      this.setState({ edited: false });\r\n    }\r\n  };\r\n\r\n  getUserForm() {\r\n    this.state.privateMode = this.props.user.userData.privateMode;\r\n    this.state.formData.bio.value = this.props.user.userData.bio;\r\n    this.state.formData.userName.value = this.props.user.userData.userName;\r\n    this.state.formData.name.value = this.props.user.userData.name;\r\n    this.state.formData.email.value = this.props.user.userData.email;\r\n    this.state.formData.email.value = this.props.user.userData.email;\r\n    this.state.formData.email.value = this.props.user.userData.email;\r\n    this.state.formData.dob.value = moment(this.props.user.userData.dob).format(\r\n      \"YYYY-MM-DD\"\r\n    );\r\n    const formData = this.state.formData;\r\n    this.setState({ edited: false });\r\n    this.updateFields(formData);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUserForm();\r\n    console.log(this.props.user.userData);\r\n    // this.setState({privateMode:this.props.user.userData.privateMode?this.props.user.userData.privateMode:false})\r\n    this.props.dispatch(getBlockedUsers());\r\n    const formData = this.state.formData;\r\n  }\r\n\r\n  handleSetting = (type) => {\r\n    this.setState({\r\n      settingState: type,\r\n      edited: false,\r\n      loading: false,\r\n      setSnack: false,\r\n      formError: false,\r\n      formMessage: \"\",\r\n    });\r\n  };\r\n\r\n  changePassword = (event) => {\r\n    this.setState({ loading: true });\r\n    event.preventDefault();\r\n\r\n    let dataToSubmit = generateData(this.state.passwordData, \"change_password\");\r\n    let formIsValid = ifFormValid(this.state.passwordData, \"change_password\");\r\n\r\n    if (formIsValid) {\r\n      console.log(dataToSubmit);\r\n      this.props.dispatch(changePassword(dataToSubmit)).then((response) => {\r\n        console.log(response);\r\n        if (response.payload.success) {\r\n          this.setState(\r\n            {\r\n              setSnack: true,\r\n              formMessage: response.payload.message,\r\n            },\r\n            () => {\r\n              resetFields(this.state.passwordData);\r\n            }\r\n          );\r\n        } else {\r\n          this.setState({\r\n            formError: true,\r\n            formMessage: response.payload.message,\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({\r\n        formError: true,\r\n        formMessage: \"Vui lòng kiểm tra lại thông tin!\",\r\n      });\r\n    }\r\n  };\r\n\r\n  updatePasswordForm = (element) => {\r\n    const newFormdata = update(\r\n      element,\r\n      this.state.passwordData,\r\n      \"update_password\"\r\n    );\r\n    this.setState({\r\n      formError: false,\r\n      passwordData: newFormdata,\r\n    });\r\n    this.setState({ edited: true });\r\n  };\r\n  unblock = (id) => {\r\n    this.props.dispatch(unBlockUser(id));\r\n  };\r\n  renderCotent = (type) => {\r\n    switch (type) {\r\n      case \"profile\":\r\n        return (\r\n          <form\r\n            className=\"col-xl-9 col-lg-9 col-md-9 col-sm-9 col-10 setting_detail\"\r\n            onSubmit={(event) => this.submitForm(event)}\r\n          >\r\n            <div className=\"row setting_type\">\r\n              <div className=\"col-xl-3 col-md-3 col-sm-3 col-4 label\">\r\n                {this.state.loading ? (\r\n                  <div class=\"overlay\">\r\n                    <CircularProgress\r\n                      style={{ color: \"#5477D5\" }}\r\n                      thickness={7}\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <img src={this.props.user.userData.avt}></img>\r\n              </div>\r\n              <div className=\"col-xl-9 col-md-9 col-sm-9 col-8 field\">\r\n                <h2>{this.props.user.userData.userName}</h2>\r\n                <label className=\"custom-file-upload\">\r\n                  <input type=\"file\" onChange={this.onFileChange} />\r\n                  <h6>Sửa ảnh đại diện</h6>\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div className=\"row setting_type\">\r\n              <div className=\"ol-xl-3 col-md-3 label\">\r\n                <h3>Riêng tư</h3>\r\n              </div>\r\n              <div className=\"col-xl-9 col-md-9  field\">\r\n                <Switch\r\n                  checked={this.state.privateMode}\r\n                  onColor=\"#0070F2\"\r\n                  onChange={() => this.handlePrivateChange()}\r\n                ></Switch>\r\n              </div>\r\n            </div>\r\n            <div className=\"row setting_type\">\r\n              <div className=\"ol-xl-3 col-md-3 label\">\r\n                <h3>Họ Tên</h3>\r\n              </div>\r\n              <div className=\"col-xl-9 col-md-9 field\">\r\n                <FormField\r\n                  //Có thể để trống phần description nên k cần xử lý event onChange,..\r\n                  id={\"name\"}\r\n                  formData={this.state.formData.name}\r\n                  change={(element) => this.updateForm(element)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row setting_type\">\r\n              <div className=\"ol-xl-3 col-md-3 label\">\r\n                <h3>Ngày sinh</h3>\r\n              </div>\r\n              <div className=\"col-xl-9 col-md-9 field\">\r\n                <FormField\r\n                  id={\"dob\"}\r\n                  formData={this.state.formData.dob}\r\n                  change={(element) => this.updateForm(element)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row setting_type\">\r\n              <div className=\"ol-xl-3 col-md-3  label\">\r\n                <h3>User name</h3>\r\n              </div>\r\n              <div className=\"col-xl-9 col-md-9  field\">\r\n                <FormField\r\n                  //Có thể để trống phần description nên k cần xử lý event onChange,..\r\n                  id={\"userName\"}\r\n                  formData={this.state.formData.userName}\r\n                  change={(element) => this.updateForm(element)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row setting_type\">\r\n              <div className=\"ol-xl-3 col-md-3  label\">\r\n                <h3>Email</h3>\r\n              </div>\r\n              <div className=\"col-xl-9 col-md-9 field\">\r\n                <FormField\r\n                  //Có thể để trống phần description nên k cần xử lý event onChange,..\r\n                  id={\"email\"}\r\n                  formData={this.state.formData.email}\r\n                  change={(element) => this.updateForm(element)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row setting_type\">\r\n              <div className=\"col-xl-3 col-md-3 label\">\r\n                <h3>Mô tả</h3>\r\n              </div>\r\n              <div className=\"col-xl-9 col-md-9 field\">\r\n                <FormField\r\n                  //Có thể để trống phần description nên k cần xử lý event onChange,..\r\n                  id={\"bio\"}\r\n                  formData={this.state.formData.bio}\r\n                  change={(element) => this.updateForm(element)}\r\n                />\r\n              </div>\r\n            </div>\r\n            {this.state.formError ? (\r\n              <div className=\"row setting_type\">\r\n                <div className=\"ol-xl-3 col-md-3 label\"></div>\r\n                <div className=\"col-xl-9 col-md-9 field\">\r\n                  {this.state.formMessage}\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <div className=\"row setting_type\">\r\n              <div className=\"ol-xl-3 col-md-3 label\"></div>\r\n              {this.state.edited ? (\r\n                <div className=\"col-xl-9 col-md-9 field\">\r\n                  <Button\r\n                    className=\"send_btn\"\r\n                    onClick={(event) => {\r\n                      this.submitForm(event);\r\n                    }}\r\n                  >\r\n                    Gửi\r\n                  </Button>\r\n                </div>\r\n              ) : (\r\n                <div className=\"col-xl-9 col-md-9  field\">\r\n                  <Button\r\n                    className=\"send_btn disable\"\r\n                    disabled=\"true\"\r\n                    onClick={(event) => {\r\n                      this.submitForm(event);\r\n                    }}\r\n                  >\r\n                    Gửi\r\n                  </Button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </form>\r\n        );\r\n      case \"password\":\r\n        return (\r\n          <form\r\n            className=\"col-xl-9 col-lg-9 col-md-9 col-sm-9 col-10 setting_detail\"\r\n            onSubmit={(event) => this.changePassword(event)}\r\n          >\r\n            <div className=\"row setting_type\">\r\n              <div className=\"col-xl-3 col-md-3 label\">\r\n                <h3>Mật khẩu</h3>\r\n              </div>\r\n              <div className=\"col-xl-9 col-md-9 field\">\r\n                <FormField\r\n                  id={\"currentPassword\"}\r\n                  formData={this.state.passwordData.currentPassword}\r\n                  //Hàm change nhận vào một element và gọi đến hàm updateForm(element)\r\n                  change={(element) => this.updatePasswordForm(element)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row setting_type\">\r\n              <div className=\"ol-xl-3 col-md-3 label\">\r\n                <h3>Mật khẩu mới</h3>\r\n              </div>\r\n              <div className=\"col-xl-9 col-md-9 field\">\r\n                <FormField\r\n                  id={\"password\"}\r\n                  formData={this.state.passwordData.password}\r\n                  //Hàm change nhận vào một element và gọi đến hàm updateForm(element)\r\n                  change={(element) => this.updatePasswordForm(element)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row setting_type\">\r\n              <div className=\"ol-xl-3 col-md-3 label\">\r\n                <h3>Nhập lại</h3>\r\n              </div>\r\n              <div className=\"col-xl-9 col-md-9 field\">\r\n                <FormField\r\n                  id={\"confirmPassword\"}\r\n                  formData={this.state.passwordData.confirmPassword}\r\n                  //Hàm change nhận vào một element và gọi đến hàm updateForm(element)\r\n                  change={(element) => this.updatePasswordForm(element)}\r\n                />\r\n              </div>\r\n            </div>\r\n            {this.state.formError ? (\r\n              <div className=\"row setting_type\">\r\n                <div className=\"ol-xl-3 col-md-3 label\"></div>\r\n                <div className=\"col-xl-9 col-md-9 field\">\r\n                  {this.state.formMessage}\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <div className=\"row setting_type\">\r\n              <div className=\"ol-xl-3 col-md-3 label\"></div>\r\n              <div className=\"col-xl-9 col-md-9 field\">\r\n                <Button\r\n                  className=\"send_btn\"\r\n                  onClick={(event) => {\r\n                    this.changePassword(event);\r\n                  }}\r\n                >\r\n                  Gửi\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        );\r\n      case \"privacy\":\r\n        return (\r\n          <div className=\" col-xl-9 col-lg-9 col-md-9 col-sm-9 col-10 setting_detail\">\r\n            <div className=\"wrapper\">\r\n              <h6 className=\"title\">Người dùng bị chặn</h6>\r\n              <ul className=\"blocked-user-list\">\r\n                {this.props.user.blockedUsers.map((item) => {\r\n                  return (\r\n                    <li className=\"blocked-user-item\" key={item._id}>\r\n                      <div className=\"blocked-user-info\">\r\n                        <img src={item.avt} className=\"blocked-user-avt\" />\r\n                        <h6 className=\"blocked-user-name\">{item.userName}</h6>\r\n                      </div>\r\n                      <div>\r\n                        {this.props.user.userData.blockedUsers.includes(\r\n                          item._id\r\n                        ) ? (\r\n                          <button\r\n                            onClick={() => {\r\n                              this.unblock(item._id);\r\n                            }}\r\n                            className=\"bnt btn-block\"\r\n                          >\r\n                            Bỏ chặn\r\n                          </button>\r\n                        ) : (\r\n                          <button\r\n                            onClick={() => {\r\n                              this.props.dispatch(blockUser(item._id));\r\n                            }}\r\n                            className=\"bnt btn-unblock\"\r\n                          >\r\n                            Chặn\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <div className=\"setting_container\">\r\n          <div className=\"setting_wrapper\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-2 setting_options\">\r\n                {this.state.settingState == \"profile\" ? (\r\n                  <Button\r\n                    className=\"options\"\r\n                    onClick={() => this.handleSetting(\"profile\")}\r\n                  >\r\n                    <User size={20} strokeWidth={1} color=\"black\" />\r\n                    <p>Thông tin</p>\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    className=\"options disable\"\r\n                    onClick={() => this.handleSetting(\"profile\")}\r\n                  >\r\n                    <User size={20} strokeWidth={1} color=\"black\" />\r\n                    <p>Thông tin</p>\r\n                  </Button>\r\n                )}\r\n                {this.state.settingState == \"password\" ? (\r\n                  <Button\r\n                    className=\"options\"\r\n                    onClick={() => this.handleSetting(\"password\")}\r\n                  >\r\n                    <Lock size={20} strokeWidth={1} color=\"black\" />\r\n                    <p>Đổi mật khẩu</p>\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    className=\"options disable\"\r\n                    onClick={() => this.handleSetting(\"password\")}\r\n                  >\r\n                    <Lock size={20} strokeWidth={1} color=\"black\" />\r\n                    <p>Đổi mật khẩu</p>\r\n                  </Button>\r\n                )}\r\n                {this.state.settingState == \"Bảo mật\" ? (\r\n                  <Button\r\n                    className=\"options\"\r\n                    onClick={() => this.handleSetting(\"privacy\")}\r\n                  >\r\n                    <Lock size={20} strokeWidth={1} color=\"black\" />\r\n                    <p>Bảo mật</p>\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    className=\"options disable\"\r\n                    onClick={() => this.handleSetting(\"privacy\")}\r\n                  >\r\n                    <Lock size={20} strokeWidth={1} color=\"black\" />\r\n                    <p>Bảo mật</p>\r\n                  </Button>\r\n                )}\r\n              </div>\r\n              {this.renderCotent(this.state.settingState)}\r\n            </div>\r\n          </div>\r\n          <Snackbar\r\n            anchorOrigin={{\r\n              vertical: \"bottom\",\r\n              horizontal: \"center\",\r\n            }}\r\n            open={this.state.setSnack}\r\n            onClose={() => this.setState({ setSnack: false })}\r\n            autoHideDuration={1000}\r\n          >\r\n            <MuiAlert\r\n              elevation={6}\r\n              variant=\"filled\"\r\n              severity={this.state.severity}\r\n            >\r\n              {this.state.formMessage}\r\n            </MuiAlert>\r\n          </Snackbar>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(withRouter(ProfileSettings));\r\n"]},"metadata":{},"sourceType":"module"}