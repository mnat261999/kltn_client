{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kltn\\\\test\\\\social-media\\\\client\\\\src\\\\components\\\\Resetpass\\\\ResetPass.js\";\nimport FormField from '../ultils/Form/FormField';\nimport axios from 'axios';\nimport { USER_SERVER } from '../ultils/mise';\nimport { update, ifFormValid, generateData } from '../ultils/Form/FormActions';\nimport React, { Component } from 'react';\nimport './index.scss';\n\nclass ResetPass extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      resetToken: \"\",\n      formErrorMessage: \"\",\n      formError: false,\n      formSuccess: false,\n      formData: {\n        password: {\n          element: 'input',\n          config: {\n            label: 'Mật khẩu',\n            name: 'password_input',\n            type: 'password',\n            placeholder: 'Mật khẩu'\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        },\n        confirmPassword: {\n          element: 'input',\n          value: '',\n          config: {\n            label: 'Nhập lại mật khẩu',\n            name: 'confirm_password_input',\n            type: 'password',\n            placeholder: 'Nhập lại mật khẩu'\n          },\n          validation: {\n            required: true,\n            confirm: 'password'\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        }\n      }\n    };\n\n    this.updateForm = element => {\n      //Hàm update được viết trong FormActions.js\n      const newFormdata = update(element, this.state.formData, 'reset_pass'); //Cập nhật lại State\n\n      this.setState({\n        formError: false,\n        formData: newFormdata\n      });\n    };\n\n    this.submitForm = event => {\n      console.log(\"submitted\");\n      event.preventDefault();\n      let dataToSubmit = generateData(this.state.formData, 'reset_pass');\n      let formIsValid = ifFormValid(this.state.formData, 'reset_pass');\n\n      if (formIsValid) {\n        console.log(dataToSubmit, this.state.resetToken);\n        axios.post(`${USER_SERVER}/reset_pass`, { ...dataToSubmit,\n          resetToken: this.state.resetToken\n        }).then(response => {\n          console.log(response.data.success);\n\n          if (response.data.success) {\n            this.setState({\n              formSuccess: true,\n              formError: false\n            });\n            setTimeout(() => {\n              this.props.history.push('/register_login');\n            }, 3000);\n          } else {\n            this.setState({\n              formSuccess: false,\n              formError: true,\n              formErrorMessage: response.data.message\n            });\n          }\n        });\n      } else {\n        this.setState({\n          formError: true,\n          formSuccess: false\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    const resetToken = this.props.match.params.token;\n    this.setState({\n      resetToken\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"resetPass\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"banner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signin__logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"logo\",\n      src: require('../../asset/login-page/logo2x.png'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"stunning_text\",\n      src: require('../../asset/login-page/stun2x.png'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }, \"Kh\\xF4i ph\\u1EE5c m\\u1EADt kh\\u1EA9u\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"register__form\",\n      onSubmit: event => this.submitForm(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormField, {\n      id: 'password',\n      formData: this.state.formData.password,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      id: 'confirmPassword',\n      formData: this.state.formData.confirmPassword,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"signin__button\",\n      onClick: event => {\n        this.submitForm(event);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, \"Reset password\"), this.state.formError ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 33\n      }\n    }, this.state.formErrorMessage) : null, this.state.formSuccess ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 29\n      }\n    }, \"Done, check your email\") : null))));\n  }\n\n}\n\nexport default ResetPass;","map":{"version":3,"sources":["D:/Kltn/test/social-media/client/src/components/Resetpass/ResetPass.js"],"names":["FormField","axios","USER_SERVER","update","ifFormValid","generateData","React","Component","ResetPass","state","resetToken","formErrorMessage","formError","formSuccess","formData","password","element","config","label","name","type","placeholder","validation","required","valid","touched","validationMessage","showlabel","confirmPassword","value","confirm","updateForm","newFormdata","setState","submitForm","event","console","log","preventDefault","dataToSubmit","formIsValid","post","then","response","data","success","setTimeout","props","history","push","message","componentDidMount","match","params","token","render","require"],"mappings":"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","sourcesContent":["import FormField from '../ultils/Form/FormField';\r\nimport axios from 'axios'\r\nimport { USER_SERVER } from '../ultils/mise';\r\nimport { update, ifFormValid, generateData } from '../ultils/Form/FormActions';\r\nimport React, { Component } from 'react';\r\nimport './index.scss';\r\n\r\nclass ResetPass extends Component {\r\n    state = {\r\n        resetToken: \"\",\r\n        formErrorMessage: \"\",\r\n        formError: false,\r\n        formSuccess: false,\r\n        formData: {\r\n            password: {\r\n                element: 'input',\r\n                config: {\r\n                    label: 'Mật khẩu',\r\n                    name: 'password_input',\r\n                    type: 'password',\r\n                    placeholder: 'Mật khẩu'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false,\r\n            },\r\n            confirmPassword: {\r\n                element: 'input',\r\n                value: '',\r\n                config: {\r\n                    label: 'Nhập lại mật khẩu',\r\n                    name: 'confirm_password_input',\r\n                    type: 'password',\r\n                    placeholder: 'Nhập lại mật khẩu'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    confirm: 'password'\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false,\r\n            }\r\n        }\r\n    }\r\n\r\n    updateForm = (element) => {\r\n        //Hàm update được viết trong FormActions.js\r\n        const newFormdata = update(element, this.state.formData, 'reset_pass');\r\n        //Cập nhật lại State\r\n        this.setState({\r\n            formError: false,\r\n            formData: newFormdata\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        const resetToken = this.props.match.params.token;\r\n        this.setState({resetToken})\r\n    }\r\n\r\n    submitForm = (event) => {\r\n        console.log(\"submitted\")\r\n        event.preventDefault();\r\n\r\n        let dataToSubmit = generateData(this.state.formData, 'reset_pass');\r\n        let formIsValid = ifFormValid(this.state.formData, 'reset_pass');\r\n\r\n        if (formIsValid) {\r\n            console.log(dataToSubmit, this.state.resetToken);\r\n            axios.post(`${USER_SERVER}/reset_pass`, { ...dataToSubmit,resetToken: this.state.resetToken})\r\n            .then(response => {\r\n                console.log(response.data.success)\r\n                if (response.data.success){\r\n                    this.setState({\r\n                        formSuccess: true,\r\n                        formError: false\r\n                    })\r\n                    setTimeout(()=>{\r\n                        this.props.history.push('/register_login')\r\n                    },3000)\r\n                }\r\n                else{\r\n                    this.setState({\r\n                        formSuccess: false,\r\n                        formError: true,\r\n                        formErrorMessage: response.data.message\r\n                    })\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                formError: true,\r\n                formSuccess: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"resetPass\">\r\n                <div className=\"banner\">\r\n                    <div className='signin__logo'>\r\n                        <img className=\"logo\" src={require('../../asset/login-page/logo2x.png')} />\r\n                        <img className=\"stunning_text\" src={require('../../asset/login-page/stun2x.png')} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"content\">\r\n                    <div className=\"wrapper\">\r\n                        <div className=\"title\">Khôi phục mật khẩu</div>\r\n                    <form className='register__form' onSubmit={(event) => this.submitForm(event)}>\r\n                        <FormField\r\n                            id={'password'}\r\n                            formData={this.state.formData.password}\r\n                            change={(element) => this.updateForm(element)}\r\n                        />\r\n                        <FormField\r\n                            id={'confirmPassword'}\r\n                            formData={this.state.formData.confirmPassword}\r\n                            change={(element) => this.updateForm(element)}\r\n                        />\r\n                        <button className='signin__button' onClick={(event) => { this.submitForm(event) }}>\r\n                                Reset password\r\n                        </button>\r\n                        {\r\n                            this.state.formError ?\r\n                                <div className=\"message\">\r\n                                    {this.state.formErrorMessage}\r\n                                </div>\r\n                                : null\r\n                        }\r\n                        {\r\n                        this.state.formSuccess ?\r\n                            <div className=\"message\">\r\n                               Done, check your email\r\n                        </div>\r\n                        : null\r\n                        }\r\n                </form>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResetPass;"]},"metadata":{},"sourceType":"module"}