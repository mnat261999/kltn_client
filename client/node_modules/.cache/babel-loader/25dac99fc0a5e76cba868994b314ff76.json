{"ast":null,"code":"import axios from 'axios';\nimport { REPORT_SERVER, POST_SERVER } from '../components/ultils/mise';\nimport { GET_ALL_REPORTS, SORT_REPORT, UPDATE_REPORT, DELETE_POST_REPORT, DELETE_POST, DELETE_COMMENT, GET_REPORT_DETAIL, CLEAR, RESTRICT_USER, DELETE_RESTRICTED_FUNCTION, DELETE_REPORT_POST, DELETE_REPORT_COMMENT } from './types';\nexport function getAll(limit, skip, filter) {\n  let prevState = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  const data = {\n    skip,\n    limit,\n    filter\n  };\n  console.log(data);\n  const request = axios.post(`${REPORT_SERVER}/getAll`, data).then(response => {\n    console.log(response.data.reports);\n    let newState = [...prevState, ...response.data.reports];\n    console.log(response.data.reports);\n    return {\n      size: response.data.size,\n      reports: newState\n    };\n  });\n  return {\n    type: GET_ALL_REPORTS,\n    payload: request\n  };\n}\nexport function sort(sortBy, list) {\n  switch (sortBy.type) {\n    case \"date\":\n      list.sort((a, b) => {\n        if (a.dateDifference > b.dateDifference) {\n          return 1 * sortBy.order;\n        } else if (a.dateDifference == b.dateDifference) {\n          return 0;\n        } else {\n          return -1 * sortBy.order;\n        }\n      });\n      console.log(list);\n      return list;\n\n    case \"status\":\n      console.log(sortBy);\n      list.sort((x, y) => {\n        return x.status === y.status ? 0 : x.status ? -1 * sortBy.order : 1 * sortBy.order;\n      });\n      console.log(list);\n      return list;\n\n    case \"reportType\":\n      console.log(sortBy);\n      list.sort((a, b) => {\n        if (a.reportType > b.reportType) {\n          return 1 * sortBy.order;\n        } else {\n          return -1 * sortBy.order;\n        }\n      });\n      console.log(list);\n      return list;\n  }\n}\nexport function getReportDetail(id) {\n  const data = {\n    id\n  };\n  const request = axios.post(`${REPORT_SERVER}/getDetail`, data).then(response => {\n    console.log(response.data);\n    return response.data;\n  });\n  return {\n    type: GET_REPORT_DETAIL,\n    payload: request\n  };\n}\nexport function clearDetail() {\n  const request = {};\n  return {\n    type: CLEAR,\n    payload: request\n  };\n}\nexport function updateReport(id) {\n  const data = {\n    id\n  };\n  const request = axios.put(`${REPORT_SERVER}/updateReport`, data).then(response => {\n    console.log(response.data);\n    return response.data;\n  });\n  return {\n    type: UPDATE_REPORT,\n    payload: request\n  };\n}\nexport function deletePost(postId, reportId, id) {\n  const data = {\n    postId,\n    reportId,\n    id\n  };\n  const request = axios.post(`${REPORT_SERVER}/delete_post`, data).then(response => {\n    console.log(response.data);\n    return response.data;\n  });\n  return {\n    type: DELETE_REPORT_POST,\n    payload: request\n  };\n}\nexport function deleteComment(commentId, reportId, postId) {\n  const data = {\n    commentId,\n    reportId,\n    postId\n  };\n  const request = axios.post(`${REPORT_SERVER}/delete_comment`, data).then(response => {\n    console.log(response.data);\n    return response.data;\n  });\n  return {\n    type: DELETE_REPORT_COMMENT,\n    payload: request\n  };\n}\nexport function deleteRestrictedFunction(funcId, _id) {\n  const data = {\n    funcId,\n    _id\n  };\n  const request = axios.put(`${REPORT_SERVER}/deleteRestrictFunction`, data).then(response => {\n    console.log(response.data);\n    return response.data;\n  });\n  return {\n    type: DELETE_RESTRICTED_FUNCTION,\n    payload: request\n  };\n}\nexport function restrictUser(func, userId, reportId) {\n  const data = {\n    funcList: func,\n    _id: userId,\n    reportId: reportId\n  };\n  console.log(data);\n  const request = axios.put(`${REPORT_SERVER}/restrictUserFunction`, data).then(response => {\n    console.log(response.data);\n    return response.data;\n  });\n  return {\n    type: RESTRICT_USER,\n    payload: request\n  };\n}","map":{"version":3,"names":["axios","REPORT_SERVER","POST_SERVER","GET_ALL_REPORTS","SORT_REPORT","UPDATE_REPORT","DELETE_POST_REPORT","DELETE_POST","DELETE_COMMENT","GET_REPORT_DETAIL","CLEAR","RESTRICT_USER","DELETE_RESTRICTED_FUNCTION","DELETE_REPORT_POST","DELETE_REPORT_COMMENT","getAll","limit","skip","filter","prevState","data","console","log","request","post","then","response","reports","newState","size","type","payload","sort","sortBy","list","a","b","dateDifference","order","x","y","status","reportType","getReportDetail","id","clearDetail","updateReport","put","deletePost","postId","reportId","deleteComment","commentId","deleteRestrictedFunction","funcId","_id","restrictUser","func","userId","funcList"],"sources":["D:/Kltn/test/social-media/client/src/actions/report_actions.js"],"sourcesContent":["import axios from 'axios';\r\nimport { REPORT_SERVER,POST_SERVER } from '../components/ultils/mise';\r\nimport {\r\n    GET_ALL_REPORTS,\r\n    SORT_REPORT,\r\n    UPDATE_REPORT,\r\n    DELETE_POST_REPORT,\r\n    DELETE_POST,\r\n    DELETE_COMMENT,\r\n    GET_REPORT_DETAIL,\r\n    CLEAR,\r\n    RESTRICT_USER,\r\n    DELETE_RESTRICTED_FUNCTION,\r\n    DELETE_REPORT_POST,\r\n    DELETE_REPORT_COMMENT\r\n} from './types';\r\n\r\n\r\nexport function getAll(limit, skip, filter, prevState = []) {\r\n    const data = {\r\n        skip,\r\n        limit,\r\n        filter,\r\n    }\r\n    console.log(data);\r\n    const request = axios.post(`${REPORT_SERVER}/getAll`, data)\r\n    .then(response => {\r\n        console.log(response.data.reports)\r\n        let newState = [\r\n            ...prevState,\r\n            ...response.data.reports\r\n        ]\r\n        console.log(response.data.reports);\r\n        return {\r\n            size: response.data.size,\r\n            reports: newState\r\n        }\r\n    })\r\n    return {\r\n        type: GET_ALL_REPORTS,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function sort(sortBy, list){\r\n   switch(sortBy.type){\r\n        case \"date\": \r\n            list.sort((a,b)=>{\r\n                if (a.dateDifference > b.dateDifference){\r\n                    return 1 * sortBy.order\r\n                }else if (a.dateDifference == b.dateDifference){\r\n                    return 0\r\n                }\r\n                else {\r\n                    return -1 * sortBy.order\r\n                }\r\n            })\r\n            console.log(list);\r\n            return list;\r\n        case \"status\": \r\n           console.log(sortBy);\r\n           list.sort((x, y) => {\r\n               return (x.status === y.status) ? 0 : x.status ? -1 * sortBy.order : 1 * sortBy.order;\r\n           })\r\n           console.log(list);\r\n           return list;\r\n        case \"reportType\": \r\n           console.log(sortBy);\r\n           list.sort((a, b) => {\r\n               if (a.reportType > b.reportType) {\r\n                   return 1 * sortBy.order\r\n               } else {\r\n                   return -1 * sortBy.order\r\n               }\r\n           })\r\n           console.log(list);\r\n           return list;\r\n   }\r\n}\r\n\r\nexport function getReportDetail(id) {\r\n    const data={id}\r\n    const request = axios.post(`${REPORT_SERVER}/getDetail`, data)\r\n        .then(response => {\r\n            console.log(response.data);\r\n            return response.data\r\n        })\r\n    return {\r\n        type: GET_REPORT_DETAIL,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function clearDetail(){\r\n    const request = {}\r\n    return {\r\n        type: CLEAR,\r\n        payload: request,\r\n    }\r\n}\r\n\r\nexport function updateReport(id){\r\n    const data = { id }\r\n    const request = axios.put(`${REPORT_SERVER}/updateReport`, data)\r\n        .then(response => {\r\n            console.log(response.data);\r\n            return response.data\r\n        })\r\n    return {\r\n        type: UPDATE_REPORT,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function deletePost(postId,reportId, id){\r\n    const data = { postId, reportId, id }\r\n    const request = axios.post(`${REPORT_SERVER}/delete_post`, data)\r\n        .then(response => {\r\n            console.log(response.data);\r\n            return response.data\r\n        })\r\n    return {\r\n        type: DELETE_REPORT_POST,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function deleteComment(commentId, reportId, postId) {\r\n    const data = { commentId, reportId, postId }\r\n    const request = axios.post(`${REPORT_SERVER}/delete_comment`, data)\r\n        .then(response => {\r\n            console.log(response.data);\r\n            return response.data\r\n        })\r\n    return {\r\n        type: DELETE_REPORT_COMMENT,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function deleteRestrictedFunction(funcId, _id){\r\n    const data = { funcId, _id }\r\n    const request = axios.put(`${REPORT_SERVER}/deleteRestrictFunction`, data)\r\n        .then(response => {\r\n            console.log(response.data);\r\n            return response.data\r\n        })\r\n    return {\r\n        type: DELETE_RESTRICTED_FUNCTION,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function restrictUser(func,userId,reportId){\r\n    const data = { funcList: func,_id: userId, reportId: reportId}\r\n    console.log(data);\r\n    const request = axios.put(`${REPORT_SERVER}/restrictUserFunction`, data)\r\n        .then(response => {\r\n            console.log(response.data);\r\n            return response.data\r\n        })\r\n    return {\r\n        type: RESTRICT_USER,\r\n        payload: request\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}