{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kltn\\\\test\\\\social-media\\\\client\\\\src\\\\components\\\\Register_login\\\\register.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport FormField from '../ultils/Form/FormField';\nimport { populateOptionFields, updateFields } from '../ultils/Form/FormActions';\nimport './register.scss';\nimport Dialog from '@material-ui/core/Dialog';\nimport { update, generateData, ifFormValid } from '../ultils/Form/FormActions';\nimport { withRouter } from 'react-router-dom';\nimport { registerUser, getNationality } from '../../actions/user_action'; // import {  } from '../../actions/product_actions';\n\nimport MyButton from '../ultils/button';\nimport GoogleLoginButton from '../GoggleLoginButton/GoogleLoginButton';\nimport FacebookLoginButton from '../FacebookLoginButton/FacebookLoginButton';\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formError: false,\n      ErrorMessage: \"\",\n      formSuccess: false,\n      RegisterWith: false,\n      formData: {\n        name: {\n          element: 'input',\n          value: '',\n          config: {\n            label: 'Tên',\n            name: 'name_input',\n            type: 'text',\n            placeholder: 'Họ tên'\n          },\n          validation: {\n            required: true\n          },\n          valid: true,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        },\n        email: {\n          element: 'input',\n          value: '',\n          config: {\n            label: 'Email',\n            name: 'email_input',\n            type: 'email',\n            placeholder: 'Email'\n          },\n          validation: {\n            required: true,\n            email: true\n          },\n          valid: true,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        },\n        userName: {\n          element: 'input',\n          value: '',\n          config: {\n            label: 'Tên người dùng',\n            name: 'userName_input',\n            type: 'text',\n            placeholder: 'Tên người dùng'\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        },\n        dob: {\n          element: 'input',\n          value: '',\n          valueAsNumber: \"\",\n          config: {\n            label: 'Ngày sinh',\n            name: 'dob',\n            type: 'date',\n            placeholder: 'ngày sinh'\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        },\n        password: {\n          element: 'input',\n          config: {\n            label: 'Mật khẩu',\n            name: 'password_input',\n            type: 'password',\n            placeholder: 'Mật khẩu'\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        },\n        confirmPassword: {\n          element: 'input',\n          value: '',\n          config: {\n            label: 'Nhập lại mật khẩu',\n            name: 'confirm_password_input',\n            type: 'password',\n            placeholder: 'Nhập lại mật khẩu'\n          },\n          validation: {\n            required: true,\n            confirm: 'password'\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        },\n        nationality: {\n          element: 'select',\n          value: '',\n          config: {\n            label: 'nationality',\n            name: 'nationality',\n            options: []\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        }\n      }\n    };\n\n    this.updateFields = newFormData => {\n      this.setState({\n        formData: newFormData\n      });\n    };\n\n    this.updateForm = element => {\n      console.log(this.state);\n      const newFormdata = update(element, this.state.formData, 'register');\n      this.setState({\n        formError: false,\n        formData: newFormdata\n      });\n    };\n\n    this.submitForm = event => {\n      event.preventDefault();\n      let dataToSubmit = generateData(this.state.formData, 'register');\n      let formIsValid = ifFormValid(this.state.formData, 'register');\n\n      if (formIsValid) {\n        console.log(dataToSubmit);\n        console.log(\"OK\");\n        this.props.dispatch(registerUser(dataToSubmit)).then(response => {\n          if (response.payload.success) {\n            this.setState({\n              formError: false,\n              formSuccess: true\n            });\n            setTimeout(() => {\n              this.props.history.push('/register_login');\n            }, 3000);\n          } else {\n            this.setState({\n              formError: true,\n              ErrorMessage: response.payload.message\n            });\n          }\n        }).catch(e => {\n          this.setState({\n            formError: true\n          });\n        });\n      } else {\n        this.setState({\n          formError: true\n        });\n      }\n    };\n\n    this.Register = event => {\n      event.preventDefault();\n      let dataToSubmit = generateData(this.state.formData, 'register');\n      let formIsValid = ifFormValid(this.state.formData, 'register');\n      dataToSubmit.name = this.props.user.RegisterInfo.name;\n      dataToSubmit.email = this.props.user.RegisterInfo.email;\n      dataToSubmit.avt = this.props.user.RegisterInfo.picture;\n\n      if (formIsValid) {\n        console.log(dataToSubmit);\n        console.log(\"OK\");\n        this.props.dispatch(registerUser(dataToSubmit)).then(response => {\n          if (response.payload.success) {\n            this.setState({\n              formError: false,\n              formSuccess: true\n            });\n            setTimeout(() => {\n              this.props.history.push('/register_login');\n            }, 3000);\n          } else {\n            this.setState({\n              formError: true,\n              ErrorMessage: response.payload.message\n            });\n          }\n        }).catch(e => {\n          this.setState({\n            formError: true\n          });\n        });\n      } else {\n        this.setState({\n          formError: true\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    const formData = this.state.formData;\n    this.props.dispatch(getNationality()).then(response => {\n      console.log(response);\n      const newFormData = populateOptionFields(formData, response.payload, 'nationality');\n      this.updateFields(newFormData);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register_page_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-6 col-lg-6 col-md-6 no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register_slogan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"logo\",\n      src: \"./images/landingPage/logoIcon2x.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 37\n      }\n    }, \"Begin\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 37\n      }\n    }, \"your\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 37\n      }\n    }, \"Journey\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-6 col-lg-6 col-md-6  no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 37\n      }\n    }, this.props.user.RegisterInfo ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"register__form\",\n      onSubmit: event => this.submitForm(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"avt_wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"avt\",\n      src: this.props.user.RegisterInfo.picture,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register__row2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      disabled: true,\n      className: \"display_input\",\n      type: \"text\",\n      value: this.props.user.RegisterInfo.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      disabled: true,\n      className: \"display_input\",\n      type: \"text\",\n      value: this.props.user.RegisterInfo.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      id: 'userName',\n      formData: this.state.formData.userName,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      id: 'nationality',\n      formData: this.state.formData.nationality,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      id: 'dob',\n      formData: this.state.formData.dob,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      id: 'password',\n      formData: this.state.formData.password,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      id: 'confirmPassword',\n      formData: this.state.formData.confirmPassword,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 53\n      }\n    })), this.state.formError ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 53\n      }\n    }, this.state.ErrorMessage) : '', /*#__PURE__*/React.createElement(\"button\", {\n      className: \"register__button\",\n      onClick: event => {\n        this.Register(event);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 53\n      }\n    }, \"\\u0110\\u0103ng k\\xFD\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register_wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 57\n      }\n    }, \"\\u0110\\xE3 c\\xF3 t\\xE0i kho\\u1EA3n?\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Signin_link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(MyButton, {\n      type: \"default\",\n      title: \"\\u0110\\u0103ng nh\\u1EADp\",\n      linkTo: \"/register_login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 61\n      }\n    }))))) : /*#__PURE__*/React.createElement(\"form\", {\n      className: \"register__form\",\n      onSubmit: event => this.submitForm(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register__logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"logo\",\n      src: require('../../asset/login-page/logo2x.png'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"stunning_text\",\n      src: require('../../asset/login-page/stun2x.png'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(GoogleLoginButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(FacebookLoginButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"or_label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 45\n      }\n    }, \"HO\\u1EB6C\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register__row2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormField, {\n      id: 'name',\n      formData: this.state.formData.name,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      id: 'email',\n      formData: this.state.formData.email,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      id: 'nationality',\n      formData: this.state.formData.nationality,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      id: 'dob',\n      formData: this.state.formData.dob,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      id: 'userName',\n      formData: this.state.formData.userName,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      id: 'password',\n      formData: this.state.formData.password //Hàm change nhận vào một element và gọi đến hàm updateForm(element) \n      ,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      id: 'confirmPassword',\n      formData: this.state.formData.confirmPassword //Hàm change nhận vào một element và gọi đến hàm updateForm(element) \n      ,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 49\n      }\n    })), this.state.formError ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 45\n      }\n    }, \"PLease check yoour data!\") : '', /*#__PURE__*/React.createElement(\"button\", {\n      className: \"register__button\",\n      onClick: event => {\n        this.submitForm(event);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 45\n      }\n    }, \"\\u0110\\u0103ng k\\xFD\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register_wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 49\n      }\n    }, \"\\u0110\\xE3 c\\xF3 t\\xE0i kho\\u1EA3n?\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Signin_link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(MyButton, {\n      type: \"default\",\n      title: \"\\u0110\\u0103ng nh\\u1EADp\",\n      linkTo: \"/register_login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 53\n      }\n    })))))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps)(withRouter(Register));","map":{"version":3,"sources":["D:/Kltn/test/social-media/client/src/components/Register_login/register.js"],"names":["React","Component","connect","FormField","populateOptionFields","updateFields","Dialog","update","generateData","ifFormValid","withRouter","registerUser","getNationality","MyButton","GoogleLoginButton","FacebookLoginButton","Register","state","formError","ErrorMessage","formSuccess","RegisterWith","formData","name","element","value","config","label","type","placeholder","validation","required","valid","touched","validationMessage","showlabel","email","userName","dob","valueAsNumber","password","confirmPassword","confirm","nationality","options","newFormData","setState","updateForm","console","log","newFormdata","submitForm","event","preventDefault","dataToSubmit","formIsValid","props","dispatch","then","response","payload","success","setTimeout","history","push","message","catch","e","user","RegisterInfo","avt","picture","componentDidMount","render","require","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FormField from '../ultils/Form/FormField';\r\nimport {populateOptionFields,updateFields} from '../ultils/Form/FormActions';\r\nimport './register.scss';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { update, generateData, ifFormValid } from '../ultils/Form/FormActions';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { registerUser, getNationality} from '../../actions/user_action';\r\n// import {  } from '../../actions/product_actions';\r\nimport MyButton from '../ultils/button'\r\nimport GoogleLoginButton from '../GoggleLoginButton/GoogleLoginButton';\r\nimport FacebookLoginButton from '../FacebookLoginButton/FacebookLoginButton';\r\n\r\nclass Register extends Component {\r\n    state = {\r\n        formError: false,\r\n        ErrorMessage: \"\",\r\n        formSuccess: false,\r\n        RegisterWith: false, \r\n        formData: {\r\n            name: {\r\n                element: 'input',\r\n                value: '',\r\n                config: {\r\n                    label: 'Tên',\r\n                    name: 'name_input',\r\n                    type: 'text',\r\n                    placeholder: 'Họ tên'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: true,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false,\r\n            },\r\n            email: {\r\n                element: 'input',\r\n                value: '',\r\n                config: {\r\n                    label: 'Email',\r\n                    name: 'email_input',\r\n                    type: 'email',\r\n                    placeholder: 'Email'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    email: true\r\n                },\r\n                valid: true,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false,\r\n            },\r\n            userName: {\r\n                element: 'input',\r\n                value: '',\r\n                config: {\r\n                    label: 'Tên người dùng',\r\n                    name: 'userName_input',\r\n                    type: 'text',\r\n                    placeholder: 'Tên người dùng'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false,\r\n            },\r\n            dob: {\r\n                element: 'input',\r\n                value: '',\r\n                valueAsNumber: \"\",\r\n                config: {\r\n                    label: 'Ngày sinh',\r\n                    name: 'dob',\r\n                    type: 'date',\r\n                    placeholder: 'ngày sinh'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false,\r\n            },\r\n            password: {\r\n                element: 'input',\r\n                config: {\r\n                    label: 'Mật khẩu',\r\n                    name: 'password_input',\r\n                    type: 'password',\r\n                    placeholder: 'Mật khẩu'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false,\r\n            },\r\n            confirmPassword: {\r\n                element: 'input',\r\n                value: '',\r\n                config: {\r\n                    label: 'Nhập lại mật khẩu',\r\n                    name: 'confirm_password_input',\r\n                    type: 'password',\r\n                    placeholder: 'Nhập lại mật khẩu'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    confirm: 'password'\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false,\r\n            },\r\n            nationality: {\r\n                element: 'select',\r\n                value: '',\r\n                config: {\r\n                    label: 'nationality',\r\n                    name: 'nationality',\r\n                    options: []\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false\r\n            },\r\n        },\r\n    }\r\n\r\n    updateFields = (newFormData) => {\r\n        this.setState({\r\n            formData:newFormData\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        const formData = this.state.formData;\r\n\r\n        this.props.dispatch(getNationality()).then(response =>{\r\n            console.log(response)\r\n            const newFormData = populateOptionFields(formData, response.payload,'nationality')\r\n            this.updateFields(newFormData)\r\n        })\r\n    }\r\n\r\n    updateForm = (element) => {\r\n        console.log(this.state)\r\n        const newFormdata = update(element, this.state.formData, 'register');\r\n        this.setState({\r\n            formError: false,\r\n            formData: newFormdata\r\n        });\r\n    }\r\n\r\n    submitForm = (event) => {\r\n        event.preventDefault();\r\n\r\n        let dataToSubmit = generateData(this.state.formData, 'register');\r\n        let formIsValid = ifFormValid(this.state.formData, 'register');\r\n\r\n        if (formIsValid) {\r\n            console.log(dataToSubmit);\r\n            console.log(\"OK\");\r\n            this.props.dispatch(registerUser(dataToSubmit))\r\n                .then(response => {\r\n                    if (response.payload.success) {\r\n                        this.setState({\r\n                            formError: false,\r\n                            formSuccess: true\r\n                        });\r\n                        setTimeout(() => {\r\n                            this.props.history.push('/register_login')\r\n                        }, 3000);\r\n                    } else {\r\n                        this.setState({ \r\n                            formError: true, \r\n                            ErrorMessage: response.payload.message\r\n                        });\r\n                    }\r\n                }).catch(e => {\r\n                    this.setState({ formError: true })\r\n                })\r\n        }\r\n        else {\r\n            this.setState({\r\n                formError: true\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    Register = (event) => {\r\n        event.preventDefault();\r\n\r\n        let dataToSubmit = generateData(this.state.formData, 'register');\r\n\r\n        let formIsValid = ifFormValid(this.state.formData, 'register');\r\n\r\n        dataToSubmit.name = this.props.user.RegisterInfo.name;\r\n        dataToSubmit.email = this.props.user.RegisterInfo.email;\r\n        dataToSubmit.avt = this.props.user.RegisterInfo.picture;\r\n        if (formIsValid) {\r\n            console.log(dataToSubmit);\r\n            console.log(\"OK\");\r\n            this.props.dispatch(registerUser(dataToSubmit))\r\n                .then(response => {\r\n                    if (response.payload.success) {\r\n                        this.setState({\r\n                            formError: false,\r\n                            formSuccess: true\r\n                        });\r\n                        setTimeout(() => {\r\n                            this.props.history.push('/register_login')\r\n                        }, 3000);\r\n                    } else {\r\n                        this.setState({\r\n                            formError: true,\r\n                            ErrorMessage: response.payload.message\r\n                        });\r\n                    }\r\n                }).catch(e => {\r\n                    this.setState({\r\n                        formError: true\r\n                    })\r\n                })\r\n        }\r\n        else {\r\n            this.setState({\r\n                formError: true\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"register\">\r\n                <div className=\"register_page_container\">\r\n                    <div className=\"row no-gutters\">\r\n                        <div className=\"col-xl-6 col-lg-6 col-md-6 no-gutters\">\r\n                            <div className=\"left\">\r\n                                <div className=\"register_slogan\">\r\n                                    <img className=\"logo\" src='./images/landingPage/logoIcon2x.png' />\r\n                                    <h1>Begin</h1>\r\n                                    <h1>your</h1>\r\n                                    <h1>Journey</h1>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-xl-6 col-lg-6 col-md-6  no-gutters\">\r\n                            <div className=\"right\">\r\n                                <div className=\"register\">\r\n                                    <div className='register__container'>\r\n                                    {\r\n                                        this.props.user.RegisterInfo ?\r\n                                        <div>\r\n                                            <form className='register__form' onSubmit={(event) => this.submitForm(event)}>\r\n                                                <div className='avt_wrapper'>\r\n                                                    <img className=\"avt\" src={this.props.user.RegisterInfo.picture} />\r\n                                                </div>\r\n                                                <div className=\"register__row2\">\r\n                                                    <input disabled className=\"display_input\" type=\"text\" value={this.props.user.RegisterInfo.name}/>\r\n                                                    <input disabled className=\"display_input\" type=\"text\" value={this.props.user.RegisterInfo.email}/>                                                   \r\n                                                    <FormField\r\n                                                        id={'userName'}\r\n                                                        formData={this.state.formData.userName}\r\n                                                        change={(element) => this.updateForm(element)}\r\n                                                    />\r\n                                                    <FormField\r\n                                                        id={'nationality'}\r\n                                                        formData={this.state.formData.nationality}\r\n                                                        change={(element) => this.updateForm(element)}\r\n                                                    />\r\n                                                    <FormField\r\n                                                        id={'dob'}\r\n                                                        formData={this.state.formData.dob}\r\n                                                        change={(element) => this.updateForm(element)}\r\n                                                    />\r\n                                                    <FormField\r\n                                                        id={'password'}\r\n                                                        formData={this.state.formData.password}\r\n                                                        change={(element) => this.updateForm(element)}\r\n                                                    />\r\n                                                    <FormField\r\n                                                        id={'confirmPassword'}\r\n                                                        formData={this.state.formData.confirmPassword}\r\n                                                        change={(element) => this.updateForm(element)}\r\n                                                    />\r\n                                                </div>\r\n                                                {this.state.formError ?\r\n                                                    <div className=\"errorLabel\">\r\n                                                        {this.state.ErrorMessage}\r\n                                                    </div>\r\n                                                        : ''}\r\n                                                    <button className='register__button' onClick={(event) => { this.Register(event) }}>Đăng ký</button>\r\n                                                    <div className=\"register_wrapper\">\r\n                                                        <div className=\"label\">\r\n                                                            Đã có tài khoản?\r\n                                                        </div>\r\n                                                        <div className=\"Signin_link\">\r\n                                                            <MyButton\r\n                                                                type=\"default\"\r\n                                                                title=\"Đăng nhập\"\r\n                                                                linkTo=\"/register_login\"\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                            </form>\r\n                                        </div>\r\n                                        :\r\n                                        <form className='register__form' onSubmit={(event) => this.submitForm(event)}>\r\n                                            <div className='register__logo'>\r\n                                                <img className=\"logo\" src={require('../../asset/login-page/logo2x.png')} />\r\n                                                <img className=\"stunning_text\" src={require('../../asset/login-page/stun2x.png')} />\r\n                                            </div>\r\n                                            <GoogleLoginButton/>\r\n                                            <FacebookLoginButton/>\r\n                                            <div className=\"or_label\">\r\n                                                HOẶC\r\n                                            </div>\r\n                                            <div className=\"register__row2\">\r\n                                                <FormField\r\n                                                    id={'name'}\r\n                                                    formData={this.state.formData.name}\r\n                                                    change={(element) => this.updateForm(element)}\r\n                                                />\r\n                                                <FormField\r\n                                                    id={'email'}\r\n                                                    formData={this.state.formData.email}\r\n                                                    change={(element) => this.updateForm(element)}\r\n                                                />\r\n                                                <FormField\r\n                                                    id={'nationality'}\r\n                                                    formData={this.state.formData.nationality}\r\n                                                    change={(element) => this.updateForm(element)}\r\n                                                />\r\n                                                <FormField\r\n                                                    id={'dob'}\r\n                                                    formData={this.state.formData.dob}\r\n                                                    change={(element) => this.updateForm(element)}\r\n                                                />\r\n                                                <FormField\r\n                                                    id={'userName'}\r\n                                                    formData={this.state.formData.userName}\r\n                                                    change={(element) => this.updateForm(element)}\r\n                                                />\r\n                                                <FormField\r\n                                                    id={'password'}\r\n                                                    formData={this.state.formData.password}\r\n                                                    //Hàm change nhận vào một element và gọi đến hàm updateForm(element) \r\n                                                    change={(element) => this.updateForm(element)}\r\n                                                />\r\n                                                <FormField\r\n                                                    id={'confirmPassword'}\r\n                                                    formData={this.state.formData.confirmPassword}\r\n                                                    //Hàm change nhận vào một element và gọi đến hàm updateForm(element) \r\n                                                    change={(element) => this.updateForm(element)}\r\n                                                />\r\n                                            </div>\r\n                                            {this.state.formError ?\r\n                                            <div className=\"errorLabel\">\r\n                                                PLease check yoour data!\r\n                                            </div>\r\n                                            : ''}\r\n                                            <button className='register__button' onClick={(event) => { this.submitForm(event) }}>Đăng ký</button>\r\n                                            <div className=\"register_wrapper\">\r\n                                                <div className=\"label\">\r\n                                                    Đã có tài khoản?\r\n                                                </div>\r\n                                                <div className=\"Signin_link\">\r\n                                                    <MyButton\r\n                                                        type=\"default\"\r\n                                                        title=\"Đăng nhập\"\r\n                                                        linkTo=\"/register_login\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    }    \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(withRouter(Register));"]},"metadata":{},"sourceType":"module"}