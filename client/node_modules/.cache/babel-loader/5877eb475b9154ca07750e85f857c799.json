{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kltn\\\\test\\\\social-media\\\\client\\\\src\\\\components\\\\ProfileSettings\\\\index.js\";\nimport moment from 'moment';\nimport React, { Component, useEffect, useState } from 'react';\nimport Layout from '../../hoc/layout';\nimport { connect } from 'react-redux';\nimport { findPost } from '../../../src/actions/user_action';\nimport Switch from 'react-ios-switch';\nimport FormField from '../ultils/Form/FormField';\nimport './profilesetting.scss';\nimport { populateOptionFields, update, ifFormValid, generateData, resetFields } from '../ultils/Form/FormActions';\nimport { GridDots, User, Lock } from 'tabler-icons-react';\nimport { updateprofileimgfile, updateprofileimg, changeProfile, changePassword, auth, getBlockedUsers, unBlockUser, blockUser, changePrivate, getNationality } from '../../actions/user_action';\nimport { Link, withRouter, useParams } from 'react-router-dom';\nimport { Button, CircularProgress, Snackbar } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Header from '../Header_Footer/Header';\n\nclass ProfileSettings extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      privateMode: false,\n      inputValue: \"\",\n      settingState: 'profile',\n      edited: false,\n      loading: false,\n      severity: '',\n      setSnack: false,\n      formError: false,\n      formSuccess: false,\n      formMessage: \"\",\n      formData: {\n        email: {\n          element: 'input',\n          value: '',\n          config: {\n            placeholder: 'Email của bạn',\n            label: 'Email',\n            name: 'email',\n            options: []\n          },\n          validation: {\n            required: true,\n            email: true\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        },\n        name: {\n          element: 'input',\n          value: '',\n          config: {\n            placeholder: 'Tên của bạn',\n            label: 'Tên',\n            name: 'name',\n            options: []\n          },\n          validation: {\n            required: false\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        },\n        bio: {\n          element: 'textarea',\n          value: '',\n          config: {\n            placeholder: 'Mô tả về bản thân bạn',\n            label: 'Tiểu sử',\n            name: 'bio',\n            options: []\n          },\n          validation: {\n            required: false\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        },\n        userName: {\n          element: 'input',\n          value: '',\n          config: {\n            placeholder: 'Tên tài khoản',\n            label: 'Tên tài khoản',\n            name: 'userName',\n            options: []\n          },\n          validation: {\n            required: false\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        },\n        dob: {\n          element: 'input',\n          value: '',\n          valueAsNumber: \"\",\n          config: {\n            label: 'Ngày sinh',\n            name: 'dob',\n            type: 'date',\n            placeholder: 'ngày sinh'\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        },\n        nationality: {\n          element: 'select',\n          value: '',\n          config: {\n            label: 'nationality',\n            name: 'nationality',\n            options: []\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        }\n      },\n      passwordData: {\n        currentPassword: {\n          element: 'password',\n          config: {\n            label: 'Mật khẩu',\n            name: 'password_input',\n            type: 'password',\n            placeholder: 'Mật khẩu hiện tại'\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        },\n        password: {\n          element: 'input',\n          config: {\n            label: 'Mật khẩu mới',\n            name: 'password_input',\n            type: 'password',\n            placeholder: 'Mật khẩu mới'\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        },\n        confirmPassword: {\n          element: 'input',\n          value: '',\n          config: {\n            label: 'Nhập lại mật khẩu',\n            name: 'confirm_password_input',\n            type: 'password',\n            placeholder: 'Nhập lại mật khẩu'\n          },\n          validation: {\n            required: true,\n            confirm: 'password'\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        }\n      }\n    };\n\n    this.updateFields = newFormData => {\n      this.setState({\n        formData: newFormData\n      });\n    };\n\n    this.submitForm = async event => {\n      this.setState({\n        loading: true\n      });\n      event.preventDefault();\n      let dataToSubmit = generateData(this.state.formData, 'update_pro');\n      console.log(dataToSubmit);\n      await this.props.dispatch(changeProfile(this.props.user.userData._id, dataToSubmit)).then(response => {\n        console.log(response);\n\n        if (response.payload.success === false) {\n          this.setState({\n            loading: false,\n            severity: 'error',\n            setSnack: true,\n            formMessage: response.payload.message\n          });\n        } else {\n          this.setState({\n            loading: false,\n            severity: 'success',\n            edited: false,\n            setSnack: true,\n            formMessage: response.payload.message\n          });\n          this.props.dispatch(auth());\n        } //  this.props.dispatch(auth());\n\n      });\n    };\n\n    this.onFileChange = async event => {\n      this.setState({\n        loading: true\n      });\n      await this.props.dispatch(updateprofileimgfile(event.target.files[0]));\n      await this.props.dispatch(updateprofileimg(this.props.user.img ? this.props.user.img.url : 0)).then(response => {\n        console.log(response);\n\n        if (response.payload.success == false) {\n          this.setState({\n            loading: false,\n            severity: 'error',\n            setSnack: true,\n            formMessage: response.payload.message\n          });\n        } else {\n          this.setState({\n            loading: false,\n            severity: 'success',\n            edited: false,\n            setSnack: true,\n            formMessage: response.payload.message\n          });\n          this.props.dispatch(auth());\n        }\n      });\n    };\n\n    this.handlePrivateChange = () => {\n      this.setState({\n        loading: true\n      });\n      this.setState({\n        privateMode: !this.state.privateMode\n      });\n      this.props.dispatch(changePrivate(this.state.privateMode)).then(response => {\n        console.log(response);\n\n        if (response.payload.success == false) {\n          this.setState({\n            loading: false,\n            severity: 'error',\n            setSnack: true,\n            formMessage: response.payload.message\n          });\n        } else {\n          this.setState({\n            loading: false,\n            severity: 'success',\n            edited: false,\n            setSnack: true,\n            formMessage: response.payload.message\n          });\n          this.props.dispatch(auth());\n        }\n      });\n    };\n\n    this.updateForm = element => {\n      const newFormdata = update(element, this.state.formData, 'update_pro');\n      this.setState({\n        formError: false,\n        formData: newFormdata\n      });\n\n      if (JSON.stringify(this.state.formData.bio.value.trim()) != JSON.stringify(this.props.user.userData.bio.trim()) || JSON.stringify(this.state.formData.userName.value.trim()) != JSON.stringify(this.props.user.userData.userName.trim()) || JSON.stringify(this.state.formData.name.value.trim()) != JSON.stringify(this.props.user.userData.name.trim()) || JSON.stringify(this.state.formData.email.value.trim()) != JSON.stringify(this.props.user.userData.email.trim()) || JSON.stringify(this.state.formData.dob.value.trim()) != JSON.stringify(moment(this.props.user.userData.dob).format(\"YYYY-MM-DD\")) || JSON.stringify(this.state.formData.nationality.value.trim()) != JSON.stringify(this.props.user.userData.nationality.trim())) {\n        this.setState({\n          edited: true\n        });\n      } else {\n        this.setState({\n          edited: false\n        });\n      }\n    };\n\n    this.handleSetting = type => {\n      this.setState({\n        settingState: type,\n        edited: false,\n        loading: false,\n        setSnack: false,\n        formError: false,\n        formMessage: \"\"\n      });\n    };\n\n    this.changePassword = event => {\n      this.setState({\n        loading: true\n      });\n      event.preventDefault();\n      let dataToSubmit = generateData(this.state.passwordData, 'change_password');\n      let formIsValid = ifFormValid(this.state.passwordData, 'change_password');\n\n      if (formIsValid) {\n        console.log(dataToSubmit);\n        this.props.dispatch(changePassword(dataToSubmit)).then(response => {\n          console.log(response);\n\n          if (response.payload.success) {\n            this.setState({\n              setSnack: true,\n              formMessage: response.payload.message\n            }, () => {\n              resetFields(this.state.passwordData);\n            });\n          } else {\n            this.setState({\n              formError: true,\n              formMessage: response.payload.message\n            });\n          }\n        });\n      } else {\n        this.setState({\n          formError: true,\n          formMessage: \"Vui lòng kiểm tra lại thông tin!\"\n        });\n      }\n    };\n\n    this.updatePasswordForm = element => {\n      const newFormdata = update(element, this.state.passwordData, 'update_password');\n      this.setState({\n        formError: false,\n        passwordData: newFormdata\n      });\n      this.setState({\n        edited: true\n      });\n    };\n\n    this.unblock = id => {\n      this.props.dispatch(unBlockUser(id));\n    };\n\n    this.renderCotent = type => {\n      switch (type) {\n        case 'profile':\n          return /*#__PURE__*/React.createElement(\"form\", {\n            className: \"col-xl-9 col-lg-9 col-md-9 col-sm-9 col-10 setting_detail\",\n            onSubmit: event => this.submitForm(event),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 24\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row setting_type\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-3 col-md-3 col-sm-3 col-4 label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 33\n            }\n          }, this.state.loading ? /*#__PURE__*/React.createElement(\"div\", {\n            class: \"overlay\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 45\n            }\n          }, /*#__PURE__*/React.createElement(CircularProgress, {\n            style: {\n              color: '#5477D5'\n            },\n            thickness: 7,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 66\n            }\n          })) : '', /*#__PURE__*/React.createElement(\"img\", {\n            src: this.props.user.userData.avt,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 37\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-9 col-md-9 col-sm-9 col-8 field\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"h2\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 37\n            }\n          }, this.props.user.userData.userName), /*#__PURE__*/React.createElement(\"label\", {\n            className: \"custom-file-upload\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            type: \"file\",\n            onChange: this.onFileChange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 41\n            }\n          }), /*#__PURE__*/React.createElement(\"h6\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 41\n            }\n          }, \"S\\u1EEDa \\u1EA3nh \\u0111\\u1EA1i di\\u1EC7n\")))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row setting_type\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"ol-xl-3 col-md-3 label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"h3\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 37\n            }\n          }, \"Ri\\xEAng t\\u01B0\")), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-9 col-md-9  field\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(Switch, {\n            checked: this.state.privateMode,\n            onColor: \"#7166F9\",\n            onChange: () => this.handlePrivateChange(),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 37\n            }\n          }))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row setting_type\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"ol-xl-3 col-md-3 label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"h3\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 37\n            }\n          }, \"H\\u1ECD T\\xEAn\")), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-9 col-md-9 field\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(FormField //Có thể để trống phần description nên k cần xử lý event onChange,..\n          , {\n            id: 'name',\n            formData: this.state.formData.name,\n            change: element => this.updateForm(element),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 37\n            }\n          }))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row setting_type\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"ol-xl-3 col-md-3 label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"h3\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 37\n            }\n          }, \"Ng\\xE0y sinh\")), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-9 col-md-9 field\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(FormField, {\n            id: 'dob',\n            formData: this.state.formData.dob,\n            change: element => this.updateForm(element),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 37\n            }\n          }))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row setting_type\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 30\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"ol-xl-3 col-md-3 label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"h3\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 37\n            }\n          }, \"Qu\\u1ED1c t\\u1ECBch\")), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-9 col-md-9 field\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(FormField, {\n            id: 'nationality',\n            formData: this.state.formData.nationality,\n            change: element => this.updateForm(element),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 37\n            }\n          }))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row setting_type\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"ol-xl-3 col-md-3  label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"h3\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 37\n            }\n          }, \"User name\")), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-9 col-md-9  field\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(FormField //Có thể để trống phần description nên k cần xử lý event onChange,..\n          , {\n            id: 'userName',\n            formData: this.state.formData.userName,\n            change: element => this.updateForm(element),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 37\n            }\n          }))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row setting_type\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"ol-xl-3 col-md-3  label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"h3\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 37\n            }\n          }, \"Email\")), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-9 col-md-9 field\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(FormField //Có thể để trống phần description nên k cần xử lý event onChange,..\n          , {\n            id: 'email',\n            formData: this.state.formData.email,\n            change: element => this.updateForm(element),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 37\n            }\n          }))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row setting_type\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-3 col-md-3 label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"h3\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 37\n            }\n          }, \"M\\xF4 t\\u1EA3\")), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-9 col-md-9 field\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(FormField //Có thể để trống phần description nên k cần xử lý event onChange,..\n          , {\n            id: 'bio',\n            formData: this.state.formData.bio,\n            change: element => this.updateForm(element),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 37\n            }\n          }))), this.state.formError ? /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row setting_type\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"ol-xl-3 col-md-3 label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 37\n            }\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-9 col-md-9 field\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 37\n            }\n          }, this.state.formMessage)) : \"\", /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row setting_type\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"ol-xl-3 col-md-3 label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 33\n            }\n          }), this.state.edited ? /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-9 col-md-9 field\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            className: \"send_btn\",\n            onClick: event => {\n              this.submitForm(event);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 37\n            }\n          }, \"G\\u1EEDi\")) : /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-9 col-md-9  field\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            className: \"send_btn disable\",\n            disabled: \"true\",\n            onClick: event => {\n              this.submitForm(event);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 37\n            }\n          }, \"G\\u1EEDi\"))));\n\n        case 'password':\n          return /*#__PURE__*/React.createElement(\"form\", {\n            className: \"col-xl-9 col-lg-9 col-md-9 col-sm-9 col-10 setting_detail\",\n            onSubmit: event => this.changePassword(event),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 24\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row setting_type\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-3 col-md-3 label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"h3\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 29\n            }\n          }, \"M\\u1EADt kh\\u1EA9u\")), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-9 col-md-9 field\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(FormField, {\n            id: 'currentPassword',\n            formData: this.state.passwordData.currentPassword //Hàm change nhận vào một element và gọi đến hàm updateForm(element) \n            ,\n            change: element => this.updatePasswordForm(element),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 29\n            }\n          }))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row setting_type\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"ol-xl-3 col-md-3 label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"h3\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 29\n            }\n          }, \"M\\u1EADt kh\\u1EA9u m\\u1EDBi\")), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-9 col-md-9 field\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(FormField, {\n            id: 'password',\n            formData: this.state.passwordData.password //Hàm change nhận vào một element và gọi đến hàm updateForm(element) \n            ,\n            change: element => this.updatePasswordForm(element),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 29\n            }\n          }))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row setting_type\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"ol-xl-3 col-md-3 label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"h3\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 29\n            }\n          }, \"Nh\\u1EADp l\\u1EA1i\")), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-9 col-md-9 field\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(FormField, {\n            id: 'confirmPassword',\n            formData: this.state.passwordData.confirmPassword //Hàm change nhận vào một element và gọi đến hàm updateForm(element) \n            ,\n            change: element => this.updatePasswordForm(element),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 29\n            }\n          }))), this.state.formError ? /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row setting_type\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"ol-xl-3 col-md-3 label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 29\n            }\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-9 col-md-9 field\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 29\n            }\n          }, this.state.formMessage)) : \"\", /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row setting_type\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"ol-xl-3 col-md-3 label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xl-9 col-md-9 field\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            className: \"send_btn\",\n            onClick: event => {\n              this.changePassword(event);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 29\n            }\n          }, \"G\\u1EEDi\"))));\n\n        case 'privacy':\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \" col-xl-9 col-lg-9 col-md-9 col-sm-9 col-10 setting_detail\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 24\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"wrapper\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"h6\", {\n            className: \"title\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 25\n            }\n          }, \"Ng\\u01B0\\u1EDDi d\\xF9ng b\\u1ECB ch\\u1EB7n\"), /*#__PURE__*/React.createElement(\"ul\", {\n            className: \"blocked-user-list\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 25\n            }\n          }, this.props.user.blockedUsers.map(item => {\n            return /*#__PURE__*/React.createElement(\"li\", {\n              className: \"blocked-user-item\",\n              key: item._id,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 603,\n                columnNumber: 41\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"blocked-user-info\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 37\n              }\n            }, /*#__PURE__*/React.createElement(\"img\", {\n              src: item.avt,\n              className: \"blocked-user-avt\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 41\n              }\n            }), /*#__PURE__*/React.createElement(\"h6\", {\n              className: \"blocked-user-name\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 606,\n                columnNumber: 41\n              }\n            }, item.userName)), /*#__PURE__*/React.createElement(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 608,\n                columnNumber: 37\n              }\n            }, this.props.user.userData.blockedUsers.includes(item._id) ? /*#__PURE__*/React.createElement(\"button\", {\n              onClick: () => {\n                this.unblock(item._id);\n              },\n              className: \"bnt btn-block\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 611,\n                columnNumber: 41\n              }\n            }, \"B\\u1ECF ch\\u1EB7n\") : /*#__PURE__*/React.createElement(\"button\", {\n              onClick: () => {\n                this.props.dispatch(blockUser(item._id));\n              },\n              className: \"bnt btn-unblock\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 613,\n                columnNumber: 41\n              }\n            }, \"Ch\\u1EB7n\")));\n          }))));\n      }\n    };\n  }\n\n  reset() {\n    this.setState({\n      edited: false,\n      loading: false,\n      setSnack: false,\n      formError: false,\n      formMessage: \"\"\n    });\n  } // submitForm = (event) => {\n  //     this.setState({loading:true})\n  //     event.preventDefault();\n  //     this.state.formData.privateMode = this.state.privateMode;\n  //     let dataToSubmit = generateData(this.state.formData, 'update_pro')\n  //     console.log(dataToSubmit)\n  //     this.props.dispatch(changeProfile(this.props.user.userData._id, dataToSubmit))\n  //         .then(response => {\n  //             console.log(response);\n  //             if(response.payload.success == false)\n  //             {\n  //                 this.setState({loading:false,severity:'error', setSnack: true, formMessage: response.payload.message})\n  //             }\n  //             else\n  //             {\n  //                 this.setState({loading:false,severity:'success',edited:false, setSnack: true, formMessage: response.payload.message})\n  //                 this.props.dispatch(auth());\n  //             }\n  //           //  this.props.dispatch(auth());\n  //         })\n  // }\n\n\n  getUserForm() {\n    this.state.privateMode = this.props.user.userData.privateMode;\n    this.state.formData.bio.value = this.props.user.userData.bio;\n    this.state.formData.userName.value = this.props.user.userData.userName;\n    this.state.formData.name.value = this.props.user.userData.name;\n    this.state.formData.email.value = this.props.user.userData.email;\n    this.state.formData.email.value = this.props.user.userData.email;\n    this.state.formData.email.value = this.props.user.userData.email;\n    this.state.formData.nationality.value = this.props.user.userData.nationality;\n    this.state.formData.dob.value = moment(this.props.user.userData.dob).format(\"YYYY-MM-DD\");\n    const formData = this.state.formData;\n    this.setState({\n      edited: false\n    });\n    this.updateFields(formData);\n  }\n\n  componentDidMount() {\n    this.getUserForm();\n    console.log(this.props.user.userData); // this.setState({privateMode:this.props.user.userData.privateMode?this.props.user.userData.privateMode:false})\n\n    this.props.dispatch(getBlockedUsers());\n    const formData = this.state.formData;\n    this.props.dispatch(getNationality()).then(response => {\n      console.log(response);\n      const newFormData = populateOptionFields(formData, response.payload, 'nationality');\n      this.updateFields(newFormData);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"setting_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"setting_wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-2 setting_options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 29\n      }\n    }, this.state.settingState == 'profile' ? /*#__PURE__*/React.createElement(Button, {\n      className: \"options\",\n      onClick: () => this.handleSetting('profile'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(User, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 115\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 163\n      }\n    }, \"Th\\xF4ng tin\")) : /*#__PURE__*/React.createElement(Button, {\n      className: \"options disable\",\n      onClick: () => this.handleSetting('profile'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(User, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 123\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 171\n      }\n    }, \"Th\\xF4ng tin\")), this.state.settingState == 'password' ? /*#__PURE__*/React.createElement(Button, {\n      className: \"options\",\n      onClick: () => this.handleSetting('password'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Lock, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 117\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 165\n      }\n    }, \"\\u0110\\u1ED5i m\\u1EADt kh\\u1EA9u\")) : /*#__PURE__*/React.createElement(Button, {\n      className: \"options disable\",\n      onClick: () => this.handleSetting('password'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Lock, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 125\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 173\n      }\n    }, \"\\u0110\\u1ED5i m\\u1EADt kh\\u1EA9u\")), this.state.settingState == 'Bảo mật' ? /*#__PURE__*/React.createElement(Button, {\n      className: \"options\",\n      onClick: () => this.handleSetting('privacy'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Lock, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 116\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 164\n      }\n    }, \"B\\u1EA3o m\\u1EADt\")) : /*#__PURE__*/React.createElement(Button, {\n      className: \"options disable\",\n      onClick: () => this.handleSetting('privacy'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Lock, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 124\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 172\n      }\n    }, \"B\\u1EA3o m\\u1EADt\"))), this.renderCotent(this.state.settingState))), /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      open: this.state.setSnack,\n      onClose: () => this.setState({\n        setSnack: false\n      }),\n      autoHideDuration: 1000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MuiAlert, {\n      elevation: 6,\n      variant: \"filled\",\n      severity: this.state.severity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 25\n      }\n    }, this.state.formMessage))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps)(withRouter(ProfileSettings));","map":{"version":3,"sources":["D:/Kltn/test/social-media/client/src/components/ProfileSettings/index.js"],"names":["moment","React","Component","useEffect","useState","Layout","connect","findPost","Switch","FormField","populateOptionFields","update","ifFormValid","generateData","resetFields","GridDots","User","Lock","updateprofileimgfile","updateprofileimg","changeProfile","changePassword","auth","getBlockedUsers","unBlockUser","blockUser","changePrivate","getNationality","Link","withRouter","useParams","Button","CircularProgress","Snackbar","MuiAlert","Header","ProfileSettings","state","privateMode","inputValue","settingState","edited","loading","severity","setSnack","formError","formSuccess","formMessage","formData","email","element","value","config","placeholder","label","name","options","validation","required","valid","touched","validationMessage","showlabel","bio","userName","dob","valueAsNumber","type","nationality","passwordData","currentPassword","password","confirmPassword","confirm","updateFields","newFormData","setState","submitForm","event","preventDefault","dataToSubmit","console","log","props","dispatch","user","userData","_id","then","response","payload","success","message","onFileChange","target","files","img","url","handlePrivateChange","updateForm","newFormdata","JSON","stringify","trim","format","handleSetting","formIsValid","updatePasswordForm","unblock","id","renderCotent","color","avt","blockedUsers","map","item","includes","reset","getUserForm","componentDidMount","render","vertical","horizontal","mapStateToProps"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAwB,kCAAxB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAO,uBAAP;AACA,SAASC,oBAAT,EAA+BC,MAA/B,EAAuCC,WAAvC,EAAoDC,YAApD,EAAkEC,WAAlE,QAAqF,4BAArF;AACA,SAASC,QAAT,EAAmBC,IAAnB,EAAyBC,IAAzB,QAAqC,oBAArC;AACA,SAASC,oBAAT,EAA+BC,gBAA/B,EAAiDC,aAAjD,EAAgEC,cAAhE,EAA+EC,IAA/E,EAAqFC,eAArF,EAAsGC,WAAtG,EAAmHC,SAAnH,EAA6HC,aAA7H,EAA4IC,cAA5I,QAAkK,2BAAlK;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,SAA3B,QAA4C,kBAA5C;AACA,SAASC,MAAT,EAAiBC,gBAAjB,EAAmCC,QAAnC,QAAmD,mBAAnD;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,MAAMC,eAAN,SAA8BlC,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACpCmC,KADoC,GAC5B;AACJC,MAAAA,WAAW,EAAE,KADT;AAEJC,MAAAA,UAAU,EAAE,EAFR;AAGJC,MAAAA,YAAY,EAAE,SAHV;AAIJC,MAAAA,MAAM,EAAE,KAJJ;AAKJC,MAAAA,OAAO,EAAE,KALL;AAMJC,MAAAA,QAAQ,EAAE,EANN;AAOJC,MAAAA,QAAQ,EAAE,KAPN;AASJC,MAAAA,SAAS,EAAE,KATP;AAUJC,MAAAA,WAAW,EAAE,KAVT;AAWJC,MAAAA,WAAW,EAAE,EAXT;AAYJC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,KAAK,EAAE;AACHC,UAAAA,OAAO,EAAE,OADN;AAEHC,UAAAA,KAAK,EAAE,EAFJ;AAGHC,UAAAA,MAAM,EAAE;AACJC,YAAAA,WAAW,EAAE,eADT;AAEJC,YAAAA,KAAK,EAAE,OAFH;AAGJC,YAAAA,IAAI,EAAE,OAHF;AAIJC,YAAAA,OAAO,EAAE;AAJL,WAHL;AASHC,UAAAA,UAAU,EAAE;AACRC,YAAAA,QAAQ,EAAE,IADF;AAERT,YAAAA,KAAK,EAAE;AAFC,WATT;AAaHU,UAAAA,KAAK,EAAE,KAbJ;AAcHC,UAAAA,OAAO,EAAE,KAdN;AAeHC,UAAAA,iBAAiB,EAAE,EAfhB;AAgBHC,UAAAA,SAAS,EAAE;AAhBR,SADD;AAmBNP,QAAAA,IAAI,EAAE;AACFL,UAAAA,OAAO,EAAE,OADP;AAEFC,UAAAA,KAAK,EAAE,EAFL;AAGFC,UAAAA,MAAM,EAAE;AACJC,YAAAA,WAAW,EAAE,aADT;AAEJC,YAAAA,KAAK,EAAE,KAFH;AAGJC,YAAAA,IAAI,EAAE,MAHF;AAIJC,YAAAA,OAAO,EAAE;AAJL,WAHN;AASFC,UAAAA,UAAU,EAAE;AACRC,YAAAA,QAAQ,EAAE;AADF,WATV;AAYFC,UAAAA,KAAK,EAAE,KAZL;AAaFC,UAAAA,OAAO,EAAE,KAbP;AAcFC,UAAAA,iBAAiB,EAAE,EAdjB;AAeFC,UAAAA,SAAS,EAAE;AAfT,SAnBA;AAoCNC,QAAAA,GAAG,EAAE;AACDb,UAAAA,OAAO,EAAE,UADR;AAEDC,UAAAA,KAAK,EAAE,EAFN;AAGDC,UAAAA,MAAM,EAAE;AACJC,YAAAA,WAAW,EAAE,uBADT;AAEJC,YAAAA,KAAK,EAAE,SAFH;AAGJC,YAAAA,IAAI,EAAE,KAHF;AAIJC,YAAAA,OAAO,EAAE;AAJL,WAHP;AASDC,UAAAA,UAAU,EAAE;AACRC,YAAAA,QAAQ,EAAE;AADF,WATX;AAYDC,UAAAA,KAAK,EAAE,KAZN;AAaDC,UAAAA,OAAO,EAAE,KAbR;AAcDC,UAAAA,iBAAiB,EAAE,EAdlB;AAeDC,UAAAA,SAAS,EAAE;AAfV,SApCC;AAqDNE,QAAAA,QAAQ,EAAE;AACNd,UAAAA,OAAO,EAAE,OADH;AAENC,UAAAA,KAAK,EAAE,EAFD;AAGNC,UAAAA,MAAM,EAAE;AACJC,YAAAA,WAAW,EAAE,eADT;AAEJC,YAAAA,KAAK,EAAE,eAFH;AAGJC,YAAAA,IAAI,EAAE,UAHF;AAIJC,YAAAA,OAAO,EAAE;AAJL,WAHF;AASNC,UAAAA,UAAU,EAAE;AACRC,YAAAA,QAAQ,EAAE;AADF,WATN;AAYNC,UAAAA,KAAK,EAAE,KAZD;AAaNC,UAAAA,OAAO,EAAE,KAbH;AAcNC,UAAAA,iBAAiB,EAAE,EAdb;AAeNC,UAAAA,SAAS,EAAE;AAfL,SArDJ;AAsENG,QAAAA,GAAG,EAAE;AACDf,UAAAA,OAAO,EAAE,OADR;AAEDC,UAAAA,KAAK,EAAE,EAFN;AAGDe,UAAAA,aAAa,EAAE,EAHd;AAIDd,UAAAA,MAAM,EAAE;AACJE,YAAAA,KAAK,EAAE,WADH;AAEJC,YAAAA,IAAI,EAAE,KAFF;AAGJY,YAAAA,IAAI,EAAE,MAHF;AAIJd,YAAAA,WAAW,EAAE;AAJT,WAJP;AAUDI,UAAAA,UAAU,EAAE;AACRC,YAAAA,QAAQ,EAAE;AADF,WAVX;AAaDC,UAAAA,KAAK,EAAE,KAbN;AAcDC,UAAAA,OAAO,EAAE,KAdR;AAeDC,UAAAA,iBAAiB,EAAE,EAflB;AAgBDC,UAAAA,SAAS,EAAE;AAhBV,SAtEC;AAwFNM,QAAAA,WAAW,EAAE;AACTlB,UAAAA,OAAO,EAAE,QADA;AAETC,UAAAA,KAAK,EAAE,EAFE;AAGTC,UAAAA,MAAM,EAAE;AACJE,YAAAA,KAAK,EAAE,aADH;AAEJC,YAAAA,IAAI,EAAE,aAFF;AAGJC,YAAAA,OAAO,EAAE;AAHL,WAHC;AAQTC,UAAAA,UAAU,EAAE;AACRC,YAAAA,QAAQ,EAAE;AADF,WARH;AAWTC,UAAAA,KAAK,EAAE,KAXE;AAYTC,UAAAA,OAAO,EAAE,KAZA;AAaTC,UAAAA,iBAAiB,EAAE,EAbV;AAcTC,UAAAA,SAAS,EAAE;AAdF;AAxFP,OAZN;AAqHJO,MAAAA,YAAY,EAAC;AACTC,QAAAA,eAAe,EAAE;AACbpB,UAAAA,OAAO,EAAE,UADI;AAEbE,UAAAA,MAAM,EAAE;AACJE,YAAAA,KAAK,EAAE,UADH;AAEJC,YAAAA,IAAI,EAAE,gBAFF;AAGJY,YAAAA,IAAI,EAAE,UAHF;AAIJd,YAAAA,WAAW,EAAE;AAJT,WAFK;AAQbI,UAAAA,UAAU,EAAE;AACRC,YAAAA,QAAQ,EAAE;AADF,WARC;AAWbC,UAAAA,KAAK,EAAE,KAXM;AAYbC,UAAAA,OAAO,EAAE,KAZI;AAabC,UAAAA,iBAAiB,EAAE,EAbN;AAcbC,UAAAA,SAAS,EAAE;AAdE,SADR;AAiBTS,QAAAA,QAAQ,EAAE;AACNrB,UAAAA,OAAO,EAAE,OADH;AAENE,UAAAA,MAAM,EAAE;AACJE,YAAAA,KAAK,EAAE,cADH;AAEJC,YAAAA,IAAI,EAAE,gBAFF;AAGJY,YAAAA,IAAI,EAAE,UAHF;AAIJd,YAAAA,WAAW,EAAE;AAJT,WAFF;AAQNI,UAAAA,UAAU,EAAE;AACRC,YAAAA,QAAQ,EAAE;AADF,WARN;AAWNC,UAAAA,KAAK,EAAE,KAXD;AAYNC,UAAAA,OAAO,EAAE,KAZH;AAaNC,UAAAA,iBAAiB,EAAE,EAbb;AAcNC,UAAAA,SAAS,EAAE;AAdL,SAjBD;AAiCTU,QAAAA,eAAe,EAAE;AACbtB,UAAAA,OAAO,EAAE,OADI;AAEbC,UAAAA,KAAK,EAAE,EAFM;AAGbC,UAAAA,MAAM,EAAE;AACJE,YAAAA,KAAK,EAAE,mBADH;AAEJC,YAAAA,IAAI,EAAE,wBAFF;AAGJY,YAAAA,IAAI,EAAE,UAHF;AAIJd,YAAAA,WAAW,EAAE;AAJT,WAHK;AASbI,UAAAA,UAAU,EAAE;AACRC,YAAAA,QAAQ,EAAE,IADF;AAERe,YAAAA,OAAO,EAAE;AAFD,WATC;AAabd,UAAAA,KAAK,EAAE,KAbM;AAcbC,UAAAA,OAAO,EAAE,KAdI;AAebC,UAAAA,iBAAiB,EAAE,EAfN;AAgBbC,UAAAA,SAAS,EAAE;AAhBE;AAjCR;AArHT,KAD4B;;AAAA,SA4KpCY,YA5KoC,GA4KpBC,WAAD,IAAiB;AAC5B,WAAKC,QAAL,CAAc;AACV5B,QAAAA,QAAQ,EAAE2B;AADA,OAAd;AAGH,KAhLmC;;AAAA,SAqNpCE,UArNoC,GAqNvB,MAAOC,KAAP,IAAiB;AAC1B,WAAKF,QAAL,CAAc;AAAClC,QAAAA,OAAO,EAAC;AAAT,OAAd;AACAoC,MAAAA,KAAK,CAACC,cAAN;AACA,UAAIC,YAAY,GAAGnE,YAAY,CAAC,KAAKwB,KAAL,CAAWW,QAAZ,EAAsB,YAAtB,CAA/B;AACAiC,MAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACA,YAAM,KAAKG,KAAL,CAAWC,QAAX,CAAoBhE,aAAa,CAAC,KAAK+D,KAAL,CAAWE,IAAX,CAAgBC,QAAhB,CAAyBC,GAA1B,EAA+BP,YAA/B,CAAjC,EACDQ,IADC,CACIC,QAAQ,IAAI;AACdR,QAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;;AACA,YAAGA,QAAQ,CAACC,OAAT,CAAiBC,OAAjB,KAA6B,KAAhC,EACA;AACI,eAAKf,QAAL,CAAc;AAAClC,YAAAA,OAAO,EAAC,KAAT;AAAeC,YAAAA,QAAQ,EAAC,OAAxB;AAAiCC,YAAAA,QAAQ,EAAE,IAA3C;AAAiDG,YAAAA,WAAW,EAAE0C,QAAQ,CAACC,OAAT,CAAiBE;AAA/E,WAAd;AACH,SAHD,MAKA;AACI,eAAKhB,QAAL,CAAc;AAAClC,YAAAA,OAAO,EAAC,KAAT;AAAeC,YAAAA,QAAQ,EAAC,SAAxB;AAAkCF,YAAAA,MAAM,EAAC,KAAzC;AAAgDG,YAAAA,QAAQ,EAAE,IAA1D;AAAgEG,YAAAA,WAAW,EAAE0C,QAAQ,CAACC,OAAT,CAAiBE;AAA9F,WAAd;AACA,eAAKT,KAAL,CAAWC,QAAX,CAAoB9D,IAAI,EAAxB;AACH,SAVa,CAYhB;;AAED,OAfC,CAAN;AAgBH,KA1OmC;;AAAA,SA4OpCuE,YA5OoC,GA4OrB,MAAOf,KAAP,IAAiB;AAC5B,WAAKF,QAAL,CAAc;AAAElC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,YAAM,KAAKyC,KAAL,CAAWC,QAAX,CAAoBlE,oBAAoB,CAAC4D,KAAK,CAACgB,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAxC,CAAN;AACA,YAAM,KAAKZ,KAAL,CAAWC,QAAX,CAAoBjE,gBAAgB,CAAC,KAAKgE,KAAL,CAAWE,IAAX,CAAgBW,GAAhB,GAAsB,KAAKb,KAAL,CAAWE,IAAX,CAAgBW,GAAhB,CAAoBC,GAA1C,GAAgD,CAAjD,CAApC,EACLT,IADK,CACAC,QAAQ,IACV;AACIR,QAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;;AACJ,YAAGA,QAAQ,CAACC,OAAT,CAAiBC,OAAjB,IAA4B,KAA/B,EACA;AACI,eAAKf,QAAL,CAAc;AAAClC,YAAAA,OAAO,EAAC,KAAT;AAAeC,YAAAA,QAAQ,EAAC,OAAxB;AAAiCC,YAAAA,QAAQ,EAAE,IAA3C;AAAiDG,YAAAA,WAAW,EAAE0C,QAAQ,CAACC,OAAT,CAAiBE;AAA/E,WAAd;AAEH,SAJD,MAMA;AACI,eAAKhB,QAAL,CAAc;AAAClC,YAAAA,OAAO,EAAC,KAAT;AAAeC,YAAAA,QAAQ,EAAC,SAAxB;AAAkCF,YAAAA,MAAM,EAAC,KAAzC;AAAgDG,YAAAA,QAAQ,EAAE,IAA1D;AAAgEG,YAAAA,WAAW,EAAE0C,QAAQ,CAACC,OAAT,CAAiBE;AAA9F,WAAd;AACA,eAAKT,KAAL,CAAWC,QAAX,CAAoB9D,IAAI,EAAxB;AACH;AACJ,OAdK,CAAN;AAeH,KA9PmC;;AAAA,SA+PpC4E,mBA/PoC,GA+Pd,MAAM;AACxB,WAAKtB,QAAL,CAAc;AAAElC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,WAAKkC,QAAL,CAAc;AAAEtC,QAAAA,WAAW,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAA3B,OAAd;AACA,WAAK6C,KAAL,CAAWC,QAAX,CAAoB1D,aAAa,CAAC,KAAKW,KAAL,CAAWC,WAAZ,CAAjC,EACCkD,IADD,CACMC,QAAQ,IACV;AACIR,QAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;;AACJ,YAAGA,QAAQ,CAACC,OAAT,CAAiBC,OAAjB,IAA4B,KAA/B,EACA;AACI,eAAKf,QAAL,CAAc;AAAClC,YAAAA,OAAO,EAAC,KAAT;AAAeC,YAAAA,QAAQ,EAAC,OAAxB;AAAiCC,YAAAA,QAAQ,EAAE,IAA3C;AAAiDG,YAAAA,WAAW,EAAE0C,QAAQ,CAACC,OAAT,CAAiBE;AAA/E,WAAd;AAEH,SAJD,MAMA;AACI,eAAKhB,QAAL,CAAc;AAAClC,YAAAA,OAAO,EAAC,KAAT;AAAeC,YAAAA,QAAQ,EAAC,SAAxB;AAAkCF,YAAAA,MAAM,EAAC,KAAzC;AAAgDG,YAAAA,QAAQ,EAAE,IAA1D;AAAgEG,YAAAA,WAAW,EAAE0C,QAAQ,CAACC,OAAT,CAAiBE;AAA9F,WAAd;AACA,eAAKT,KAAL,CAAWC,QAAX,CAAoB9D,IAAI,EAAxB;AACH;AACJ,OAdD;AAeH,KAjRmC;;AAAA,SAkRpC6E,UAlRoC,GAkRtBjD,OAAD,IAAa;AACtB,YAAMkD,WAAW,GAAGzF,MAAM,CAACuC,OAAD,EAAU,KAAKb,KAAL,CAAWW,QAArB,EAA+B,YAA/B,CAA1B;AACA,WAAK4B,QAAL,CAAc;AACV/B,QAAAA,SAAS,EAAE,KADD;AAEVG,QAAAA,QAAQ,EAAEoD;AAFA,OAAd;;AAIA,UAAIC,IAAI,CAACC,SAAL,CAAe,KAAKjE,KAAL,CAAWW,QAAX,CAAoBe,GAApB,CAAwBZ,KAAxB,CAA8BoD,IAA9B,EAAf,KAAwDF,IAAI,CAACC,SAAL,CAAe,KAAKnB,KAAL,CAAWE,IAAX,CAAgBC,QAAhB,CAAyBvB,GAAzB,CAA6BwC,IAA7B,EAAf,CAAxD,IACJF,IAAI,CAACC,SAAL,CAAe,KAAKjE,KAAL,CAAWW,QAAX,CAAoBgB,QAApB,CAA6Bb,KAA7B,CAAmCoD,IAAnC,EAAf,KAA6DF,IAAI,CAACC,SAAL,CAAe,KAAKnB,KAAL,CAAWE,IAAX,CAAgBC,QAAhB,CAAyBtB,QAAzB,CAAkCuC,IAAlC,EAAf,CADzD,IAEJF,IAAI,CAACC,SAAL,CAAe,KAAKjE,KAAL,CAAWW,QAAX,CAAoBO,IAApB,CAAyBJ,KAAzB,CAA+BoD,IAA/B,EAAf,KAAyDF,IAAI,CAACC,SAAL,CAAe,KAAKnB,KAAL,CAAWE,IAAX,CAAgBC,QAAhB,CAAyB/B,IAAzB,CAA8BgD,IAA9B,EAAf,CAFrD,IAGJF,IAAI,CAACC,SAAL,CAAe,KAAKjE,KAAL,CAAWW,QAAX,CAAoBC,KAApB,CAA0BE,KAA1B,CAAgCoD,IAAhC,EAAf,KAA0DF,IAAI,CAACC,SAAL,CAAe,KAAKnB,KAAL,CAAWE,IAAX,CAAgBC,QAAhB,CAAyBrC,KAAzB,CAA+BsD,IAA/B,EAAf,CAHtD,IAIJF,IAAI,CAACC,SAAL,CAAe,KAAKjE,KAAL,CAAWW,QAAX,CAAoBiB,GAApB,CAAwBd,KAAxB,CAA8BoD,IAA9B,EAAf,KAAwDF,IAAI,CAACC,SAAL,CAAetG,MAAM,CAAC,KAAKmF,KAAL,CAAWE,IAAX,CAAgBC,QAAhB,CAAyBrB,GAA1B,CAAN,CAAqCuC,MAArC,CAA4C,YAA5C,CAAf,CAJpD,IAKJH,IAAI,CAACC,SAAL,CAAe,KAAKjE,KAAL,CAAWW,QAAX,CAAoBoB,WAApB,CAAgCjB,KAAhC,CAAsCoD,IAAtC,EAAf,KAAgEF,IAAI,CAACC,SAAL,CAAe,KAAKnB,KAAL,CAAWE,IAAX,CAAgBC,QAAhB,CAAyBlB,WAAzB,CAAqCmC,IAArC,EAAf,CALhE,EAMA;AACI,aAAK3B,QAAL,CAAc;AAACnC,UAAAA,MAAM,EAAC;AAAR,SAAd;AACH,OARD,MAUA;AACI,aAAKmC,QAAL,CAAc;AAACnC,UAAAA,MAAM,EAAC;AAAR,SAAd;AACH;AACJ,KArSmC;;AAAA,SAmUpCgE,aAnUoC,GAmUnBtC,IAAD,IAAU;AACtB,WAAKS,QAAL,CAAc;AACVpC,QAAAA,YAAY,EAAE2B,IADJ;AAEV1B,QAAAA,MAAM,EAAE,KAFE;AAGVC,QAAAA,OAAO,EAAE,KAHC;AAIVE,QAAAA,QAAQ,EAAE,KAJA;AAKVC,QAAAA,SAAS,EAAE,KALD;AAMVE,QAAAA,WAAW,EAAE;AANH,OAAd;AAOH,KA3UmC;;AAAA,SA6UpC1B,cA7UoC,GA6UlByD,KAAD,IAAW;AACxB,WAAKF,QAAL,CAAc;AAAElC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACAoC,MAAAA,KAAK,CAACC,cAAN;AAEA,UAAIC,YAAY,GAAGnE,YAAY,CAAC,KAAKwB,KAAL,CAAWgC,YAAZ,EAA0B,iBAA1B,CAA/B;AACA,UAAIqC,WAAW,GAAG9F,WAAW,CAAC,KAAKyB,KAAL,CAAWgC,YAAZ,EAA0B,iBAA1B,CAA7B;;AAEA,UAAIqC,WAAJ,EAAgB;AACZzB,QAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACA,aAAKG,KAAL,CAAWC,QAAX,CAAoB/D,cAAc,CAAC2D,YAAD,CAAlC,EACKQ,IADL,CACUC,QAAQ,IAAI;AACdR,UAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;;AACA,cAAGA,QAAQ,CAACC,OAAT,CAAiBC,OAApB,EAA4B;AACxB,iBAAKf,QAAL,CAAc;AACVhC,cAAAA,QAAQ,EAAE,IADA;AAEVG,cAAAA,WAAW,EAAE0C,QAAQ,CAACC,OAAT,CAAiBE;AAFpB,aAAd,EAGG,MAAM;AAAE9E,cAAAA,WAAW,CAAC,KAAKuB,KAAL,CAAWgC,YAAZ,CAAX;AAAqC,aAHhD;AAIH,WALD,MAKK;AACD,iBAAKO,QAAL,CAAc;AACV/B,cAAAA,SAAS,EAAE,IADD;AAEVE,cAAAA,WAAW,EAAE0C,QAAQ,CAACC,OAAT,CAAiBE;AAFpB,aAAd;AAIH;AACJ,SAdL;AAeH,OAjBD,MAiBK;AACD,aAAKhB,QAAL,CAAc;AACV/B,UAAAA,SAAS,EAAE,IADD;AAEVE,UAAAA,WAAW,EAAE;AAFH,SAAd;AAIH;AAEJ,KA5WmC;;AAAA,SA8WpC4D,kBA9WoC,GA8WdzD,OAAD,IAAa;AAC9B,YAAMkD,WAAW,GAAGzF,MAAM,CAACuC,OAAD,EAAU,KAAKb,KAAL,CAAWgC,YAArB,EAAmC,iBAAnC,CAA1B;AACA,WAAKO,QAAL,CAAc;AACV/B,QAAAA,SAAS,EAAE,KADD;AAEVwB,QAAAA,YAAY,EAAE+B;AAFJ,OAAd;AAIA,WAAKxB,QAAL,CAAc;AAAEnC,QAAAA,MAAM,EAAE;AAAV,OAAd;AACH,KArXmC;;AAAA,SAsXpCmE,OAtXoC,GAsXzBC,EAAD,IAAO;AACb,WAAK1B,KAAL,CAAWC,QAAX,CAAoB5D,WAAW,CAACqF,EAAD,CAA/B;AACH,KAxXmC;;AAAA,SAyXpCC,YAzXoC,GAyXpB3C,IAAD,IAAS;AACpB,cAAQA,IAAR;AACI,aAAK,SAAL;AACI,8BAAO;AAAM,YAAA,SAAS,EAAC,2DAAhB;AAA4E,YAAA,QAAQ,EAAGW,KAAD,IAAW,KAAKD,UAAL,CAAgBC,KAAhB,CAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACK;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAK,YAAA,SAAS,EAAC,wCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAEQ,KAAKzC,KAAL,CAAWK,OAAX,gBACI;AAAK,YAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAqB,oBAAC,gBAAD;AAAkB,YAAA,KAAK,EAAE;AAAEqE,cAAAA,KAAK,EAAE;AAAT,aAAzB;AAA+C,YAAA,SAAS,EAAE,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAArB,CADJ,GAKI,EAPZ,eASI;AAAK,YAAA,GAAG,EAAE,KAAK5B,KAAL,CAAWE,IAAX,CAAgBC,QAAhB,CAAyB0B,GAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,CADJ,eAYI;AAAK,YAAA,SAAS,EAAC,wCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAK,KAAK7B,KAAL,CAAWE,IAAX,CAAgBC,QAAhB,CAAyBtB,QAA9B,CADJ,eAEI;AAAO,YAAA,SAAS,EAAC,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,QAAQ,EAAE,KAAK6B,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAFJ,CAFJ,CAZJ,CADL,eAqBK;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAK,YAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,CADJ,eAKI;AAAK,YAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEI,oBAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,KAAKxD,KAAL,CAAWC,WAA5B;AAAyC,YAAA,OAAO,EAAC,SAAjD;AAA2D,YAAA,QAAQ,EAAE,MAAM,KAAK4D,mBAAL,EAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CALJ,CArBL,eAkCK;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAK,YAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,CADJ,eAII;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI,oBAAC,SAAD,CACI;AADJ;AAEI,YAAA,EAAE,EAAE,MAFR;AAGI,YAAA,QAAQ,EAAE,KAAK7D,KAAL,CAAWW,QAAX,CAAoBO,IAHlC;AAII,YAAA,MAAM,EAAGL,OAAD,IAAa,KAAKiD,UAAL,CAAgBjD,OAAhB,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAJJ,CAlCL,eA+CK;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAK,YAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,CADJ,eAII;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI,oBAAC,SAAD;AACA,YAAA,EAAE,EAAE,KADJ;AAEA,YAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWW,QAAX,CAAoBiB,GAF9B;AAGA,YAAA,MAAM,EAAGf,OAAD,IAAa,KAAKiD,UAAL,CAAgBjD,OAAhB,CAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAJJ,CA/CL,eA2DM;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACG;AAAK,YAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,CADH,eAIG;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI,oBAAC,SAAD;AACI,YAAA,EAAE,EAAE,aADR;AAEI,YAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWW,QAAX,CAAoBoB,WAFlC;AAGI,YAAA,MAAM,EAAGlB,OAAD,IAAa,KAAKiD,UAAL,CAAgBjD,OAAhB,CAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAJH,CA3DN,eAuEK;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CADJ,eAII;AAAK,YAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI,oBAAC,SAAD,CACI;AADJ;AAEI,YAAA,EAAE,EAAE,UAFR;AAGI,YAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWW,QAAX,CAAoBgB,QAHlC;AAII,YAAA,MAAM,EAAGd,OAAD,IAAa,KAAKiD,UAAL,CAAgBjD,OAAhB,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAJJ,CAvEL,eAqFK;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CADJ,eAII;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI,oBAAC,SAAD,CACI;AADJ;AAEI,YAAA,EAAE,EAAE,OAFR;AAGI,YAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWW,QAAX,CAAoBC,KAHlC;AAII,YAAA,MAAM,EAAGC,OAAD,IAAa,KAAKiD,UAAL,CAAgBjD,OAAhB,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAJJ,CArFL,eAkGK;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,CADJ,eAII;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI,oBAAC,SAAD,CACI;AADJ;AAEI,YAAA,EAAE,EAAE,KAFR;AAGI,YAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWW,QAAX,CAAoBe,GAHlC;AAII,YAAA,MAAM,EAAGb,OAAD,IAAa,KAAKiD,UAAL,CAAgBjD,OAAhB,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAJJ,CAlGL,EAgHS,KAAKb,KAAL,CAAWQ,SAAX,gBACA;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAK,YAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACK,KAAKR,KAAL,CAAWU,WADhB,CAHJ,CADA,GAQE,EAxHX,eA0HK;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAK,YAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAII,KAAKV,KAAL,CAAWI,MAAX,gBACI;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACA,oBAAC,MAAD;AAAQ,YAAA,SAAS,EAAC,UAAlB;AAA6B,YAAA,OAAO,EAAGqC,KAAD,IAAW;AAAE,mBAAKD,UAAL,CAAgBC,KAAhB;AAAwB,aAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,CADJ,gBAOA;AAAK,YAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI,oBAAC,MAAD;AAAQ,YAAA,SAAS,EAAC,kBAAlB;AAAqC,YAAA,QAAQ,EAAC,MAA9C;AAAqD,YAAA,OAAO,EAAGA,KAAD,IAAW;AAAE,mBAAKD,UAAL,CAAgBC,KAAhB;AAAwB,aAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,CAXJ,CA1HL,CAAP;;AA6IJ,aAAK,UAAL;AACI,8BAAO;AAAM,YAAA,SAAS,EAAC,2DAAhB;AAA4E,YAAA,QAAQ,EAAGA,KAAD,IAAW,KAAKzD,cAAL,CAAoByD,KAApB,CAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACH;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,CADJ,eAII;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI,oBAAC,SAAD;AACI,YAAA,EAAE,EAAE,iBADR;AAEI,YAAA,QAAQ,EAAE,KAAKzC,KAAL,CAAWgC,YAAX,CAAwBC,eAFtC,CAGI;AAHJ;AAII,YAAA,MAAM,EAAGpB,OAAD,IAAa,KAAKyD,kBAAL,CAAwBzD,OAAxB,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAJJ,CADG,eAaH;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAK,YAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADJ,CADJ,eAII;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI,oBAAC,SAAD;AACI,YAAA,EAAE,EAAE,UADR;AAEI,YAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWgC,YAAX,CAAwBE,QAFtC,CAGI;AAHJ;AAII,YAAA,MAAM,EAAGrB,OAAD,IAAa,KAAKyD,kBAAL,CAAwBzD,OAAxB,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAJJ,CAbG,eAyBH;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAK,YAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,CADJ,eAII;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI,oBAAC,SAAD;AACI,YAAA,EAAE,EAAE,iBADR;AAEI,YAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWgC,YAAX,CAAwBG,eAFtC,CAGI;AAHJ;AAII,YAAA,MAAM,EAAGtB,OAAD,IAAa,KAAKyD,kBAAL,CAAwBzD,OAAxB,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAJJ,CAzBG,EAqCF,KAAKb,KAAL,CAAWQ,SAAX,gBACG;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAK,YAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACK,KAAKR,KAAL,CAAWU,WADhB,CAHJ,CADH,GAQK,EA7CH,eA+CH;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAK,YAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI,oBAAC,MAAD;AAAQ,YAAA,SAAS,EAAC,UAAlB;AAA6B,YAAA,OAAO,EAAG+B,KAAD,IAAW;AAAE,mBAAKzD,cAAL,CAAoByD,KAApB;AAA4B,aAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,CAHJ,CA/CG,CAAP;;AAyDJ,aAAK,SAAL;AACI,8BAAO;AAAK,YAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACH;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAI,YAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDADJ,eAEI;AAAI,YAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAEI,KAAKK,KAAL,CAAWE,IAAX,CAAgB4B,YAAhB,CAA6BC,GAA7B,CAAiCC,IAAI,IAAI;AACrC,gCAAQ;AAAI,cAAA,SAAS,EAAC,mBAAd;AAAkC,cAAA,GAAG,EAAEA,IAAI,CAAC5B,GAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACJ;AAAK,cAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACI;AAAK,cAAA,GAAG,EAAE4B,IAAI,CAACH,GAAf;AAAoB,cAAA,SAAS,EAAC,kBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,cAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAoCG,IAAI,CAACnD,QAAzC,CAFJ,CADI,eAKJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAEI,KAAKmB,KAAL,CAAWE,IAAX,CAAgBC,QAAhB,CAAyB2B,YAAzB,CAAsCG,QAAtC,CAA+CD,IAAI,CAAC5B,GAApD,iBACA;AAAQ,cAAA,OAAO,EAAE,MAAI;AAAC,qBAAKqB,OAAL,CAAaO,IAAI,CAAC5B,GAAlB;AAAuB,eAA7C;AAA+C,cAAA,SAAS,EAAC,eAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADA,gBAGA;AAAQ,cAAA,OAAO,EAAE,MAAI;AAAC,qBAAKJ,KAAL,CAAWC,QAAX,CAAoB3D,SAAS,CAAC0F,IAAI,CAAC5B,GAAN,CAA7B;AAAyC,eAA/D;AAAiE,cAAA,SAAS,EAAC,iBAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BALJ,CALI,CAAR;AAcH,WAfD,CAFJ,CAFJ,CADG,CAAP;AA1MR;AAoOH,KA9lBmC;AAAA;;AAkLpC8B,EAAAA,KAAK,GAAE;AACH,SAAKzC,QAAL,CAAc;AACVnC,MAAAA,MAAM,EAAE,KADE;AAEVC,MAAAA,OAAO,EAAE,KAFC;AAGVE,MAAAA,QAAQ,EAAE,KAHA;AAIVC,MAAAA,SAAS,EAAE,KAJD;AAKVE,MAAAA,WAAW,EAAE;AALH,KAAd;AAOH,GA1LmC,CA4LpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;;AAoFAuE,EAAAA,WAAW,GAAG;AACV,SAAKjF,KAAL,CAAWC,WAAX,GAAyB,KAAK6C,KAAL,CAAWE,IAAX,CAAgBC,QAAhB,CAAyBhD,WAAlD;AACA,SAAKD,KAAL,CAAWW,QAAX,CAAoBe,GAApB,CAAwBZ,KAAxB,GAAgC,KAAKgC,KAAL,CAAWE,IAAX,CAAgBC,QAAhB,CAAyBvB,GAAzD;AACA,SAAK1B,KAAL,CAAWW,QAAX,CAAoBgB,QAApB,CAA6Bb,KAA7B,GAAqC,KAAKgC,KAAL,CAAWE,IAAX,CAAgBC,QAAhB,CAAyBtB,QAA9D;AACA,SAAK3B,KAAL,CAAWW,QAAX,CAAoBO,IAApB,CAAyBJ,KAAzB,GAAiC,KAAKgC,KAAL,CAAWE,IAAX,CAAgBC,QAAhB,CAAyB/B,IAA1D;AACA,SAAKlB,KAAL,CAAWW,QAAX,CAAoBC,KAApB,CAA0BE,KAA1B,GAAkC,KAAKgC,KAAL,CAAWE,IAAX,CAAgBC,QAAhB,CAAyBrC,KAA3D;AACA,SAAKZ,KAAL,CAAWW,QAAX,CAAoBC,KAApB,CAA0BE,KAA1B,GAAkC,KAAKgC,KAAL,CAAWE,IAAX,CAAgBC,QAAhB,CAAyBrC,KAA3D;AACA,SAAKZ,KAAL,CAAWW,QAAX,CAAoBC,KAApB,CAA0BE,KAA1B,GAAkC,KAAKgC,KAAL,CAAWE,IAAX,CAAgBC,QAAhB,CAAyBrC,KAA3D;AACA,SAAKZ,KAAL,CAAWW,QAAX,CAAoBoB,WAApB,CAAgCjB,KAAhC,GAAwC,KAAKgC,KAAL,CAAWE,IAAX,CAAgBC,QAAhB,CAAyBlB,WAAjE;AACA,SAAK/B,KAAL,CAAWW,QAAX,CAAoBiB,GAApB,CAAwBd,KAAxB,GAAgCnD,MAAM,CAAC,KAAKmF,KAAL,CAAWE,IAAX,CAAgBC,QAAhB,CAAyBrB,GAA1B,CAAN,CAAqCuC,MAArC,CAA4C,YAA5C,CAAhC;AACA,UAAMxD,QAAQ,GAAG,KAAKX,KAAL,CAAWW,QAA5B;AACA,SAAK4B,QAAL,CAAc;AAACnC,MAAAA,MAAM,EAAC;AAAR,KAAd;AACA,SAAKiC,YAAL,CAAkB1B,QAAlB;AACH;;AAEDuE,EAAAA,iBAAiB,GAAG;AAChB,SAAKD,WAAL;AACArC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWE,IAAX,CAAgBC,QAA5B,EAFgB,CAGhB;;AACA,SAAKH,KAAL,CAAWC,QAAX,CAAoB7D,eAAe,EAAnC;AACA,UAAMyB,QAAQ,GAAG,KAAKX,KAAL,CAAWW,QAA5B;AACA,SAAKmC,KAAL,CAAWC,QAAX,CAAoBzD,cAAc,EAAlC,EAAsC6D,IAAtC,CAA2CC,QAAQ,IAAG;AAClDR,MAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AACA,YAAMd,WAAW,GAAGjE,oBAAoB,CAACsC,QAAD,EAAWyC,QAAQ,CAACC,OAApB,EAA4B,aAA5B,CAAxC;AACA,WAAKhB,YAAL,CAAkBC,WAAlB;AACH,KAJD;AAKH;;AA+RD6C,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,2DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKnF,KAAL,CAAWG,YAAX,IAA2B,SAA3B,gBACI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAE,MAAM,KAAKiE,aAAL,CAAmB,SAAnB,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA0E,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE,EAAZ;AAAgB,MAAA,WAAW,EAAE,CAA7B;AAAgC,MAAA,KAAK,EAAC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1E,eAA0H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA1H,CADJ,gBAGI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,MAAM,KAAKA,aAAL,CAAmB,SAAnB,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkF,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE,EAAZ;AAAgB,MAAA,WAAW,EAAE,CAA7B;AAAgC,MAAA,KAAK,EAAC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlF,eAAkI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAlI,CALZ,EAQQ,KAAKpE,KAAL,CAAWG,YAAX,IAA2B,UAA3B,gBACI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAE,MAAM,KAAKiE,aAAL,CAAmB,UAAnB,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA4E,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE,EAAZ;AAAgB,MAAA,WAAW,EAAE,CAA7B;AAAgC,MAAA,KAAK,EAAC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5E,eAA4H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAA5H,CADJ,gBAGI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,MAAM,KAAKA,aAAL,CAAmB,UAAnB,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAoF,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE,EAAZ;AAAgB,MAAA,WAAW,EAAE,CAA7B;AAAgC,MAAA,KAAK,EAAC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApF,eAAoI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAApI,CAXZ,EAcQ,KAAKpE,KAAL,CAAWG,YAAX,IAA2B,SAA3B,gBACI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAE,MAAM,KAAKiE,aAAL,CAAmB,SAAnB,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA2E,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE,EAAZ;AAAgB,MAAA,WAAW,EAAE,CAA7B;AAAgC,MAAA,KAAK,EAAC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3E,eAA2H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA3H,CADJ,gBAGI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,MAAM,KAAKA,aAAL,CAAmB,SAAnB,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAmF,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE,EAAZ;AAAgB,MAAA,WAAW,EAAE,CAA7B;AAAgC,MAAA,KAAK,EAAC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnF,eAAmI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAnI,CAjBZ,CADJ,EAsBO,KAAKK,YAAL,CAAkB,KAAKzE,KAAL,CAAWG,YAA7B,CAtBP,CADJ,CADJ,eA6BI,oBAAC,QAAD;AACI,MAAA,YAAY,EAAE;AACViF,QAAAA,QAAQ,EAAE,QADA;AAEVC,QAAAA,UAAU,EAAE;AAFF,OADlB;AAKI,MAAA,IAAI,EAAE,KAAKrF,KAAL,CAAWO,QALrB;AAMI,MAAA,OAAO,EAAE,MAAM,KAAKgC,QAAL,CAAc;AAAEhC,QAAAA,QAAQ,EAAE;AAAZ,OAAd,CANnB;AAOI,MAAA,gBAAgB,EAAE,IAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASI,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAE,CAArB;AAAwB,MAAA,OAAO,EAAC,QAAhC;AAAyC,MAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWM,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0E,KAAKN,KAAL,CAAWU,WAArF,CATJ,CA7BJ,CADJ,CADJ;AA8CH;;AA/oBmC;;AAkpBxC,MAAM4E,eAAe,GAAItF,KAAD,IAAW;AAC/B,SAAO;AACHgD,IAAAA,IAAI,EAAEhD,KAAK,CAACgD;AADT,GAAP;AAGH,CAJD;;AAMA,eAAe/E,OAAO,CAACqH,eAAD,CAAP,CAAyB9F,UAAU,CAACO,eAAD,CAAnC,CAAf","sourcesContent":["import moment from 'moment';\r\nimport React, { Component, useEffect, useState } from 'react';\r\nimport Layout from '../../hoc/layout';\r\nimport { connect } from 'react-redux';\r\nimport { findPost} from '../../../src/actions/user_action';\r\nimport Switch from 'react-ios-switch';\r\nimport FormField from '../ultils/Form/FormField';\r\nimport './profilesetting.scss';\r\nimport { populateOptionFields, update, ifFormValid, generateData, resetFields } from '../ultils/Form/FormActions';\r\nimport { GridDots, User, Lock } from 'tabler-icons-react'\r\nimport { updateprofileimgfile, updateprofileimg, changeProfile, changePassword,auth, getBlockedUsers, unBlockUser, blockUser,changePrivate, getNationality } from '../../actions/user_action';\r\nimport { Link, withRouter, useParams } from 'react-router-dom';\r\nimport { Button, CircularProgress, Snackbar } from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert'\r\nimport Header from '../Header_Footer/Header';\r\n\r\nclass ProfileSettings extends Component {\r\n    state = {\r\n        privateMode: false,\r\n        inputValue: \"\",\r\n        settingState: 'profile',\r\n        edited: false,\r\n        loading: false,\r\n        severity: '',\r\n        setSnack: false,\r\n\r\n        formError: false,\r\n        formSuccess: false,\r\n        formMessage: \"\",\r\n        formData: {\r\n            email: {\r\n                element: 'input',\r\n                value: '',\r\n                config: {\r\n                    placeholder: 'Email của bạn',\r\n                    label: 'Email',\r\n                    name: 'email',\r\n                    options: [],\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    email: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false\r\n            },\r\n            name: {\r\n                element: 'input',\r\n                value: '',\r\n                config: {\r\n                    placeholder: 'Tên của bạn',\r\n                    label: 'Tên',\r\n                    name: 'name',\r\n                    options: [],\r\n                },\r\n                validation: {\r\n                    required: false,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false\r\n            },\r\n            bio: {\r\n                element: 'textarea',\r\n                value: '',\r\n                config: {\r\n                    placeholder: 'Mô tả về bản thân bạn',\r\n                    label: 'Tiểu sử',\r\n                    name: 'bio',\r\n                    options: [],\r\n                },\r\n                validation: {\r\n                    required: false,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false\r\n            },\r\n            userName: {\r\n                element: 'input',\r\n                value: '',\r\n                config: {\r\n                    placeholder: 'Tên tài khoản',\r\n                    label: 'Tên tài khoản',\r\n                    name: 'userName',\r\n                    options: [],\r\n                },\r\n                validation: {\r\n                    required: false,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false\r\n            },\r\n            dob: {\r\n                element: 'input',\r\n                value: '',\r\n                valueAsNumber: \"\",\r\n                config: {\r\n                    label: 'Ngày sinh',\r\n                    name: 'dob',\r\n                    type: 'date',\r\n                    placeholder: 'ngày sinh'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false,\r\n            },\r\n            nationality: {\r\n                element: 'select',\r\n                value: '',\r\n                config: {\r\n                    label: 'nationality',\r\n                    name: 'nationality',\r\n                    options: []\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false\r\n            },\r\n        },\r\n        passwordData:{\r\n            currentPassword: {\r\n                element: 'password',\r\n                config: {\r\n                    label: 'Mật khẩu',\r\n                    name: 'password_input',\r\n                    type: 'password',\r\n                    placeholder: 'Mật khẩu hiện tại'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false,\r\n            },\r\n            password: {\r\n                element: 'input',\r\n                config: {\r\n                    label: 'Mật khẩu mới',\r\n                    name: 'password_input',\r\n                    type: 'password',\r\n                    placeholder: 'Mật khẩu mới'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false,\r\n            },\r\n            confirmPassword: {\r\n                element: 'input',\r\n                value: '',\r\n                config: {\r\n                    label: 'Nhập lại mật khẩu',\r\n                    name: 'confirm_password_input',\r\n                    type: 'password',\r\n                    placeholder: 'Nhập lại mật khẩu'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    confirm: 'password'\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false,\r\n            }\r\n        }\r\n    }\r\n\r\n    updateFields = (newFormData) => {\r\n        this.setState({\r\n            formData: newFormData\r\n        })\r\n    }\r\n\r\n    reset(){\r\n        this.setState({\r\n            edited: false,\r\n            loading: false,\r\n            setSnack: false,\r\n            formError: false,\r\n            formMessage: \"\",\r\n        })\r\n    }\r\n\r\n    // submitForm = (event) => {\r\n    //     this.setState({loading:true})\r\n    //     event.preventDefault();\r\n    //     this.state.formData.privateMode = this.state.privateMode;\r\n    //     let dataToSubmit = generateData(this.state.formData, 'update_pro')\r\n    //     console.log(dataToSubmit)\r\n    //     this.props.dispatch(changeProfile(this.props.user.userData._id, dataToSubmit))\r\n    //         .then(response => {\r\n    //             console.log(response);\r\n    //             if(response.payload.success == false)\r\n    //             {\r\n    //                 this.setState({loading:false,severity:'error', setSnack: true, formMessage: response.payload.message})\r\n                    \r\n    //             }\r\n    //             else\r\n    //             {\r\n    //                 this.setState({loading:false,severity:'success',edited:false, setSnack: true, formMessage: response.payload.message})\r\n    //                 this.props.dispatch(auth());\r\n    //             }\r\n                \r\n    //           //  this.props.dispatch(auth());\r\n                \r\n    //         })\r\n    // }\r\n\r\n    submitForm = async (event) => {\r\n        this.setState({loading:true})\r\n        event.preventDefault();\r\n        let dataToSubmit = generateData(this.state.formData, 'update_pro')\r\n        console.log(dataToSubmit)\r\n        await this.props.dispatch(changeProfile(this.props.user.userData._id, dataToSubmit))\r\n            .then(response => {\r\n                console.log(response);\r\n                if(response.payload.success === false)\r\n                {\r\n                    this.setState({loading:false,severity:'error', setSnack: true, formMessage: response.payload.message})  \r\n                }\r\n                else\r\n                {\r\n                    this.setState({loading:false,severity:'success',edited:false, setSnack: true, formMessage: response.payload.message})\r\n                    this.props.dispatch(auth());\r\n                }\r\n                \r\n              //  this.props.dispatch(auth());\r\n                \r\n            })\r\n    }\r\n\r\n    onFileChange = async (event) => {\r\n        this.setState({ loading: true })\r\n        await this.props.dispatch(updateprofileimgfile(event.target.files[0]));\r\n        await this.props.dispatch(updateprofileimg(this.props.user.img ? this.props.user.img.url : 0))\r\n        .then(response=>\r\n            {\r\n                console.log(response)\r\n            if(response.payload.success == false)\r\n            {\r\n                this.setState({loading:false,severity:'error', setSnack: true, formMessage: response.payload.message})\r\n                \r\n            }\r\n            else\r\n            {\r\n                this.setState({loading:false,severity:'success',edited:false, setSnack: true, formMessage: response.payload.message})\r\n                this.props.dispatch(auth());\r\n            }\r\n        })\r\n    }\r\n    handlePrivateChange = () => {\r\n        this.setState({ loading: true })\r\n        this.setState({ privateMode: !this.state.privateMode })\r\n        this.props.dispatch(changePrivate(this.state.privateMode))\r\n        .then(response=>\r\n            {\r\n                console.log(response)\r\n            if(response.payload.success == false)\r\n            {\r\n                this.setState({loading:false,severity:'error', setSnack: true, formMessage: response.payload.message})\r\n                \r\n            }\r\n            else\r\n            {\r\n                this.setState({loading:false,severity:'success',edited:false, setSnack: true, formMessage: response.payload.message})\r\n                this.props.dispatch(auth());\r\n            }\r\n        })\r\n    }\r\n    updateForm = (element) => {\r\n        const newFormdata = update(element, this.state.formData, 'update_pro');\r\n        this.setState({\r\n            formError: false,\r\n            formData: newFormdata\r\n        });\r\n        if( JSON.stringify(this.state.formData.bio.value.trim()) != JSON.stringify(this.props.user.userData.bio.trim()) ||\r\n        JSON.stringify(this.state.formData.userName.value.trim()) != JSON.stringify(this.props.user.userData.userName.trim()) ||\r\n        JSON.stringify(this.state.formData.name.value.trim()) != JSON.stringify(this.props.user.userData.name.trim()) ||\r\n        JSON.stringify(this.state.formData.email.value.trim()) != JSON.stringify(this.props.user.userData.email.trim())||\r\n        JSON.stringify(this.state.formData.dob.value.trim()) != JSON.stringify(moment(this.props.user.userData.dob).format(\"YYYY-MM-DD\")) ||\r\n        JSON.stringify(this.state.formData.nationality.value.trim()) != JSON.stringify(this.props.user.userData.nationality.trim()))\r\n        {\r\n            this.setState({edited:true});\r\n        }\r\n        else\r\n        {\r\n            this.setState({edited:false});\r\n        }\r\n    }\r\n\r\n    getUserForm() {\r\n        this.state.privateMode = this.props.user.userData.privateMode;\r\n        this.state.formData.bio.value = this.props.user.userData.bio;\r\n        this.state.formData.userName.value = this.props.user.userData.userName;\r\n        this.state.formData.name.value = this.props.user.userData.name;\r\n        this.state.formData.email.value = this.props.user.userData.email;\r\n        this.state.formData.email.value = this.props.user.userData.email;\r\n        this.state.formData.email.value = this.props.user.userData.email;\r\n        this.state.formData.nationality.value = this.props.user.userData.nationality;\r\n        this.state.formData.dob.value = moment(this.props.user.userData.dob).format(\"YYYY-MM-DD\");\r\n        const formData = this.state.formData;\r\n        this.setState({edited:false});\r\n        this.updateFields(formData);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUserForm();\r\n        console.log(this.props.user.userData)\r\n        // this.setState({privateMode:this.props.user.userData.privateMode?this.props.user.userData.privateMode:false})\r\n        this.props.dispatch(getBlockedUsers());\r\n        const formData = this.state.formData;\r\n        this.props.dispatch(getNationality()).then(response =>{\r\n            console.log(response)\r\n            const newFormData = populateOptionFields(formData, response.payload,'nationality')\r\n            this.updateFields(newFormData)\r\n        })\r\n    }\r\n\r\n    handleSetting = (type) => {\r\n        this.setState({ \r\n            settingState: type,\r\n            edited: false,\r\n            loading: false,\r\n            setSnack: false,\r\n            formError: false,\r\n            formMessage: \"\" })\r\n    }\r\n\r\n    changePassword = (event) => {\r\n        this.setState({ loading: true })\r\n        event.preventDefault();\r\n       \r\n        let dataToSubmit = generateData(this.state.passwordData, 'change_password')\r\n        let formIsValid = ifFormValid(this.state.passwordData, 'change_password');\r\n       \r\n        if (formIsValid){\r\n            console.log(dataToSubmit)\r\n            this.props.dispatch(changePassword(dataToSubmit))\r\n                .then(response => {\r\n                    console.log(response);\r\n                    if(response.payload.success){\r\n                        this.setState({\r\n                            setSnack: true,\r\n                            formMessage: response.payload.message\r\n                        }, () => { resetFields(this.state.passwordData)})\r\n                    }else{\r\n                        this.setState({\r\n                            formError: true,\r\n                            formMessage: response.payload.message\r\n                        })\r\n                    }\r\n                })\r\n        }else{\r\n            this.setState({\r\n                formError: true,\r\n                formMessage: \"Vui lòng kiểm tra lại thông tin!\"\r\n            })\r\n        }\r\n       \r\n    }\r\n\r\n    updatePasswordForm = (element) => {\r\n        const newFormdata = update(element, this.state.passwordData, 'update_password');\r\n        this.setState({\r\n            formError: false,\r\n            passwordData: newFormdata\r\n        });\r\n        this.setState({ edited: true })\r\n    }\r\n    unblock = (id) =>{\r\n        this.props.dispatch(unBlockUser(id))\r\n    }\r\n    renderCotent = (type) =>{\r\n        switch (type){\r\n            case 'profile':\r\n                return <form className=\"col-xl-9 col-lg-9 col-md-9 col-sm-9 col-10 setting_detail\" onSubmit={(event) => this.submitForm(event)}>\r\n                            <div className=\"row setting_type\">\r\n                                <div className=\"col-xl-3 col-md-3 col-sm-3 col-4 label\">\r\n                                    {\r\n                                        this.state.loading ?\r\n                                            <div class=\"overlay\"><CircularProgress style={{ color: '#5477D5' }} thickness={7} />\r\n                                            </div>\r\n\r\n                                            :\r\n                                            ''\r\n                                    }\r\n                                    <img src={this.props.user.userData.avt}></img>\r\n                                </div>\r\n                                <div className=\"col-xl-9 col-md-9 col-sm-9 col-8 field\">\r\n                                    <h2>{this.props.user.userData.userName}</h2>\r\n                                    <label className=\"custom-file-upload\">\r\n                                        <input type=\"file\" onChange={this.onFileChange} />\r\n                                        <h6>Sửa ảnh đại diện</h6>\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row setting_type\">\r\n                                <div className=\"ol-xl-3 col-md-3 label\">\r\n                                    <h3>Riêng tư</h3>\r\n\r\n                                </div>\r\n                                <div className=\"col-xl-9 col-md-9  field\">\r\n\r\n                                    <Switch checked={this.state.privateMode} onColor=\"#7166F9\" onChange={() => this.handlePrivateChange()}>\r\n\r\n                                    </Switch>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row setting_type\">\r\n                                <div className=\"ol-xl-3 col-md-3 label\">\r\n                                    <h3>Họ Tên</h3>\r\n                                </div>\r\n                                <div className=\"col-xl-9 col-md-9 field\">\r\n                                    <FormField\r\n                                        //Có thể để trống phần description nên k cần xử lý event onChange,..\r\n                                        id={'name'}\r\n                                        formData={this.state.formData.name}\r\n                                        change={(element) => this.updateForm(element)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row setting_type\">\r\n                                <div className=\"ol-xl-3 col-md-3 label\">\r\n                                    <h3>Ngày sinh</h3>\r\n                                </div>\r\n                                <div className=\"col-xl-9 col-md-9 field\">\r\n                                    <FormField\r\n                                    id={'dob'}\r\n                                    formData={this.state.formData.dob}\r\n                                    change={(element) => this.updateForm(element)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                             <div className=\"row setting_type\">\r\n                                <div className=\"ol-xl-3 col-md-3 label\">\r\n                                    <h3>Quốc tịch</h3>\r\n                                </div>\r\n                                <div className=\"col-xl-9 col-md-9 field\">\r\n                                    <FormField\r\n                                        id={'nationality'}\r\n                                        formData={this.state.formData.nationality}\r\n                                        change={(element) => this.updateForm(element)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row setting_type\">\r\n                                <div className=\"ol-xl-3 col-md-3  label\">\r\n                                    <h3>User name</h3>\r\n                                </div>\r\n                                <div className=\"col-xl-9 col-md-9  field\">\r\n                                    <FormField\r\n                                        //Có thể để trống phần description nên k cần xử lý event onChange,..\r\n                                        id={'userName'}\r\n                                        formData={this.state.formData.userName}\r\n                                        change={(element) => this.updateForm(element)}\r\n\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row setting_type\">\r\n                                <div className=\"ol-xl-3 col-md-3  label\">\r\n                                    <h3>Email</h3>\r\n                                </div>\r\n                                <div className=\"col-xl-9 col-md-9 field\">\r\n                                    <FormField\r\n                                        //Có thể để trống phần description nên k cần xử lý event onChange,..\r\n                                        id={'email'}\r\n                                        formData={this.state.formData.email}\r\n                                        change={(element) => this.updateForm(element)}\r\n                                    />\r\n                                </div>\r\n                            </div>                      \r\n                            <div className=\"row setting_type\">\r\n                                <div className=\"col-xl-3 col-md-3 label\">\r\n                                    <h3>Mô tả</h3>\r\n                                </div>\r\n                                <div className=\"col-xl-9 col-md-9 field\">\r\n                                    <FormField\r\n                                        //Có thể để trống phần description nên k cần xử lý event onChange,..\r\n                                        id={'bio'}\r\n                                        formData={this.state.formData.bio}\r\n                                        change={(element) => this.updateForm(element)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            {\r\n                                this.state.formError ?\r\n                                <div className=\"row setting_type\">\r\n                                    <div className=\"ol-xl-3 col-md-3 label\">\r\n                                    </div>\r\n                                    <div className=\"col-xl-9 col-md-9 field\">\r\n                                        {this.state.formMessage}\r\n                                    </div>\r\n                                </div>\r\n                                : \"\"\r\n                            }\r\n                            <div className=\"row setting_type\">\r\n                                <div className=\"ol-xl-3 col-md-3 label\">\r\n                                </div>\r\n                                {\r\n                                this.state.edited?\r\n                                    <div className=\"col-xl-9 col-md-9 field\">\r\n                                    <Button className=\"send_btn\" onClick={(event) => { this.submitForm(event) }}>\r\n                                        Gửi\r\n                                    </Button>\r\n                                </div>\r\n                                :\r\n                                <div className=\"col-xl-9 col-md-9  field\">\r\n                                    <Button className=\"send_btn disable\" disabled=\"true\" onClick={(event) => { this.submitForm(event) }}>\r\n                                        Gửi\r\n                                        </Button>\r\n                                </div>\r\n                                }\r\n                            </div>\r\n                        </form>\r\n            case 'password':\r\n                return <form className=\"col-xl-9 col-lg-9 col-md-9 col-sm-9 col-10 setting_detail\" onSubmit={(event) => this.changePassword(event)}>                \r\n                    <div className=\"row setting_type\">\r\n                        <div className=\"col-xl-3 col-md-3 label\">\r\n                            <h3>Mật khẩu</h3>\r\n                        </div>\r\n                        <div className=\"col-xl-9 col-md-9 field\">\r\n                            <FormField\r\n                                id={'currentPassword'}\r\n                                formData={this.state.passwordData.currentPassword}\r\n                                //Hàm change nhận vào một element và gọi đến hàm updateForm(element) \r\n                                change={(element) => this.updatePasswordForm(element)} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row setting_type\">\r\n                        <div className=\"ol-xl-3 col-md-3 label\">\r\n                            <h3>Mật khẩu mới</h3>\r\n                        </div>\r\n                        <div className=\"col-xl-9 col-md-9 field\">\r\n                            <FormField\r\n                                id={'password'}\r\n                                formData={this.state.passwordData.password}\r\n                                //Hàm change nhận vào một element và gọi đến hàm updateForm(element) \r\n                                change={(element) => this.updatePasswordForm(element)}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row setting_type\">\r\n                        <div className=\"ol-xl-3 col-md-3 label\">\r\n                            <h3>Nhập lại</h3>\r\n                        </div>\r\n                        <div className=\"col-xl-9 col-md-9 field\">\r\n                            <FormField\r\n                                id={'confirmPassword'}\r\n                                formData={this.state.passwordData.confirmPassword}\r\n                                //Hàm change nhận vào một element và gọi đến hàm updateForm(element) \r\n                                change={(element) => this.updatePasswordForm(element)}/>\r\n                        </div>\r\n                    </div>\r\n                    {this.state.formError ?\r\n                        <div className=\"row setting_type\">\r\n                            <div className=\"ol-xl-3 col-md-3 label\">\r\n                            </div>\r\n                            <div className=\"col-xl-9 col-md-9 field\">\r\n                                {this.state.formMessage}\r\n                            </div>\r\n                        </div>\r\n                        : \"\"\r\n                    }\r\n                    <div className=\"row setting_type\">\r\n                        <div className=\"ol-xl-3 col-md-3 label\">\r\n                        </div>\r\n                        <div className=\"col-xl-9 col-md-9 field\">\r\n                            <Button className=\"send_btn\" onClick={(event) => { this.changePassword(event) }}>\r\n                                Gửi\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            case 'privacy':\r\n                return <div className=\" col-xl-9 col-lg-9 col-md-9 col-sm-9 col-10 setting_detail\">\r\n                    <div className=\"wrapper\">\r\n                        <h6 className=\"title\">Người dùng bị chặn</h6>\r\n                        <ul className=\"blocked-user-list\">\r\n                        {\r\n                            this.props.user.blockedUsers.map(item => {\r\n                                return  <li className=\"blocked-user-item\" key={item._id}>\r\n                                    <div className=\"blocked-user-info\">\r\n                                        <img src={item.avt} className=\"blocked-user-avt\"/>\r\n                                        <h6 className=\"blocked-user-name\" >{item.userName}</h6>\r\n                                    </div>\r\n                                    <div >\r\n                                    {\r\n                                        this.props.user.userData.blockedUsers.includes(item._id)?\r\n                                        <button onClick={()=>{this.unblock(item._id)}} className=\"bnt btn-block\">Bỏ chặn</button>\r\n                                        :\r\n                                        <button onClick={()=>{this.props.dispatch(blockUser(item._id))}} className=\"bnt btn-unblock\">Chặn</button>\r\n                                    }\r\n                                    </div>        \r\n                                </li>\r\n                            })\r\n                        }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <div className=\"setting_container\">\r\n                    <div className=\"setting_wrapper\">\r\n                        <div className=\"row no-gutters\">\r\n                            <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-2 setting_options\">\r\n                                {\r\n                                    this.state.settingState == 'profile' ?\r\n                                        <Button className=\"options\" onClick={() => this.handleSetting('profile')}><User size={20} strokeWidth={1} color=\"black\" /><p>Thông tin</p></Button>\r\n                                        :\r\n                                        <Button className=\"options disable\" onClick={() => this.handleSetting('profile')}><User size={20} strokeWidth={1} color=\"black\" /><p>Thông tin</p></Button>\r\n                                }\r\n                                {\r\n                                    this.state.settingState == 'password' ?\r\n                                        <Button className=\"options\" onClick={() => this.handleSetting('password')} ><Lock size={20} strokeWidth={1} color=\"black\" /><p>Đổi mật khẩu</p></Button>\r\n                                        :\r\n                                        <Button className=\"options disable\" onClick={() => this.handleSetting('password')} ><Lock size={20} strokeWidth={1} color=\"black\" /><p>Đổi mật khẩu</p></Button>\r\n                                }\r\n                                 {\r\n                                    this.state.settingState == 'Bảo mật' ?\r\n                                        <Button className=\"options\" onClick={() => this.handleSetting('privacy')} ><Lock size={20} strokeWidth={1} color=\"black\" /><p>Bảo mật</p></Button>\r\n                                        :\r\n                                        <Button className=\"options disable\" onClick={() => this.handleSetting('privacy')} ><Lock size={20} strokeWidth={1} color=\"black\" /><p>Bảo mật</p></Button>\r\n                                }\r\n                            </div>\r\n                            {\r\n                               this.renderCotent(this.state.settingState)\r\n                            }\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    <Snackbar\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'center'\r\n                        }}\r\n                        open={this.state.setSnack}\r\n                        onClose={() => this.setState({ setSnack: false })}\r\n                        autoHideDuration={1000}\r\n                    >\r\n                        <MuiAlert elevation={6} variant=\"filled\" severity={this.state.severity} >{this.state.formMessage}</MuiAlert>\r\n                    </Snackbar>\r\n                </div>\r\n               \r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(ProfileSettings));"]},"metadata":{},"sourceType":"module"}