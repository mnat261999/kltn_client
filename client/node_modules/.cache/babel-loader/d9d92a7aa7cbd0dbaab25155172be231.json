{"ast":null,"code":"import { ClickAwayListener } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { PRODUCT_SERVER, USER_SERVER, TAG_SERVER, POST_SERVER, STORY_SERVER } from \"../components/ultils/mise\";\nimport { GET_PRODUCTS_BY_SELL, GET_PRODUCTS_BY_ARRIVAL, GET_BRANDS, GET_WOODS, GET_PRODUCTS_TO_SHOP, ADD_PRODUCT, CLEAR_PRODUCT, ADD_BRAND, ADD_WOOD, GET_POST_DETAIL, CLEAR_POST_DETAIL, GET_TOP10_TAGS, LIKE_POST, COMMENT_POST, HIDE_POST, UPDATE_DETAIL, LIKE_DETAIL, LIKE_COMMENT, HIDE_POST_DETAIL, DELETE_COMMENT, DELETE_POST, REPORT_POST, GET_STORY, UPDATE_POST, UPDATE_POST_DETAIL, SAVE_DETAIL, SAVE_POST, VIEW_STORY, CREATE_STORY, DELETE_STORY, GET_RECOMMEND_POST, RESTRICTED, FIND_LOCATION } from \"./types\";\nexport function getPostDetail(id) {\n  const request = axios.get(`${POST_SERVER}/postDetail?id=${id}&type=single`).then(response => {\n    return response.data;\n  });\n  return {\n    type: GET_POST_DETAIL,\n    payload: request\n  };\n}\nexport function getProductsBySell() {\n  //articles?sortBy=sold&order=desc&limit=4\n  const request = axios.get(`${POST_SERVER}/articles?sortBy=sold&order=desc&limit=4`).then(response => response.data);\n  console.log(request);\n  return {\n    type: GET_PRODUCTS_BY_SELL,\n    payload: request\n  };\n}\nexport function getProductsByArrival() {\n  const request = axios.get(`${POST_SERVER}/articles?sortBy=createAt&order=desc&limit=4`).then(response => response.data);\n  console.log(request);\n  return {\n    type: GET_PRODUCTS_BY_ARRIVAL,\n    payload: request\n  };\n}\nexport function getProductsToShop(skip, limit, filters = [], previousState = []) {\n  const data = {\n    skip,\n    limit,\n    filters\n  };\n  const request = axios.post(`${USER_SERVER}/newfeed`, data).then(response => {\n    let newState = [...previousState, ...response.data.topNewFeed];\n    return {\n      size: response.data.size,\n      posts: newState\n    };\n  });\n  return {\n    type: GET_PRODUCTS_TO_SHOP,\n    payload: request\n  };\n}\nexport function getBrands() {\n  const request = axios.get(`${PRODUCT_SERVER}/brands`).then(response => response.data);\n  return {\n    type: GET_BRANDS,\n    payload: request\n  };\n}\nexport function getWoods() {\n  const request = axios.get(`${PRODUCT_SERVER}/woods`).then(response => response.data);\n  console.log(request);\n  return {\n    type: GET_WOODS,\n    payload: request\n  };\n}\nexport function createPost(dataToSubmit) {\n  const request = axios.post(`${POST_SERVER}/create_post`, dataToSubmit).then(response => {\n    if (response.data.restricted) {\n      return {\n        type: RESTRICTED,\n        payload: response.data\n      };\n    } else {\n      return {\n        type: ADD_PRODUCT,\n        payload: response.data\n      };\n    }\n  });\n  return request;\n}\nexport function updatePost(dataToSubmit, Actiontype) {\n  const request = axios.post(`${POST_SERVER}/update_post`, dataToSubmit).then(response => {\n    return response.data;\n  });\n  return {\n    type: Actiontype == \"detail\" ? UPDATE_POST_DETAIL : UPDATE_POST,\n    payload: request\n  };\n}\nexport function clearProduct() {\n  return {\n    type: CLEAR_PRODUCT,\n    payload: \"\"\n  };\n}\nexport function addBrands(dataToSubmit, existingBrands) {\n  const request = axios.post(`${PRODUCT_SERVER}/brand`, dataToSubmit).then(response => {\n    let brands = [...existingBrands, response.data.brand];\n    return {\n      success: response.data.success,\n      brands\n    };\n  });\n  return {\n    type: ADD_BRAND,\n    payload: request\n  };\n}\nexport function addWoods(dataToSubmit, existingWoods) {\n  const request = axios.post(`${PRODUCT_SERVER}/wood`, dataToSubmit).then(response => {\n    let woods = [...existingWoods, response.data.wood];\n    return {\n      success: response.data.success,\n      woods\n    };\n  });\n  return {\n    type: ADD_WOOD,\n    payload: request\n  };\n}\nexport function getTopTenTags(skip, limit, previousState = []) {\n  const data = {\n    skip,\n    limit\n  };\n  console.log(skip, limit);\n  const request = axios.post(`${TAG_SERVER}/getTop10Tags`, data).then(response => {\n    let topTenTags = [...previousState, ...response.data.topTenTags];\n    console.log(response.data.topTenTags);\n    return {\n      topTenTags,\n      size: response.data.size\n    };\n  });\n  return {\n    type: GET_TOP10_TAGS,\n    payload: request\n  };\n}\nexport function savePost(postId) {\n  const data = {\n    postId\n  };\n  const request = axios.put(`${POST_SERVER}/save`, data).then(response => {\n    if (response.data.restricted) {\n      return {\n        type: RESTRICTED,\n        payload: response.data\n      };\n    } else {\n      return {\n        type: SAVE_POST,\n        payload: response.data.user\n      };\n    }\n  });\n  return request;\n}\nexport function unSavePost(postId) {\n  const data = {\n    postId\n  };\n  let type = SAVE_POST;\n  const request = axios.put(`${POST_SERVER}/unSave`, data).then(response => {\n    console.log(response.data);\n\n    if (response.data.restricted) {\n      type = RESTRICTED;\n      return response.data;\n    } else {\n      console.log(response.data);\n      return response.data.user;\n    }\n  });\n  return {\n    type: type,\n    payload: request\n  };\n}\nexport function likePost(postId, ActionType) {\n  const data = {\n    postId\n  };\n  let type = ActionType == \"detail\" ? LIKE_DETAIL : LIKE_POST;\n  const request = axios.put(`${POST_SERVER}/like`, data).then(response => {\n    console.log(response.data);\n\n    if (response.data.restricted) {\n      type = RESTRICTED;\n      return response.data;\n    } else {\n      return response.data[0];\n    }\n  });\n  return {\n    type: type,\n    payload: request\n  };\n}\nexport function unlikePost(postId, ActionType) {\n  const data = {\n    postId\n  };\n  let type = ActionType == \"detail\" ? LIKE_DETAIL : LIKE_POST;\n  console.log(type);\n  const request = axios.put(`${POST_SERVER}/unlike`, data).then(response => {\n    console.log(response.data);\n\n    if (response.data.restricted) {\n      type = RESTRICTED;\n      return response.data;\n    } else {\n      return response.data[0];\n    }\n  });\n  return {\n    type: type,\n    payload: request\n  };\n} // export function unlikePost(postId, ActionType) {\n//     const data ={\n//         postId\n//     }\n//     let type = ActionType == \"detail\" ? LIKE_DETAIL : LIKE_POST;\n//     const request = axios.put(`${POST_SERVER}/unlike`,data)\n//     .then( response =>{\n//         console.log(response.data)\n//         if(response.data.restricted){\n//             type = RESTRICTED\n//             return response.data\n//         }else{\n//             return response.data[0]\n//         }\n//     })\n//     return {\n//         type: type,\n//         payload: request\n//     }\n// }\n\nexport function makeComment(postId, content, Actiontype) {\n  const data = {\n    postId,\n    content\n  };\n  const request = axios.post(`${POST_SERVER}/comment`, data).then(response => {\n    if (response.data.restricted) {\n      return {\n        type: RESTRICTED,\n        payload: response.data\n      };\n    } else {\n      let action = {\n        type: Actiontype == \"detail\" ? UPDATE_DETAIL : COMMENT_POST,\n        payload: response.data[0]\n      };\n      return action;\n    }\n  });\n  return request;\n}\nexport function likeComment(postId, commentId, ActionType) {\n  const data = {\n    commentId,\n    postId\n  };\n  const request = axios.put(`${POST_SERVER}/likeComment`, data).then(response => {\n    if (response.data.restricted) {\n      return {\n        type: RESTRICTED,\n        payload: response.data\n      };\n    } else {\n      return {\n        type: LIKE_COMMENT,\n        payload: response.data[0]\n      };\n    }\n  });\n  return request;\n}\nexport function unLikeComment(postId, commentId, ActionType) {\n  const data = {\n    commentId,\n    postId\n  };\n  const request = axios.put(`${POST_SERVER}/unLikeComment`, data).then(response => {\n    if (response.data.restricted) {\n      return {\n        type: RESTRICTED,\n        payload: response.data\n      };\n    } else {\n      return {\n        type: LIKE_COMMENT,\n        payload: response.data[0]\n      };\n    }\n  });\n  return request;\n}\nexport function hidePost(postId, ActionType) {\n  const data = {\n    postId\n  };\n  const request = axios.put(`${POST_SERVER}/hidePost`, data).then(response => {\n    return response.data;\n  });\n  console.log(request);\n  return {\n    type: ActionType == \"detail\" ? HIDE_POST_DETAIL : HIDE_POST,\n    payload: request\n  };\n}\nexport function deleteComment(postId, commentId) {\n  console.log(postId, commentId);\n  const data = {\n    postId,\n    commentId\n  };\n  const request = axios.put(`${POST_SERVER}/deleteComment`, data).then(response => {\n    return response.data[0];\n  });\n  console.log(request);\n  return {\n    type: DELETE_COMMENT,\n    payload: request\n  };\n}\nexport function deletePost(id) {\n  const data = {\n    id\n  };\n  const request = axios.post(`${POST_SERVER}/delete_post`, data).then(response => {\n    console.log(response.data);\n    return response.data;\n  });\n  console.log(request);\n  return {\n    type: DELETE_POST,\n    payload: request\n  };\n}\nexport function report(reportData, reportPolicy) {\n  console.log(reportData);\n  let data = {};\n\n  switch (reportData.reportType) {\n    case \"post\":\n      data = {\n        reportType: reportData.reportType,\n        reportAbout: reportPolicy,\n        post: reportData.post\n      };\n      break;\n\n    case \"comment\":\n      data = {\n        reportType: reportData.reportType,\n        reportAbout: reportPolicy,\n        comment: reportData.comment,\n        post: reportData.post\n      };\n      break;\n\n    case \"user\":\n      data = {\n        reportType: reportData.reportType,\n        reportAbout: reportPolicy,\n        userId: reportData.userId\n      };\n      break;\n  }\n\n  const request = axios.post(`${POST_SERVER}/report`, data).then(response => {\n    console.log(response);\n    return response.data;\n  });\n  return {\n    type: REPORT_POST,\n    payload: request\n  };\n}\nexport function getStory(id) {\n  const request = axios.get(`${STORY_SERVER}/getAll`).then(response => {\n    console.log(response.data);\n    return sortStory(response.data, id); //return response.data;\n  });\n  return {\n    type: GET_STORY,\n    payload: request\n  };\n}\nexport function viewStory(id) {\n  let data = {\n    id\n  };\n  console.log(id);\n  const request = axios.put(`${STORY_SERVER}/view`, data).then(response => {\n    console.log(response.data);\n    return response.data;\n  });\n  return {\n    type: VIEW_STORY,\n    payload: request\n  };\n}\nexport function deleteStory(storyId) {\n  console.log(\"idddddddddddđ\", storyId);\n  let data = {\n    storyId\n  };\n  const request = axios.post(`/api/story/delete`, data).then(response => {\n    console.log(\"delete story\", response.data);\n    return response.data;\n  });\n  return {\n    type: DELETE_STORY,\n    payload: request\n  };\n}\nexport async function createStory(uri, id) {\n  try {\n    const request = await fetch(\"/api/story/create\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        uri: uri\n      }),\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(\"Success:\", data);\n      return data;\n    });\n    return {\n      type: CREATE_STORY,\n      payload: {\n        success: request.success,\n        stories: sortStory(request.stories, id)\n      }\n    };\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction isViewed(item, id) {\n  let res = false;\n\n  for (let i = 0; i < item.stories.length; i++) {\n    if (item.stories[i].viewedBy.length == 0) {\n      console.log(\"Empty\", id);\n      res = false;\n      break;\n    } else {\n      if (item.stories[i].viewedBy.includes(id)) {\n        res = true;\n      }\n    }\n  }\n\n  console.log(item._id, res);\n  return res;\n}\n\nfunction sortStory(stories, id) {\n  stories.sort((x, y) => {\n    return isViewed(x, id) === isViewed(y, id) ? 0 : isViewed(x, id) ? 1 : -1;\n  });\n  return stories;\n}\n\nexport function findLocation(name) {\n  const request = axios.get(`${POST_SERVER}/location/${name}`).then(response => response.data);\n  return {\n    type: FIND_LOCATION,\n    payload: request\n  };\n}","map":{"version":3,"sources":["D:/Kltn/test/social-media/client/src/actions/product_actions.js"],"names":["ClickAwayListener","axios","PRODUCT_SERVER","USER_SERVER","TAG_SERVER","POST_SERVER","STORY_SERVER","GET_PRODUCTS_BY_SELL","GET_PRODUCTS_BY_ARRIVAL","GET_BRANDS","GET_WOODS","GET_PRODUCTS_TO_SHOP","ADD_PRODUCT","CLEAR_PRODUCT","ADD_BRAND","ADD_WOOD","GET_POST_DETAIL","CLEAR_POST_DETAIL","GET_TOP10_TAGS","LIKE_POST","COMMENT_POST","HIDE_POST","UPDATE_DETAIL","LIKE_DETAIL","LIKE_COMMENT","HIDE_POST_DETAIL","DELETE_COMMENT","DELETE_POST","REPORT_POST","GET_STORY","UPDATE_POST","UPDATE_POST_DETAIL","SAVE_DETAIL","SAVE_POST","VIEW_STORY","CREATE_STORY","DELETE_STORY","GET_RECOMMEND_POST","RESTRICTED","FIND_LOCATION","getPostDetail","id","request","get","then","response","data","type","payload","getProductsBySell","console","log","getProductsByArrival","getProductsToShop","skip","limit","filters","previousState","post","newState","topNewFeed","size","posts","getBrands","getWoods","createPost","dataToSubmit","restricted","updatePost","Actiontype","clearProduct","addBrands","existingBrands","brands","brand","success","addWoods","existingWoods","woods","wood","getTopTenTags","topTenTags","savePost","postId","put","user","unSavePost","likePost","ActionType","unlikePost","makeComment","content","action","likeComment","commentId","unLikeComment","hidePost","deleteComment","deletePost","report","reportData","reportPolicy","reportType","reportAbout","comment","userId","getStory","sortStory","viewStory","deleteStory","storyId","createStory","uri","fetch","method","body","JSON","stringify","headers","json","stories","error","isViewed","item","res","i","length","viewedBy","includes","_id","sort","x","y","findLocation","name"],"mappings":"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","sourcesContent":["import { ClickAwayListener } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport {\n  PRODUCT_SERVER,\n  USER_SERVER,\n  TAG_SERVER,\n  POST_SERVER,\n  STORY_SERVER,\n} from \"../components/ultils/mise\";\n\nimport {\n  GET_PRODUCTS_BY_SELL,\n  GET_PRODUCTS_BY_ARRIVAL,\n  GET_BRANDS,\n  GET_WOODS,\n  GET_PRODUCTS_TO_SHOP,\n  ADD_PRODUCT,\n  CLEAR_PRODUCT,\n  ADD_BRAND,\n  ADD_WOOD,\n  GET_POST_DETAIL,\n  CLEAR_POST_DETAIL,\n  GET_TOP10_TAGS,\n  LIKE_POST,\n  COMMENT_POST,\n  HIDE_POST,\n  UPDATE_DETAIL,\n  LIKE_DETAIL,\n  LIKE_COMMENT,\n  HIDE_POST_DETAIL,\n  DELETE_COMMENT,\n  DELETE_POST,\n  REPORT_POST,\n  GET_STORY,\n  UPDATE_POST,\n  UPDATE_POST_DETAIL,\n  SAVE_DETAIL,\n  SAVE_POST,\n  VIEW_STORY,\n  CREATE_STORY,\n  DELETE_STORY,\n  GET_RECOMMEND_POST,\n  RESTRICTED,\n  FIND_LOCATION,\n} from \"./types\";\n\nexport function getPostDetail(id) {\n  const request = axios\n    .get(`${POST_SERVER}/postDetail?id=${id}&type=single`)\n    .then((response) => {\n      return response.data;\n    });\n  return {\n    type: GET_POST_DETAIL,\n    payload: request,\n  };\n}\n\nexport function getProductsBySell() {\n  //articles?sortBy=sold&order=desc&limit=4\n  const request = axios\n    .get(`${POST_SERVER}/articles?sortBy=sold&order=desc&limit=4`)\n    .then((response) => response.data);\n  console.log(request);\n  return {\n    type: GET_PRODUCTS_BY_SELL,\n    payload: request,\n  };\n}\n\nexport function getProductsByArrival() {\n  const request = axios\n    .get(`${POST_SERVER}/articles?sortBy=createAt&order=desc&limit=4`)\n    .then((response) => response.data);\n  console.log(request);\n  return {\n    type: GET_PRODUCTS_BY_ARRIVAL,\n    payload: request,\n  };\n}\n\nexport function getProductsToShop(\n  skip,\n  limit,\n  filters = [],\n  previousState = []\n) {\n  const data = {\n    skip,\n    limit,\n    filters,\n  };\n  const request = axios\n    .post(`${USER_SERVER}/newfeed`, data)\n    .then((response) => {\n      let newState = [...previousState, ...response.data.topNewFeed];\n      return {\n        size: response.data.size,\n        posts: newState,\n      };\n    });\n  return {\n    type: GET_PRODUCTS_TO_SHOP,\n    payload: request,\n  };\n}\n\nexport function getBrands() {\n  const request = axios\n    .get(`${PRODUCT_SERVER}/brands`)\n    .then((response) => response.data);\n  return {\n    type: GET_BRANDS,\n    payload: request,\n  };\n}\n\nexport function getWoods() {\n  const request = axios\n    .get(`${PRODUCT_SERVER}/woods`)\n    .then((response) => response.data);\n  console.log(request);\n  return {\n    type: GET_WOODS,\n    payload: request,\n  };\n}\n\nexport function createPost(dataToSubmit) {\n  const request = axios\n    .post(`${POST_SERVER}/create_post`, dataToSubmit)\n    .then((response) => {\n      if (response.data.restricted) {\n        return {\n          type: RESTRICTED,\n          payload: response.data,\n        };\n      } else {\n        return {\n          type: ADD_PRODUCT,\n          payload: response.data,\n        };\n      }\n    });\n\n  return request;\n}\n\nexport function updatePost(dataToSubmit, Actiontype) {\n  const request = axios\n    .post(`${POST_SERVER}/update_post`, dataToSubmit)\n    .then((response) => {\n      return response.data;\n    });\n  return {\n    type: Actiontype == \"detail\" ? UPDATE_POST_DETAIL : UPDATE_POST,\n    payload: request,\n  };\n}\n\nexport function clearProduct() {\n  return {\n    type: CLEAR_PRODUCT,\n    payload: \"\",\n  };\n}\n\nexport function addBrands(dataToSubmit, existingBrands) {\n  const request = axios\n    .post(`${PRODUCT_SERVER}/brand`, dataToSubmit)\n    .then((response) => {\n      let brands = [...existingBrands, response.data.brand];\n      return {\n        success: response.data.success,\n        brands,\n      };\n    });\n\n  return {\n    type: ADD_BRAND,\n    payload: request,\n  };\n}\n\nexport function addWoods(dataToSubmit, existingWoods) {\n  const request = axios\n    .post(`${PRODUCT_SERVER}/wood`, dataToSubmit)\n    .then((response) => {\n      let woods = [...existingWoods, response.data.wood];\n      return {\n        success: response.data.success,\n        woods,\n      };\n    });\n\n  return {\n    type: ADD_WOOD,\n    payload: request,\n  };\n}\n\nexport function getTopTenTags(skip, limit, previousState = []) {\n  const data = {\n    skip,\n    limit,\n  };\n  console.log(skip, limit);\n  const request = axios\n    .post(`${TAG_SERVER}/getTop10Tags`, data)\n    .then((response) => {\n      let topTenTags = [...previousState, ...response.data.topTenTags];\n      console.log(response.data.topTenTags);\n      return {\n        topTenTags,\n        size: response.data.size,\n      };\n    });\n  return {\n    type: GET_TOP10_TAGS,\n    payload: request,\n  };\n}\n\nexport function savePost(postId) {\n  const data = {\n    postId,\n  };\n  const request = axios.put(`${POST_SERVER}/save`, data).then((response) => {\n    if (response.data.restricted) {\n      return {\n        type: RESTRICTED,\n        payload: response.data,\n      };\n    } else {\n      return {\n        type: SAVE_POST,\n        payload: response.data.user,\n      };\n    }\n  });\n\n  return request;\n}\n\nexport function unSavePost(postId) {\n  const data = {\n    postId,\n  };\n\n  let type = SAVE_POST;\n  const request = axios.put(`${POST_SERVER}/unSave`, data).then((response) => {\n    console.log(response.data);\n    if (response.data.restricted) {\n      type = RESTRICTED;\n      return response.data;\n    } else {\n      console.log(response.data);\n      return response.data.user;\n    }\n  });\n\n  return {\n    type: type,\n    payload: request,\n  };\n}\n\nexport function likePost(postId, ActionType) {\n  const data = {\n    postId,\n  };\n  let type = ActionType == \"detail\" ? LIKE_DETAIL : LIKE_POST;\n  const request = axios.put(`${POST_SERVER}/like`, data).then((response) => {\n    console.log(response.data);\n    if (response.data.restricted) {\n      type = RESTRICTED;\n      return response.data;\n    } else {\n      return response.data[0];\n    }\n  });\n\n  return {\n    type: type,\n    payload: request,\n  };\n}\n\nexport function unlikePost(postId, ActionType) {\n  const data = {\n    postId,\n  };\n  let type = ActionType == \"detail\" ? LIKE_DETAIL : LIKE_POST;\n  console.log(type);\n  const request = axios.put(`${POST_SERVER}/unlike`, data).then((response) => {\n    console.log(response.data);\n    if (response.data.restricted) {\n      type = RESTRICTED;\n      return response.data;\n    } else {\n      return response.data[0];\n    }\n  });\n\n  return {\n    type: type,\n    payload: request,\n  };\n}\n\n// export function unlikePost(postId, ActionType) {\n\n//     const data ={\n//         postId\n//     }\n//     let type = ActionType == \"detail\" ? LIKE_DETAIL : LIKE_POST;\n//     const request = axios.put(`${POST_SERVER}/unlike`,data)\n//     .then( response =>{\n//         console.log(response.data)\n//         if(response.data.restricted){\n//             type = RESTRICTED\n//             return response.data\n//         }else{\n//             return response.data[0]\n//         }\n//     })\n\n//     return {\n//         type: type,\n//         payload: request\n//     }\n// }\n\nexport function makeComment(postId, content, Actiontype) {\n  const data = {\n    postId,\n    content,\n  };\n\n  const request = axios\n    .post(`${POST_SERVER}/comment`, data)\n    .then((response) => {\n      if (response.data.restricted) {\n        return {\n          type: RESTRICTED,\n          payload: response.data,\n        };\n      } else {\n        let action = {\n          type: Actiontype == \"detail\" ? UPDATE_DETAIL : COMMENT_POST,\n          payload: response.data[0],\n        };\n        return action;\n      }\n    });\n\n  return request;\n}\n\nexport function likeComment(postId, commentId, ActionType) {\n  const data = {\n    commentId,\n    postId,\n  };\n  const request = axios\n    .put(`${POST_SERVER}/likeComment`, data)\n    .then((response) => {\n      if (response.data.restricted) {\n        return {\n          type: RESTRICTED,\n          payload: response.data,\n        };\n      } else {\n        return {\n          type: LIKE_COMMENT,\n          payload: response.data[0],\n        };\n      }\n    });\n  return request;\n}\n\nexport function unLikeComment(postId, commentId, ActionType) {\n  const data = {\n    commentId,\n    postId,\n  };\n  const request = axios\n    .put(`${POST_SERVER}/unLikeComment`, data)\n    .then((response) => {\n      if (response.data.restricted) {\n        return {\n          type: RESTRICTED,\n          payload: response.data,\n        };\n      } else {\n        return {\n          type: LIKE_COMMENT,\n          payload: response.data[0],\n        };\n      }\n    });\n\n  return request;\n}\n\nexport function hidePost(postId, ActionType) {\n  const data = {\n    postId,\n  };\n  const request = axios\n    .put(`${POST_SERVER}/hidePost`, data)\n    .then((response) => {\n      return response.data;\n    });\n  console.log(request);\n  return {\n    type: ActionType == \"detail\" ? HIDE_POST_DETAIL : HIDE_POST,\n    payload: request,\n  };\n}\n\nexport function deleteComment(postId, commentId) {\n  console.log(postId, commentId);\n  const data = {\n    postId,\n    commentId,\n  };\n  const request = axios\n    .put(`${POST_SERVER}/deleteComment`, data)\n    .then((response) => {\n      return response.data[0];\n    });\n  console.log(request);\n  return {\n    type: DELETE_COMMENT,\n    payload: request,\n  };\n}\n\nexport function deletePost(id) {\n  const data = {\n    id,\n  };\n  const request = axios\n    .post(`${POST_SERVER}/delete_post`, data)\n    .then((response) => {\n      console.log(response.data);\n      return response.data;\n    });\n  console.log(request);\n  return {\n    type: DELETE_POST,\n    payload: request,\n  };\n}\n\nexport function report(reportData, reportPolicy) {\n  console.log(reportData);\n  let data = {};\n\n  switch (reportData.reportType) {\n    case \"post\":\n      data = {\n        reportType: reportData.reportType,\n        reportAbout: reportPolicy,\n        post: reportData.post,\n      };\n      break;\n    case \"comment\":\n      data = {\n        reportType: reportData.reportType,\n        reportAbout: reportPolicy,\n        comment: reportData.comment,\n        post: reportData.post,\n      };\n      break;\n    case \"user\":\n      data = {\n        reportType: reportData.reportType,\n        reportAbout: reportPolicy,\n        userId: reportData.userId,\n      };\n      break;\n  }\n\n  const request = axios.post(`${POST_SERVER}/report`, data).then((response) => {\n    console.log(response);\n    return response.data;\n  });\n\n  return {\n    type: REPORT_POST,\n    payload: request,\n  };\n}\n\nexport function getStory(id) {\n  const request = axios.get(`${STORY_SERVER}/getAll`).then((response) => {\n    console.log(response.data);\n    return sortStory(response.data, id);\n    //return response.data;\n  });\n  return {\n    type: GET_STORY,\n    payload: request,\n  };\n}\n\nexport function viewStory(id) {\n  let data = { id };\n  console.log(id);\n  const request = axios.put(`${STORY_SERVER}/view`, data).then((response) => {\n    console.log(response.data);\n    return response.data;\n  });\n  return {\n    type: VIEW_STORY,\n    payload: request,\n  };\n}\n\nexport function deleteStory(storyId) {\n  console.log(\"idddddddddddđ\", storyId);\n  let data = { storyId };\n  const request = axios.post(`/api/story/delete`, data).then((response) => {\n    console.log(\"delete story\", response.data);\n    return response.data;\n  });\n  return {\n    type: DELETE_STORY,\n    payload: request,\n  };\n}\n\nexport async function createStory(uri, id) {\n  try {\n    const request = await fetch(\"/api/story/create\", {\n      method: \"POST\",\n      body: JSON.stringify({ uri: uri }),\n      headers: { \"Content-type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Success:\", data);\n        return data;\n      });\n    return {\n      type: CREATE_STORY,\n      payload: {\n        success: request.success,\n        stories: sortStory(request.stories, id),\n      },\n    };\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction isViewed(item, id) {\n  let res = false;\n  for (let i = 0; i < item.stories.length; i++) {\n    if (item.stories[i].viewedBy.length == 0) {\n      console.log(\"Empty\", id);\n      res = false;\n      break;\n    } else {\n      if (item.stories[i].viewedBy.includes(id)) {\n        res = true;\n      }\n    }\n  }\n  console.log(item._id, res);\n  return res;\n}\n\nfunction sortStory(stories, id) {\n  stories.sort((x, y) => {\n    return isViewed(x, id) === isViewed(y, id) ? 0 : isViewed(x, id) ? 1 : -1;\n  });\n  return stories;\n}\n\nexport function findLocation(name) {\n  const request = axios\n    .get(`${POST_SERVER}/location/${name}`)\n    .then((response) => response.data);\n  return {\n    type: FIND_LOCATION,\n    payload: request,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}