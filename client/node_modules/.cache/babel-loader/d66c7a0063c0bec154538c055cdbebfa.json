{"ast":null,"code":"import axios from \"axios\";\nimport { ACCOUNT_SERVER } from \"../components/ultils/mise\";\nimport { GET_ALL_ACCOUNT, SORT_ACCOUNT, UPDATE_ACCOUNT, DELETE_ACCOUNT, GET_ACCOUNT } from \"./types\";\nexport function getAll(limit, skip, prevState = []) {\n  const data = {\n    skip,\n    limit\n  };\n  console.log(data);\n  const request = axios.post(`${ACCOUNT_SERVER}/getAll`, data).then(response => {\n    console.log(response.data.accounts);\n    let newState = [...prevState, ...response.data.accounts];\n    return {\n      size: response.data.size,\n      accounts: newState\n    };\n  });\n  return {\n    type: GET_ALL_ACCOUNT,\n    payload: request\n  };\n}\nexport function sort(sortBy, list) {\n  switch (sortBy.type) {\n    case \"name\":\n      list.sort((a, b) => {\n        if (a.name > b.name) {\n          console.log(a.name, b.name);\n          return 1 * sortBy.order;\n        } else {\n          console.log(a.name, b.name);\n          return -1 * sortBy.order;\n        }\n      });\n      console.log(list);\n      return list;\n\n    case \"userName\":\n      list.sort((a, b) => {\n        if (a.userName > b.userName) {\n          return 1 * sortBy.order;\n        } else {\n          return -1 * sortBy.order;\n        }\n      });\n      console.log(list);\n      return list;\n\n    case \"email\":\n      console.log(sortBy);\n      list.sort((a, b) => {\n        if (a.email > b.email) {\n          return 1 * sortBy.order;\n        } else {\n          return -1 * sortBy.order;\n        }\n      });\n      console.log(list);\n      return list;\n\n    default:\n      return list;\n  }\n} // export function getReportDetail(id) {\n//     const data = { id }\n//     const request = axios.post(`${REPORT_SERVER}/getDetail`, data)\n//         .then(response => {\n//             console.log(response.data);\n//             return response.data\n//         })\n//     return {\n//         type: GET_REPORT_DETAIL,\n//         payload: request\n//     }\n// }\n// export function updateReport(id) {\n//     const data = { id }\n//     const request = axios.put(`${REPORT_SERVER}/updateReport`, data)\n//         .then(response => {\n//             console.log(response.data);\n//             return response.data\n//         })\n//     return {\n//         type: UPDATE_REPORT,\n//         payload: request\n//     }\n// }\n// export function deletePost(postId, reportId) {\n//     const data = { postId, reportId }\n//     const request = axios.post(`${REPORT_SERVER}/delete_post`, data)\n//         .then(response => {\n//             console.log(response.data);\n//             return response.data\n//         })\n//     return {\n//         type: UPDATE_REPORT,\n//         payload: request\n//     }\n// }","map":{"version":3,"sources":["D:/Kltn/test/social-media/client/src/actions/account_actions.js"],"names":["axios","ACCOUNT_SERVER","GET_ALL_ACCOUNT","SORT_ACCOUNT","UPDATE_ACCOUNT","DELETE_ACCOUNT","GET_ACCOUNT","getAll","limit","skip","prevState","data","console","log","request","post","then","response","accounts","newState","size","type","payload","sort","sortBy","list","a","b","name","order","userName","email"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { ACCOUNT_SERVER } from \"../components/ultils/mise\";\nimport {\n  GET_ALL_ACCOUNT,\n  SORT_ACCOUNT,\n  UPDATE_ACCOUNT,\n  DELETE_ACCOUNT,\n  GET_ACCOUNT,\n} from \"./types\";\n\nexport function getAll(limit, skip, prevState = []) {\n  const data = {\n    skip,\n    limit,\n  };\n  console.log(data);\n  const request = axios\n    .post(`${ACCOUNT_SERVER}/getAll`, data)\n    .then((response) => {\n      console.log(response.data.accounts);\n      let newState = [...prevState, ...response.data.accounts];\n      return {\n        size: response.data.size,\n        accounts: newState,\n      };\n    });\n  return {\n    type: GET_ALL_ACCOUNT,\n    payload: request,\n  };\n}\n\nexport function sort(sortBy, list) {\n  switch (sortBy.type) {\n    case \"name\":\n      list.sort((a, b) => {\n        if (a.name > b.name) {\n          console.log(a.name, b.name);\n          return 1 * sortBy.order;\n        } else {\n          console.log(a.name, b.name);\n          return -1 * sortBy.order;\n        }\n      });\n      console.log(list);\n      return list;\n    case \"userName\":\n      list.sort((a, b) => {\n        if (a.userName > b.userName) {\n          return 1 * sortBy.order;\n        } else {\n          return -1 * sortBy.order;\n        }\n      });\n      console.log(list);\n      return list;\n    case \"email\":\n      console.log(sortBy);\n      list.sort((a, b) => {\n        if (a.email > b.email) {\n          return 1 * sortBy.order;\n        } else {\n          return -1 * sortBy.order;\n        }\n      });\n      console.log(list);\n      return list;\n    default:\n      return list;\n  }\n}\n\n// export function getReportDetail(id) {\n//     const data = { id }\n//     const request = axios.post(`${REPORT_SERVER}/getDetail`, data)\n//         .then(response => {\n//             console.log(response.data);\n//             return response.data\n//         })\n//     return {\n//         type: GET_REPORT_DETAIL,\n//         payload: request\n//     }\n// }\n\n// export function updateReport(id) {\n//     const data = { id }\n//     const request = axios.put(`${REPORT_SERVER}/updateReport`, data)\n//         .then(response => {\n//             console.log(response.data);\n//             return response.data\n//         })\n//     return {\n//         type: UPDATE_REPORT,\n//         payload: request\n//     }\n// }\n\n// export function deletePost(postId, reportId) {\n//     const data = { postId, reportId }\n//     const request = axios.post(`${REPORT_SERVER}/delete_post`, data)\n//         .then(response => {\n//             console.log(response.data);\n//             return response.data\n//         })\n//     return {\n//         type: UPDATE_REPORT,\n//         payload: request\n//     }\n// }\n"]},"metadata":{},"sourceType":"module"}