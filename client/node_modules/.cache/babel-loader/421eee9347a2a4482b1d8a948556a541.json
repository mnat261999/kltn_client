{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kltn\\\\test\\\\social-media\\\\client\\\\src\\\\components\\\\User\\\\index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Layout from '../../hoc/layout';\nimport { Link, withRouter } from 'react-router-dom';\nimport FormField from '../ultils/Form/FormField';\nimport { populateOptionFields, update, ifFormValid, generateData, resetFields } from '../ultils/Form/FormActions';\nimport FileUpload from '../ultils/FileUpload';\nimport './createPostForm.scss';\nimport 'react-autocomplete-input/dist/bundle.css';\nimport { getAllTags, getUserTag } from '../../actions/tag_actions';\nimport { clearProduct, createPost } from '../../actions/product_actions';\nimport SearchLocationInput from '../SearchLocationInput/SearchLocationInput';\nimport { startSession } from 'mongoose';\nimport moment from 'moment';\nimport Slide from '@material-ui/core/Slide';\nimport { Dialog } from '@material-ui/core';\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }\n  }));\n});\n\nclass UserDashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      inputValue: \"\",\n      formError: false,\n      formSuccess: false,\n      formData: {\n        description: {\n          element: 'description',\n          value: '',\n          config: {\n            placeholder: 'Nói gì đó về bài viết này.....',\n            label: 'Mô tả',\n            name: 'description',\n            options: []\n          },\n          validation: {\n            required: false\n          },\n          valid: true,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        },\n        userTag: {\n          element: 'userTag',\n          value: '',\n          config: {\n            placeholder: 'Gắn thẻ bạn bè',\n            label: 'Gắn thẻ',\n            name: 'userTag',\n            options: []\n          },\n          validation: {\n            required: false\n          },\n          valid: true,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        },\n        locationInput: {\n          element: 'locationInput',\n          value: '',\n          config: {\n            placeholder: 'Thêm vị trí',\n            label: 'Vị trí',\n            name: 'location',\n            options: []\n          },\n          validation: {\n            required: false\n          },\n          valid: true,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        },\n        images: {\n          element: 'select',\n          value: [],\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        }\n      },\n      setfollowerDiaglog: false,\n      alertFunctionIsRestricted: false,\n      restrictedFunction: {}\n    };\n\n    this.updateFields = newFormData => {\n      this.setState({\n        formData: newFormData\n      });\n    };\n\n    this.updateDescription = newFormdata => {\n      this.setState(prevState => ({\n        formError: false,\n        formData: newFormdata\n      }));\n    };\n\n    this.updateForm = element => {\n      const newFormdata = update(element, this.state.formData, 'posts');\n      console.log(newFormdata);\n      this.updateDescription(newFormdata);\n    };\n\n    this.updateFields = newFormData => {\n      this.setState({\n        formData: newFormData\n      });\n    };\n\n    this.imagesHandler = images => {\n      const newFormData = { ...this.state.formData\n      };\n      newFormData['images'].value = images;\n      images.length ? newFormData['images'].valid = true : newFormData['images'].valid = false;\n      this.setState({\n        formData: newFormData\n      });\n      console.log(this.state.formData);\n    };\n\n    this.emojiToggle = () => {\n      this.setState({\n        emojiPicker: !this.state.emojiPicker\n      });\n    };\n\n    this.onEmojiClick = (event, emojiObject) => {\n      this.setState({\n        emojiObject: emojiObject\n      });\n    };\n\n    this.submitForm = event => {\n      event.preventDefault();\n      this.state.formData.locationInput.value = document.getElementById('input_value').value;\n      let data = generateData(this.state.formData, 'posts');\n      let formIsValid = ifFormValid(this.state.formData, 'posts');\n      let dataToSubmit = { ...data\n      };\n      dataToSubmit.tags = this.findHashtags(data.description);\n      dataToSubmit.userTag = this.findUserTag(data.userTag);\n      console.log(dataToSubmit);\n\n      if (formIsValid) {\n        console.log(dataToSubmit);\n        this.props.dispatch(createPost(dataToSubmit)).then(response => {\n          if (response.payload.restricted) {\n            console.log(response.payload);\n            this.setState({\n              alertFunctionIsRestricted: true,\n              restrictedFunction: response.payload.restrictedFunction\n            });\n          } else {\n            console.log(this.props.products);\n\n            if (this.props.products.addProduct.success) {\n              this.props.history.push('/newfeed');\n            } else {\n              this.setState({\n                formError: true\n              });\n            }\n          }\n        });\n      } else {\n        this.setState({\n          formError: true\n        });\n      }\n    };\n\n    this.resetFieldHandler = () => {\n      const newFormData = resetFields(this.state.formData, 'posts');\n      this.setState({\n        formSuccess: true\n      });\n      setTimeout(() => {\n        this.setState({\n          formSuccess: false\n        }, () => {\n          this.props.dispatch(clearProduct());\n        });\n      }, 3000);\n    };\n  }\n\n  componentDidMount() {\n    const formData = this.state.formData; //Gọi API lấy danh sách thẻ\n\n    this.props.dispatch(getAllTags()).then(response => {\n      const newFormData = populateOptionFields(formData, this.props.tags.allTags, 'description');\n      this.updateFields(newFormData);\n    });\n    this.props.dispatch(getUserTag()).then(response => {\n      const newFormData = populateOptionFields(formData, this.props.tags.userTags, 'userTag');\n      this.updateFields(newFormData);\n    });\n  }\n\n  findHashtags(Text) {\n    var regexp = /\\B\\#\\w\\w+\\b/g;\n    let result = Text.match(regexp);\n\n    if (result) {\n      let tags = [];\n      result.forEach(item => {\n        tags.push(item.slice(1));\n      });\n      return tags;\n    } else {\n      return [];\n    }\n  }\n\n  findUserTag(Text) {\n    var regexp = /\\B\\@\\w\\w+\\b/g;\n    let result = Text.match(regexp);\n\n    if (result) {\n      let userTag = [];\n      result.forEach(item => {\n        userTag.push(item.slice(1));\n      });\n      return userTag;\n    } else {\n      return [];\n    }\n  }\n\n  render() {\n    const props = this.props;\n    return /*#__PURE__*/React.createElement(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create_post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      class: \"create_post_form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-12 col-sm-12 col-12 no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user_info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"avatar\",\n      src: props.user.userData.avt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"userName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 37\n      }\n    }, props.user.userData.userName)), /*#__PURE__*/React.createElement(FormField, {\n      id: 'description',\n      change: element => this.updateForm(element),\n      formData: this.state.formData.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormField, {\n      id: 'userTag',\n      change: element => this.updateForm(element),\n      formData: this.state.formData.userTag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(SearchLocationInput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(FileUpload, {\n      imagesHandler: images => this.imagesHandler(images),\n      reset: this.state.formSuccess,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"create_button\",\n      onClick: event => {\n        this.submitForm(event);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 33\n      }\n    }, \"\\u0110\\u0103ng b\\xE0i\"), this.state.formError ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 37\n      }\n    }, \"H\\xE3y th\\xEAm \\u1EA3nh \\u0111\\u1EC3 \\u0111\\u0103ng b\\xE0i nh\\xE9 :( \") : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 39\n      }\n    }))))), /*#__PURE__*/React.createElement(Dialog, {\n      className: \"dialog_cont\",\n      onClose: () => {\n        this.setState({\n          alertFunctionIsRestricted: false\n        });\n      },\n      open: this.state.alertFunctionIsRestricted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dialog_header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 25\n      }\n    }, \"Ba\\u0323n \\u0111a\\u0303 bi\\u0323 ha\\u0323n ch\\xEA\\u0301 ch\\u01B0\\u0301c n\\u0103ng na\\u0300y cho \\u0111\\xEA\\u0301n \", moment(this.state.restrictedFunction.amountOfTime).format(\"L\")))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    tags: state.tags,\n    products: state.products\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(UserDashboard));","map":{"version":3,"sources":["D:/Kltn/test/social-media/client/src/components/User/index.js"],"names":["React","Component","connect","Layout","Link","withRouter","FormField","populateOptionFields","update","ifFormValid","generateData","resetFields","FileUpload","getAllTags","getUserTag","clearProduct","createPost","SearchLocationInput","startSession","moment","Slide","Dialog","Transition","forwardRef","props","ref","UserDashboard","state","inputValue","formError","formSuccess","formData","description","element","value","config","placeholder","label","name","options","validation","required","valid","touched","validationMessage","showlabel","userTag","locationInput","images","setfollowerDiaglog","alertFunctionIsRestricted","restrictedFunction","updateFields","newFormData","setState","updateDescription","newFormdata","prevState","updateForm","console","log","imagesHandler","length","emojiToggle","emojiPicker","onEmojiClick","event","emojiObject","submitForm","preventDefault","document","getElementById","data","formIsValid","dataToSubmit","tags","findHashtags","findUserTag","dispatch","then","response","payload","restricted","products","addProduct","success","history","push","resetFieldHandler","setTimeout","componentDidMount","allTags","userTags","Text","regexp","result","match","forEach","item","slice","render","user","userData","avt","userName","amountOfTime","format","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Layout from '../../hoc/layout';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport FormField from '../ultils/Form/FormField';\r\nimport { populateOptionFields, update, ifFormValid, generateData, resetFields} from '../ultils/Form/FormActions';\r\nimport FileUpload from '../ultils/FileUpload';\r\nimport './createPostForm.scss';\r\nimport 'react-autocomplete-input/dist/bundle.css';\r\nimport { getAllTags, getUserTag } from '../../actions/tag_actions';\r\nimport { clearProduct, createPost  } from '../../actions/product_actions';\r\nimport SearchLocationInput from '../SearchLocationInput/SearchLocationInput'\r\nimport { startSession } from 'mongoose';\r\nimport moment from 'moment';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Dialog } from '@material-ui/core';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nclass UserDashboard extends Component {\r\n\r\n    state={\r\n        inputValue : \"\",\r\n        formError: false,\r\n        formSuccess: false,\r\n        formData:{\r\n            description: {\r\n                element: 'description',\r\n                value: '',\r\n                config: {\r\n                    placeholder: 'Nói gì đó về bài viết này.....',\r\n                    label: 'Mô tả',\r\n                    name: 'description',\r\n                    options: [],\r\n                },\r\n                validation: {\r\n                    required: false,\r\n                },\r\n                valid: true,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false\r\n            },\r\n            userTag: {\r\n                element: 'userTag',\r\n                value: '',\r\n                config: {\r\n                    placeholder: 'Gắn thẻ bạn bè',\r\n                    label: 'Gắn thẻ',\r\n                    name: 'userTag',\r\n                    options: [],\r\n                },\r\n                validation: {\r\n                    required: false,\r\n                },\r\n                valid: true,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false\r\n            },\r\n            locationInput: {\r\n                element: 'locationInput',\r\n                value: '',\r\n                config: {\r\n                    placeholder: 'Thêm vị trí',\r\n                    label: 'Vị trí',\r\n                    name: 'location',\r\n                    options: [],\r\n                },\r\n                validation: {\r\n                    required: false,\r\n                },\r\n                valid: true,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false\r\n            },\r\n            images: {\r\n                element: 'select',\r\n                value: [],\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false\r\n            }\r\n        },\r\n\r\n        setfollowerDiaglog: false,\r\n        alertFunctionIsRestricted: false,\r\n\r\n        restrictedFunction: {}\r\n    } \r\n    \r\n    updateFields = (newFormData) => {\r\n        this.setState({\r\n            formData: newFormData\r\n        })\r\n    }\r\n\r\n    updateDescription = (newFormdata) =>{\r\n        this.setState((prevState) => ({ formError: false, formData: newFormdata }));\r\n    }\r\n    \r\n    updateForm = (element) => {\r\n        const newFormdata = update(element, this.state.formData, 'posts');\r\n        console.log(newFormdata);\r\n        this.updateDescription(newFormdata)\r\n    }\r\n\r\n    updateFields = (newFormData) => {\r\n        this.setState({\r\n            formData: newFormData\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        const formData = this.state.formData;\r\n        //Gọi API lấy danh sách thẻ\r\n        this.props.dispatch(getAllTags())\r\n        .then(response => {\r\n            const newFormData = populateOptionFields(formData, this.props.tags.allTags, 'description')\r\n            this.updateFields(newFormData)\r\n        })\r\n        this.props.dispatch(getUserTag())\r\n        .then(response => {\r\n            const newFormData = populateOptionFields(formData, this.props.tags.userTags, 'userTag')\r\n            this.updateFields(newFormData)\r\n        })\r\n    }\r\n\r\n    imagesHandler = (images) => {\r\n        const newFormData = {\r\n            ...this.state.formData\r\n        }\r\n        newFormData['images'].value = images;\r\n\r\n        images.length ?\r\n        newFormData['images'].valid = true\r\n        : newFormData['images'].valid = false\r\n\r\n        this.setState({\r\n            formData: newFormData\r\n        })\r\n\r\n        console.log(this.state.formData);\r\n    }\r\n\r\n    emojiToggle = () => {\r\n        this.setState({ emojiPicker: !this.state.emojiPicker});\r\n    }\r\n\r\n    onEmojiClick = (event, emojiObject) => {\r\n        this.setState({ emojiObject: emojiObject});\r\n    }\r\n\r\n    findHashtags(Text) {\r\n        var regexp = /\\B\\#\\w\\w+\\b/g\r\n        let result = Text.match(regexp);\r\n        \r\n        if (result) {\r\n            let tags = []; \r\n            result.forEach((item) => {\r\n                tags.push(item.slice(1));\r\n            })\r\n            return (tags);\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    findUserTag(Text) {\r\n        var regexp = /\\B\\@\\w\\w+\\b/g\r\n        let result = Text.match(regexp);\r\n       \r\n        if (result) {\r\n            let userTag = []\r\n            result.forEach((item) => {\r\n                userTag.push(item.slice(1));\r\n            })\r\n            return (userTag);\r\n        } else {\r\n            return [];\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    submitForm = (event) => {\r\n\r\n        event.preventDefault();\r\n        this.state.formData.locationInput.value = document.getElementById('input_value').value\r\n        let data = generateData(this.state.formData, 'posts');\r\n        let formIsValid = ifFormValid(this.state.formData, 'posts');\r\n\r\n        let dataToSubmit = {...data}\r\n        dataToSubmit.tags = this.findHashtags(data.description);\r\n        dataToSubmit.userTag = this.findUserTag(data.userTag);\r\n        console.log(dataToSubmit);\r\n        if (formIsValid) {\r\n            console.log(dataToSubmit);\r\n            this.props.dispatch(createPost(dataToSubmit)).then((response) => {\r\n                if(response.payload.restricted){\r\n                    console.log(response.payload);\r\n                    this.setState({alertFunctionIsRestricted: true, restrictedFunction: response.payload.restrictedFunction})\r\n                }else{\r\n                    console.log(this.props.products);\r\n                    if (this.props.products.addProduct.success) {\r\n                        this.props.history.push('/newfeed')\r\n                    } else {\r\n                        this.setState({ formError: true })\r\n                    }\r\n                }\r\n            })\r\n        }else {\r\n            this.setState({\r\n                formError: true\r\n            })\r\n        }\r\n    }\r\n\r\n    resetFieldHandler = () => {\r\n        \r\n        const newFormData = resetFields(this.state.formData, 'posts');\r\n        this.setState({\r\n            formSuccess: true\r\n        });\r\n        setTimeout(() => {\r\n            this.setState({\r\n                formSuccess: false\r\n            }, () => { this.props.dispatch(clearProduct()) })\r\n        }, 3000)\r\n    }\r\n\r\n    render(){\r\n        const props = this.props;\r\n        return (\r\n            <Layout>\r\n                <div className=\"create_post\">\r\n                    <form class=\"create_post_form\">\r\n                        <div className=\"row no-gutters\">\r\n                            <div className='col-xl-12 col-sm-12 col-12 no-gutters'>\r\n                                <div className=\"user_info\">\r\n                                    <img className=\"avatar\" src={props.user.userData.avt}/>\r\n                                    <h5 className=\"userName\">{props.user.userData.userName}</h5>\r\n                                </div>\r\n                                <FormField\r\n                                    id={'description'}\r\n                                    change={(element) => this.updateForm(element)}\r\n                                    formData={this.state.formData.description}\r\n                                />\r\n                                <div className=\"field_container\">\r\n                                <FormField\r\n                                    id={'userTag'}\r\n                                    change={(element) => this.updateForm(element)}\r\n                                    formData={this.state.formData.userTag}\r\n                                />\r\n                                <SearchLocationInput></SearchLocationInput>\r\n                                </div>\r\n                                <FileUpload\r\n                                    imagesHandler={(images) => this.imagesHandler(images)}\r\n                                    reset={this.state.formSuccess}\r\n                                />\r\n                                <button className='create_button' onClick={(event) => { this.submitForm(event) }}>Đăng bài</button>\r\n                                {\r\n                                    this.state.formError ?\r\n                                    <p>Hãy thêm ảnh để đăng bài nhé :( </p>\r\n                                    : <p></p>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                   </form>\r\n                </div>\r\n                <Dialog className=\"dialog_cont\" \r\n                    onClose={() => { this.setState({ alertFunctionIsRestricted: false })}} \r\n                    open={this.state.alertFunctionIsRestricted} >\r\n                    <div className=\"dialog_header\">\r\n                        <h5>Bạn đã bị hạn chế chức năng này cho đến {moment(this.state.restrictedFunction.amountOfTime).format(\"L\")}</h5>\r\n                    </div>\r\n                </Dialog>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.user,\r\n        tags: state.tags,\r\n        products: state.products,\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(withRouter(UserDashboard));"]},"metadata":{},"sourceType":"module"}