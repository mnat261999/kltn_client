{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kltn\\\\test\\\\social-media\\\\client\\\\src\\\\components\\\\ultils\\\\FileUpload.js\";\nimport React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport faImages from '@fortawesome/fontawesome-free-solid/faImages';\nimport faTimesCircle from '@fortawesome/fontawesome-free-solid/faTimesCircle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FileUpload extends Component {\n  constructor() {\n    super();\n\n    this.updateImageList = image => {\n      console.log(image);\n      this.setState({\n        uploadedImages: [...this.state.uploadedImages, image]\n      }, () => {\n        this.props.imagesHandler(this.state.uploadedImages);\n      });\n    };\n\n    this.onDrop = async files => {\n      console.log('files', files);\n      this.setState({\n        uploading: true\n      });\n      let formData = new FormData();\n      const config = {\n        header: {\n          'content-type': 'multipart/form-data'\n        }\n      };\n      formData.append(\"file\", files[0]);\n      this.setState({\n        uploading: false,\n        uploadedFiles: [...this.state.uploadedFiles, URL.createObjectURL(files[0])]\n      });\n      this.readFile(files[0], image => this.updateImageList(image));\n    };\n\n    this.onRemove = id => {\n      this.setState({\n        uploading: true\n      });\n      axios.get(`/api/users/removeimage?public_id=${id}`).then(response => {\n        let images = this.state.uploadedFiles.filter(item => {\n          return item.public_id !== id;\n        });\n        this.setState({\n          uploading: false,\n          uploadedFiles: images\n        }, () => {\n          this.props.imagesHandler(images);\n        });\n      });\n    };\n\n    this.showUploadImages = () => this.state.uploadedFiles.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropzone_UploadedImg_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"delete_image_icon\",\n        onClick: () => this.onRemove(item.public_id),\n        icon: faTimesCircle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploaded_img\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"uploaded_img\",\n          src: item,\n          alt: \"photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this));\n\n    this.state = {\n      uploadedFiles: [],\n      uploadedImages: [],\n      uploading: false,\n      imageTest: \"\"\n    };\n  }\n\n  readFile(file, callback) {\n    var reader = new FileReader();\n    var baseString;\n\n    reader.onloadend = function () {\n      baseString = reader.result;\n      callback(baseString);\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  static getDirevedStateFromProps(props, state) {\n    if (props.reset) {\n      return state = {\n        uploadedFiles: []\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropzone clear\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropzone_wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(Dropzone, {\n          onDrop: e => this.onDrop(e),\n          multiple: false,\n          children: _ref => {\n            let {\n              getRootProps,\n              getInputProps\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(\"section\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps(),\n                className: \"dropzone_container\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps,\n                  className: \"dropzone_Add_button\",\n                  children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faImages\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 21\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this), this.state.uploading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"process_bar\",\n          children: /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploaded_image_display\",\n        children: this.showUploadImages()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default FileUpload;","map":{"version":3,"names":["React","Component","Dropzone","axios","FontAwesomeIcon","faImages","faTimesCircle","CircularProgress","LinearProgress","FileUpload","constructor","updateImageList","image","console","log","setState","uploadedImages","state","props","imagesHandler","onDrop","files","uploading","formData","FormData","config","header","append","uploadedFiles","URL","createObjectURL","readFile","onRemove","id","get","then","response","images","filter","item","public_id","showUploadImages","map","index","imageTest","file","callback","reader","FileReader","baseString","onloadend","result","readAsDataURL","getDirevedStateFromProps","reset","render","e","getRootProps","getInputProps"],"sources":["D:/Kltn/test/social-media/client/src/components/ultils/FileUpload.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport axios from 'axios';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport faImages from '@fortawesome/fontawesome-free-solid/faImages';\r\nimport faTimesCircle from '@fortawesome/fontawesome-free-solid/faTimesCircle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nclass FileUpload extends Component {\r\n    \r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            uploadedFiles:[],\r\n            uploadedImages: [],\r\n            uploading: false,\r\n            imageTest: \"\",   \r\n        }\r\n    }\r\n\r\n    updateImageList = (image) => {\r\n        console.log(image)\r\n        this.setState({\r\n            uploadedImages: [\r\n                ...this.state.uploadedImages,\r\n                image\r\n            ]\r\n        },()=>{\r\n            this.props.imagesHandler(this.state.uploadedImages)\r\n        })\r\n    }\r\n\r\n    readFile(file, callback) {\r\n        var reader = new FileReader();\r\n        var baseString;\r\n        reader.onloadend = function () {\r\n            baseString = reader.result;\r\n            callback(baseString);\r\n        };\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n    onDrop = async (files) =>{\r\n        console.log('files',files)\r\n        this.setState({uploading: true});\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: {'content-type':'multipart/form-data'}\r\n        }\r\n        formData.append(\"file\",files[0]);\r\n        this.setState({\r\n            uploading: false,\r\n            uploadedFiles: [\r\n                ...this.state.uploadedFiles,\r\n                URL.createObjectURL(files[0])\r\n            ]\r\n        })\r\n        \r\n        this.readFile(files[0],(image)=>this.updateImageList(image))\r\n    }\r\n\r\n    onRemove = (id) =>{\r\n        this.setState({ uploading: true });\r\n        axios.get(`/api/users/removeimage?public_id=${id}`)\r\n        .then(response =>{\r\n            let images = this.state.uploadedFiles.filter(item => {\r\n                return item.public_id !== id;\r\n            });\r\n            this.setState({\r\n                uploading: false,\r\n                uploadedFiles: images\r\n            },()=>{\r\n                this.props.imagesHandler(images)\r\n            })\r\n        })\r\n    }\r\n\r\n    showUploadImages = () => (\r\n        this.state.uploadedFiles.map((item,index) => (\r\n            <div className='dropzone_UploadedImg_wrapper'\r\n                key={index} >\r\n                <FontAwesomeIcon className=\"delete_image_icon\" onClick={() => this.onRemove(item.public_id)}\r\n                    icon={faTimesCircle} />\r\n                <div className='uploaded_img'>\r\n                    <img className=\"uploaded_img\" src={item} alt=\"photo\"/>\r\n                </div>\r\n            </div>\r\n        ))\r\n    )\r\n\r\n    static getDirevedStateFromProps(props,state){\r\n        if(props.reset){\r\n            return state = { uploadedFiles: []}\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='dropzone clear'>\r\n            <div className=\"dropzone_wrapper\">\r\n            \r\n                <Dropzone \r\n                onDrop={(e) => this.onDrop(e)}\r\n                multiple={false}>\r\n                    {({ getRootProps, getInputProps }) => (\r\n                    <section>\r\n                        <div {...getRootProps()} className=\"dropzone_container\">\r\n                            <input {...getInputProps()} />\r\n                            <div {...getRootProps} className='dropzone_Add_button'>\r\n                                <FontAwesomeIcon\r\n                                    icon={faImages} />\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                )}\r\n                </Dropzone>\r\n                {\r\n                this.state.uploading ?\r\n                    <div className='process_bar'>\r\n                        <LinearProgress />\r\n                    </div>\r\n                : null\r\n                }\r\n           \r\n            </div>\r\n                <div className=\"uploaded_image_display\">\r\n                {\r\n                    this.showUploadImages()\r\n                } \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FileUpload;"],"mappings":"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"},"metadata":{},"sourceType":"module"}