{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kltn\\\\test\\\\social-media\\\\client\\\\src\\\\components\\\\Message\\\\group.js\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport Layout from \"../../hoc/layout\";\nimport { connect } from \"react-redux\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport Portal from \"@material-ui/core/Portal\";\nimport { getMessage, getConversation, sendMessage, seenMessage, sendimg } from \"../../../src/actions/message_action\";\nimport \"./Message.scss\";\nimport { update, generateData } from \"../ultils/Form/FormActions\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Settings, Dots, Heart, Pencil, Search, Photo, Sticker, Send, Ghost, Edit, Circle, CircleCheck, User, Users, Point } from \"tabler-icons-react\";\nimport SearchBar from \"./SearchBar/index\";\nimport Pusher from \"pusher-js\";\nimport { Button, Dialog, LinearProgress, Checkbox, Avatar } from \"@material-ui/core\";\nimport { AvatarGroup } from \"@material-ui/lab\";\nimport moment from \"moment\";\n\nclass Group extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message_box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, this.props.messages ? this.props.messages.grouplist ? this.props.messages.grouplist.map(con => {\n      return con.disabledBy.includes(this.props.yourProfile._id) ? \"\" : /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => {\n          this.props.seenGroupMess(con._id);\n          console.log(\"clicked\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        className: \"link\",\n        to: `/message/inbox/${con._id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: con.seenBy.includes(this.props.yourProfile._id) ? \"row no-gutters message_contain\" : \"row no-gutters message_contain unseen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-xl-2 col-lg-3 col-md-3 col-sm-3 col-12 avt\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 27\n        }\n      }, con.type == \"personal\" ? con.user.map(users => {\n        return users._id == this.props.yourProfile._id ? \"\" : /*#__PURE__*/React.createElement(\"div\", {\n          className: \"avatar-circle-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 35\n          }\n        }, \" \", /*#__PURE__*/React.createElement(\"img\", {\n          src: users.avt,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 37\n          }\n        }));\n      }) : con.groupimg ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"avatar-circle-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 31\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"img\", {\n        src: con.groupimg,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 33\n        }\n      })) : /*#__PURE__*/React.createElement(\"div\", {\n        class: \"avatar-circle-group avatar-circle-group-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 31\n        }\n      }, con.user.slice(0, 1).map(users => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          class: \"avatar avatar-md avatar-1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 39\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: users.avt,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 41\n          }\n        })));\n      }), con.user.slice(1, 2).map(users => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          class: \"avatar avatar-md avatar-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 39\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: users.avt,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 41\n          }\n        })));\n      }), con.user.slice(2, 3).map(users => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          class: \"avatar avatar-md avatar-3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 39\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: users.avt,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 41\n          }\n        })));\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-xl-10 col-lg-9 col-md-9 col-sm-9 col-12 message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 27\n        }\n      }, con.type == \"personal\" ? con.user.map(users => {\n        return users._id == this.props.yourProfile._id ? \"\" : /*#__PURE__*/React.createElement(\"div\", {\n          className: \"titlegroup\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 37\n          }\n        }, users.userName), /*#__PURE__*/React.createElement(Point, {\n          className: \"seen_dot\",\n          visibility: con.seenBy.includes(this.props.yourProfile._id) ? \"hidden\" : \"\",\n          size: 28,\n          strokeWidth: 0,\n          fill: \"#0070F2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 37\n          }\n        }));\n      }) : con.title ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"titlegroup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 33\n        }\n      }, con.title), /*#__PURE__*/React.createElement(Point, {\n        className: \"seen_dot\",\n        visibility: con.seenBy.includes(this.props.yourProfile._id) ? \"hidden\" : \"\",\n        size: 28,\n        strokeWidth: 0,\n        fill: \"#0070F2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 33\n        }\n      })) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"titlegroup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 33\n        }\n      }, con.user.slice(0, 3).map(users => {\n        return users.userName;\n      }), \",...\"), /*#__PURE__*/React.createElement(Point, {\n        className: \"seen_dot\",\n        visibility: con.seenBy.includes(this.props.yourProfile._id) ? \"hidden\" : \"\",\n        size: 24,\n        strokeWidth: 0,\n        fill: \"#0070F2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 29\n        }\n      }, \" \", con.lastMess ? con.lastMess.type == \"event\" ? \"\" : con.lastMess.sentBy._id == this.props.yourProfile._id ? \"Bạn: \" : con.lastMess.sentBy.userName + \": \" : \"\", con.lastMess ? con.lastMess.type == \"img\" ? \"Đã gửi một hình ảnh\" : con.lastMess.type == \"sticker\" ? \"Đã gửi một nhãn dán\" : con.lastMess.type == \"replyWithReaction\" ? \"Đã phản hồi câu chuyện\" : con.lastMess.content : \"\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 29\n        }\n      }, moment(con.lastMess ? con.lastMess.createdAt : \"\").fromNow(), \" \")))));\n    }) : \"\" : \"\");\n  }\n\n}\n\nexport default Group;","map":{"version":3,"sources":["D:/Kltn/test/social-media/client/src/components/Message/group.js"],"names":["React","Component","useEffect","useState","Layout","connect","Skeleton","Portal","getMessage","getConversation","sendMessage","seenMessage","sendimg","update","generateData","Link","withRouter","Settings","Dots","Heart","Pencil","Search","Photo","Sticker","Send","Ghost","Edit","Circle","CircleCheck","User","Users","Point","SearchBar","Pusher","Button","Dialog","LinearProgress","Checkbox","Avatar","AvatarGroup","moment","Group","render","props","messages","grouplist","map","con","disabledBy","includes","yourProfile","_id","seenGroupMess","console","log","seenBy","type","user","users","avt","groupimg","slice","userName","title","lastMess","sentBy","content","createdAt","fromNow"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\r\nimport Layout from \"../../hoc/layout\";\r\nimport { connect } from \"react-redux\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport Portal from \"@material-ui/core/Portal\";\r\nimport {\r\n  getMessage,\r\n  getConversation,\r\n  sendMessage,\r\n  seenMessage,\r\n  sendimg,\r\n} from \"../../../src/actions/message_action\";\r\nimport \"./Message.scss\";\r\nimport { update, generateData } from \"../ultils/Form/FormActions\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport {\r\n  Settings,\r\n  Dots,\r\n  Heart,\r\n  Pencil,\r\n  Search,\r\n  Photo,\r\n  Sticker,\r\n  Send,\r\n  Ghost,\r\n  Edit,\r\n  Circle,\r\n  CircleCheck,\r\n  User,\r\n  Users,\r\n  Point,\r\n} from \"tabler-icons-react\";\r\nimport SearchBar from \"./SearchBar/index\";\r\nimport Pusher from \"pusher-js\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  LinearProgress,\r\n  Checkbox,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport { AvatarGroup } from \"@material-ui/lab\";\r\n\r\nimport moment from \"moment\";\r\n\r\nclass Group extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"message_box\">\r\n        {this.props.messages\r\n          ? this.props.messages.grouplist\r\n            ? this.props.messages.grouplist.map((con) => {\r\n                return con.disabledBy.includes(this.props.yourProfile._id) ? (\r\n                  \"\"\r\n                ) : (\r\n                  <div\r\n                    onClick={() => {\r\n                      this.props.seenGroupMess(con._id);\r\n                      console.log(\"clicked\");\r\n                    }}\r\n                  >\r\n                    {\r\n                      <Link className=\"link\" to={`/message/inbox/${con._id}`}>\r\n                        <div\r\n                          className={\r\n                            con.seenBy.includes(this.props.yourProfile._id)\r\n                              ? \"row no-gutters message_contain\"\r\n                              : \"row no-gutters message_contain unseen\"\r\n                          }\r\n                        >\r\n                          <div className=\"col-xl-2 col-lg-3 col-md-3 col-sm-3 col-12 avt\">\r\n                            {con.type == \"personal\" ? (\r\n                              con.user.map((users) => {\r\n                                return users._id ==\r\n                                  this.props.yourProfile._id ? (\r\n                                  \"\"\r\n                                ) : (\r\n                                  <div className=\"avatar-circle-group\">\r\n                                    {\" \"}\r\n                                    <img src={users.avt}></img>\r\n                                  </div>\r\n                                );\r\n                              })\r\n                            ) : con.groupimg ? (\r\n                              <div className=\"avatar-circle-group\">\r\n                                {\" \"}\r\n                                <img src={con.groupimg}></img>\r\n                              </div>\r\n                            ) : (\r\n                              <div class=\"avatar-circle-group avatar-circle-group-3\">\r\n                                {con.user.slice(0, 1).map((users) => {\r\n                                  return (\r\n                                    <div>\r\n                                      <div class=\"avatar avatar-md avatar-1\">\r\n                                        <img src={users.avt} />\r\n                                      </div>\r\n                                    </div>\r\n                                  );\r\n                                })}\r\n                                {con.user.slice(1, 2).map((users) => {\r\n                                  return (\r\n                                    <div>\r\n                                      <div class=\"avatar avatar-md avatar-2\">\r\n                                        <img src={users.avt} />\r\n                                      </div>\r\n                                    </div>\r\n                                  );\r\n                                })}\r\n                                {con.user.slice(2, 3).map((users) => {\r\n                                  return (\r\n                                    <div>\r\n                                      <div class=\"avatar avatar-md avatar-3\">\r\n                                        <img src={users.avt} />\r\n                                      </div>\r\n                                    </div>\r\n                                  );\r\n                                })}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"col-xl-10 col-lg-9 col-md-9 col-sm-9 col-12 message\">\r\n                            {con.type == \"personal\" ? (\r\n                              con.user.map((users) => {\r\n                                return users._id ==\r\n                                  this.props.yourProfile._id ? (\r\n                                  \"\"\r\n                                ) : (\r\n                                  <div className=\"titlegroup\">\r\n                                    <h2>{users.userName}</h2>\r\n                                    <Point\r\n                                      className=\"seen_dot\"\r\n                                      visibility={\r\n                                        con.seenBy.includes(\r\n                                          this.props.yourProfile._id\r\n                                        )\r\n                                          ? \"hidden\"\r\n                                          : \"\"\r\n                                      }\r\n                                      size={28}\r\n                                      strokeWidth={0}\r\n                                      fill=\"#0070F2\"\r\n                                    ></Point>\r\n                                  </div>\r\n                                );\r\n                              })\r\n                            ) : con.title ? (\r\n                              <div className=\"titlegroup\">\r\n                                <h2>{con.title}</h2>\r\n                                <Point\r\n                                  className=\"seen_dot\"\r\n                                  visibility={\r\n                                    con.seenBy.includes(\r\n                                      this.props.yourProfile._id\r\n                                    )\r\n                                      ? \"hidden\"\r\n                                      : \"\"\r\n                                  }\r\n                                  size={28}\r\n                                  strokeWidth={0}\r\n                                  fill=\"#0070F2\"\r\n                                ></Point>\r\n                              </div>\r\n                            ) : (\r\n                              <div className=\"titlegroup\">\r\n                                <h2>\r\n                                  {con.user.slice(0, 3).map((users) => {\r\n                                    return users.userName;\r\n                                  })}\r\n                                  ,...\r\n                                </h2>\r\n                                <Point\r\n                                  className=\"seen_dot\"\r\n                                  visibility={\r\n                                    con.seenBy.includes(\r\n                                      this.props.yourProfile._id\r\n                                    )\r\n                                      ? \"hidden\"\r\n                                      : \"\"\r\n                                  }\r\n                                  size={24}\r\n                                  strokeWidth={0}\r\n                                  fill=\"#0070F2\"\r\n                                ></Point>\r\n                              </div>\r\n                            )}\r\n                            {/* <div className=\"col-xl-3 col-sm-3 col-3  info\">\r\n                                                                                    <h6><Point visibility=\"hidden\" size={24} strokeWidth={0} fill=\"#0070F2\"></Point></h6>\r\n                                                                                \r\n                                                                                    \r\n                                                                                   \r\n                                                                                </div> */}\r\n\r\n                            <h6>\r\n                              {\" \"}\r\n                              {con.lastMess\r\n                                ? con.lastMess.type == \"event\"\r\n                                  ? \"\"\r\n                                  : con.lastMess.sentBy._id ==\r\n                                    this.props.yourProfile._id\r\n                                  ? \"Bạn: \"\r\n                                  : con.lastMess.sentBy.userName + \": \"\r\n                                : \"\"}\r\n                              {con.lastMess\r\n                                ? con.lastMess.type == \"img\"\r\n                                  ? \"Đã gửi một hình ảnh\"\r\n                                  : con.lastMess.type == \"sticker\"\r\n                                  ? \"Đã gửi một nhãn dán\"\r\n                                  : con.lastMess.type == \"replyWithReaction\"\r\n                                  ? \"Đã phản hồi câu chuyện\"\r\n                                  : con.lastMess.content\r\n                                : \"\"}\r\n                            </h6>\r\n                            <h5>\r\n                              {moment(\r\n                                con.lastMess ? con.lastMess.createdAt : \"\"\r\n                              ).fromNow()}{\" \"}\r\n                            </h5>\r\n                          </div>\r\n                        </div>\r\n                      </Link>\r\n                    }\r\n                  </div>\r\n                );\r\n              })\r\n            : \"\"\r\n          : \"\"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Group;\r\n"]},"metadata":{},"sourceType":"module"}