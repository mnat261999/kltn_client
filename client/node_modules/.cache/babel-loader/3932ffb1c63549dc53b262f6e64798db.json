{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kltn\\\\test\\\\social-media\\\\client\\\\src\\\\components\\\\Admin\\\\Account\\\\EditAccount\\\\index.js\";\nimport React, { Component, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Switch from 'react-ios-switch';\nimport FormField from '../../../ultils/Form/FormField';\nimport './profilesetting.scss';\nimport { update, generateData, ifFormValid, resetFields } from '../../../ultils/Form/FormActions';\nimport { User, Lock } from 'tabler-icons-react';\nimport { updateprofileimgfile, updateprofileimg, changeProfile, updateprofile, auth, changePassword } from '../../../../actions/user_action';\nimport { withRouter } from 'react-router-dom';\nimport { Button, CircularProgress, Snackbar } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Layout from '../../Layout/index';\n\nclass EditAccount extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      privateMode: false,\n      inputValue: \"\",\n      settingState: 'profile',\n      edited: false,\n      formError: false,\n      formSuccess: false,\n      loading: false,\n      setSnack: false,\n      severity: \"\",\n      message: \"\",\n      formData: {\n        email: {\n          element: 'input',\n          value: '',\n          config: {\n            placeholder: 'Email của bạn',\n            label: 'Email',\n            name: 'email',\n            options: []\n          },\n          validation: {\n            required: true,\n            email: true\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        },\n        name: {\n          element: 'input',\n          value: '',\n          config: {\n            placeholder: 'Tên của bạn',\n            label: 'Tên',\n            name: 'name',\n            options: []\n          },\n          validation: {\n            required: false\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        },\n        bio: {\n          element: 'textarea',\n          value: '',\n          config: {\n            placeholder: 'Mô tả về bản thân bạn',\n            label: 'Tiểu sử',\n            name: 'bio',\n            options: []\n          },\n          validation: {\n            required: false\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        },\n        userName: {\n          element: 'input',\n          value: '',\n          config: {\n            placeholder: 'Tên tài khoản',\n            label: 'Tên tài khoản',\n            name: 'userName',\n            options: []\n          },\n          validation: {\n            required: false\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        }\n      },\n      passwordData: {\n        currentPassword: {\n          element: 'password',\n          config: {\n            label: 'Mật khẩu',\n            name: 'password_input',\n            type: 'password',\n            placeholder: 'Mật khẩu hiện tại'\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        },\n        password: {\n          element: 'input',\n          config: {\n            label: 'Mật khẩu mới',\n            name: 'password_input',\n            type: 'password',\n            placeholder: 'Mật khẩu mới'\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        },\n        confirmPassword: {\n          element: 'input',\n          value: '',\n          config: {\n            label: 'Nhập lại mật khẩu',\n            name: 'confirm_password_input',\n            type: 'password',\n            placeholder: 'Nhập lại mật khẩu'\n          },\n          validation: {\n            required: true,\n            confirm: 'password'\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        }\n      }\n    };\n\n    this.changePassword = event => {\n      event.preventDefault();\n      let dataToSubmit = generateData(this.state.passwordData, 'change_password');\n      let formIsValid = ifFormValid(this.state.passwordData, 'change_password');\n\n      if (formIsValid) {\n        console.log(dataToSubmit);\n        this.props.dispatch(changePassword(dataToSubmit)).then(response => {\n          console.log(response);\n\n          if (response.payload.success) {\n            this.setState({\n              setSnack: true,\n              severity: \"success\",\n              message: \"Thành công\" //formMessage: response.payload.message\n\n            }, () => {\n              resetFields(this.state.passwordData);\n            });\n          } else {\n            this.setState({\n              formError: true,\n              formMessage: response.payload.message\n            });\n          }\n\n          this.props.dispatch(auth());\n        });\n      } else {\n        this.setState({\n          formError: true,\n          formMessage: \"Vui lòng kiểm tra lại thông tin!\"\n        });\n      }\n    };\n\n    this.updatePasswordForm = element => {\n      const newFormdata = update(element, this.state.passwordData, 'update_password');\n      this.setState({\n        formError: false,\n        passwordData: newFormdata\n      });\n    };\n\n    this.updateFields = newFormData => {\n      this.setState({\n        formData: newFormData\n      });\n    };\n\n    this.submitForm = event => {\n      this.setState({\n        loading: true\n      });\n      event.preventDefault();\n      this.state.formData.privateMode = this.state.privateMode;\n      let dataToSubmit = generateData(this.state.formData, 'update_pro');\n      this.props.dispatch(changeProfile(this.props.user.userData._id, dataToSubmit)).then(response => {\n        console.log(response);\n        this.props.dispatch(auth());\n        this.setState({\n          loading: false,\n          setSnack: true,\n          severity: \"success\",\n          message: \"Thành công\"\n        });\n      });\n    };\n\n    this.updateForm = element => {\n      const newFormdata = update(element, this.state.formData, 'update_pro');\n      this.setState({\n        formError: false,\n        formData: newFormdata\n      });\n      this.setState({\n        edited: true\n      });\n    };\n\n    this.onFileChange = async event => {\n      this.setState({\n        loading: true\n      });\n      await this.props.dispatch(updateprofileimgfile(event.target.files[0]));\n      await this.props.dispatch(updateprofileimg(this.props.user.img ? this.props.user.img.url : 0));\n      await this.props.dispatch(auth()); // await Headers.props.dispatch(updateprofileimg(this.props.user.img ? this.props.user.img.url : 0));\n\n      await this.setState({\n        loading: false,\n        setSnack: true,\n        severity: \"success\",\n        message: \"Thành công\"\n      });\n      return /*#__PURE__*/React.createElement(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }\n      });\n    };\n\n    this.handleSetting = type => {\n      this.setState({\n        settingState: type\n      });\n    };\n  }\n\n  reset() {\n    this.setState({\n      edited: false,\n      loading: false,\n      setSnack: false,\n      formError: false,\n      formMessage: \"\"\n    });\n  }\n\n  getUserForm() {\n    this.state.formData.bio.value = this.props.user.userData.bio;\n    this.state.formData.userName.value = this.props.user.userData.userName;\n    this.state.formData.name.value = this.props.user.userData.name;\n    this.state.formData.email.value = this.props.user.userData.email;\n    const formData = this.state.formData;\n    this.setState({\n      edited: false\n    });\n    this.updateFields(formData);\n  }\n\n  componentDidMount() {\n    this.getUserForm();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Layout, {\n      page: \"account\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editAccount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page_title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 25\n      }\n    }, \"C\\xE0i \\u0111\\u1EB7t t\\xE0i kho\\u1EA3n\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(User, {\n      size: 24,\n      strokeWidth: 2,\n      color: 'white',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 29\n      }\n    }, \"Personal Infomation\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row  no-gutters \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"col-xl-12 no-gutters setting_detail\",\n      onSubmit: event => this.submitForm(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row  no-gutters  setting_type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 no-gutters label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 33\n      }\n    }, this.state.loading ? /*#__PURE__*/React.createElement(\"div\", {\n      class: \"overlay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      style: {\n        color: '#5477D5'\n      },\n      thickness: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 58\n      }\n    })) : '', /*#__PURE__*/React.createElement(\"img\", {\n      src: this.props.user.userData.avt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-10 col-lg-10 col-md-10 col-sm-10 col-10 field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 45\n      }\n    }, this.props.user.userData.userName), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-file-upload\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.onFileChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 49\n      }\n    }, \"Ch\\u1EC9nh s\\u1EEDa \\u1EA3nh \\u0111\\u1EA1i di\\u1EC7n\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row  no-gutters  setting_type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-2 col-lg-2 col-md-2 no-gutters  label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 45\n      }\n    }, \"T\\xEAn t\\xE0i kho\\u1EA3n\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-10 col-lg-10 col-md-10 field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormField, {\n      id: 'userName',\n      formData: this.state.formData.userName,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row  no-gutters  setting_type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-2 col-lg-2 col-md-2 no-gutters label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 45\n      }\n    }, \"T\\xEAn\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-10 col-lg-10 col-md-10 field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormField, {\n      id: 'name',\n      formData: this.state.formData.name,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row  no-gutters  setting_type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-2 col-lg-2 col-md-2 no-gutters label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 45\n      }\n    }, \"Email\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-10 col-lg-10 col-md-10 field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormField, {\n      id: 'email',\n      formData: this.state.formData.email,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row  no-gutters  setting_type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-2 col-lg-2 col-md-2  no-gutters  label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 33\n      }\n    }), this.state.edited ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-10 col-lg-10 col-md-10 field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"send_btn\",\n      onClick: event => {\n        this.submitForm(event);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 49\n      }\n    }, \"G\\u1EEDi\")) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-10 col-lg-10 col-md-10 field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"send_btn disable\",\n      disabled: \"true\",\n      onClick: event => {\n        this.submitForm(event);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 53\n      }\n    }, \"C\\u1EADp nh\\u1EADt\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Lock, {\n      size: 24,\n      strokeWidth: 2,\n      color: 'white',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 29\n      }\n    }, \"Password\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row  no-gutters \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"col-xl-12 no-gutters setting_detail\",\n      onSubmit: event => this.changePassword(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row  no-gutters  setting_type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-2 col-lg-2 col-md-2 no-gutters  label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 37\n      }\n    }, \"M\\u1EADt kh\\u1EA9u\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-10 col-lg-10 col-md-10 field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormField, {\n      id: 'currentPassword',\n      formData: this.state.passwordData.currentPassword //Hàm change nhận vào một element và gọi đến hàm updateForm(element) \n      ,\n      change: element => this.updatePasswordForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row  no-gutters  setting_type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-2 col-lg-2 col-md-2 no-gutters label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 37\n      }\n    }, \"M\\u1EADt kh\\u1EA9u m\\u1EDBi\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-10 col-lg-10 col-md-10 field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormField, {\n      id: 'password',\n      formData: this.state.passwordData.password //Hàm change nhận vào một element và gọi đến hàm updateForm(element) \n      ,\n      change: element => this.updatePasswordForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row  no-gutters  setting_type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-2 col-lg-2 col-md-2 label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 37\n      }\n    }, \"Nh\\u1EADp l\\u1EA1i\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-10 col-lg-10 col-md-10 field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormField, {\n      id: 'confirmPassword',\n      formData: this.state.passwordData.confirmPassword //Hàm change nhận vào một element và gọi đến hàm updateForm(element) \n      ,\n      change: element => this.updatePasswordForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 37\n      }\n    }))), this.state.formError ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row setting_type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-2 col-lg-2 col-md-2 label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-10 col-lg-10 col-md-10 field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 41\n      }\n    }, this.state.formMessage)) : \"\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row  no-gutters  setting_type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-2 col-lg-2 col-md-2 no-gutters label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-10 col-lg-10 col-md-10 field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"send_btn\",\n      onClick: event => {\n        this.changePassword(event);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 41\n      }\n    }, \"C\\u1EADp nh\\u1EADt\")))))), /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      open: this.state.setSnack,\n      onClose: () => this.setState({\n        setSnack: false\n      }),\n      autoHideDuration: 1000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MuiAlert, {\n      elevation: 6,\n      variant: \"filled\",\n      severity: this.state.severity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 21\n      }\n    }, this.state.message)));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps)(withRouter(EditAccount));","map":{"version":3,"sources":["D:/Kltn/test/social-media/client/src/components/Admin/Account/EditAccount/index.js"],"names":["React","Component","useEffect","useState","connect","Switch","FormField","update","generateData","ifFormValid","resetFields","User","Lock","updateprofileimgfile","updateprofileimg","changeProfile","updateprofile","auth","changePassword","withRouter","Button","CircularProgress","Snackbar","MuiAlert","Layout","EditAccount","state","privateMode","inputValue","settingState","edited","formError","formSuccess","loading","setSnack","severity","message","formData","email","element","value","config","placeholder","label","name","options","validation","required","valid","touched","validationMessage","showlabel","bio","userName","passwordData","currentPassword","type","password","confirmPassword","confirm","event","preventDefault","dataToSubmit","formIsValid","console","log","props","dispatch","then","response","payload","success","setState","formMessage","updatePasswordForm","newFormdata","updateFields","newFormData","submitForm","user","userData","_id","updateForm","onFileChange","target","files","img","url","handleSetting","reset","getUserForm","componentDidMount","render","color","avt","vertical","horizontal","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAO,uBAAP;AACA,SAASC,MAAT,EAAiBC,YAAjB,EAA8BC,WAA9B,EAA2CC,WAA3C,QAA+D,kCAA/D;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,oBAA3B;AACA,SAASC,oBAAT,EAA+BC,gBAA/B,EAAiDC,aAAjD,EAAgEC,aAAhE,EAA+EC,IAA/E,EAAqFC,cAArF,QAA2G,iCAA3G;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,EAAiBC,gBAAjB,EAAmCC,QAAnC,QAAmD,mBAAnD;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,WAAN,SAA0BxB,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAChCyB,KADgC,GACxB;AACJC,MAAAA,WAAW,EAAE,KADT;AAEJC,MAAAA,UAAU,EAAE,EAFR;AAGJC,MAAAA,YAAY,EAAE,SAHV;AAIJC,MAAAA,MAAM,EAAE,KAJJ;AAKJC,MAAAA,SAAS,EAAE,KALP;AAMJC,MAAAA,WAAW,EAAE,KANT;AAOJC,MAAAA,OAAO,EAAE,KAPL;AAQJC,MAAAA,QAAQ,EAAE,KARN;AASJC,MAAAA,QAAQ,EAAE,EATN;AAUJC,MAAAA,OAAO,EAAE,EAVL;AAWJC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,KAAK,EAAE;AACHC,UAAAA,OAAO,EAAE,OADN;AAEHC,UAAAA,KAAK,EAAE,EAFJ;AAGHC,UAAAA,MAAM,EAAE;AACJC,YAAAA,WAAW,EAAE,eADT;AAEJC,YAAAA,KAAK,EAAE,OAFH;AAGJC,YAAAA,IAAI,EAAE,OAHF;AAIJC,YAAAA,OAAO,EAAE;AAJL,WAHL;AASHC,UAAAA,UAAU,EAAE;AACRC,YAAAA,QAAQ,EAAE,IADF;AAERT,YAAAA,KAAK,EAAE;AAFC,WATT;AAaHU,UAAAA,KAAK,EAAE,KAbJ;AAcHC,UAAAA,OAAO,EAAE,KAdN;AAeHC,UAAAA,iBAAiB,EAAE,EAfhB;AAgBHC,UAAAA,SAAS,EAAE;AAhBR,SADD;AAmBNP,QAAAA,IAAI,EAAE;AACFL,UAAAA,OAAO,EAAE,OADP;AAEFC,UAAAA,KAAK,EAAE,EAFL;AAGFC,UAAAA,MAAM,EAAE;AACJC,YAAAA,WAAW,EAAE,aADT;AAEJC,YAAAA,KAAK,EAAE,KAFH;AAGJC,YAAAA,IAAI,EAAE,MAHF;AAIJC,YAAAA,OAAO,EAAE;AAJL,WAHN;AASFC,UAAAA,UAAU,EAAE;AACRC,YAAAA,QAAQ,EAAE;AADF,WATV;AAYFC,UAAAA,KAAK,EAAE,KAZL;AAaFC,UAAAA,OAAO,EAAE,KAbP;AAcFC,UAAAA,iBAAiB,EAAE,EAdjB;AAeFC,UAAAA,SAAS,EAAE;AAfT,SAnBA;AAoCNC,QAAAA,GAAG,EAAE;AACDb,UAAAA,OAAO,EAAE,UADR;AAEDC,UAAAA,KAAK,EAAE,EAFN;AAGDC,UAAAA,MAAM,EAAE;AACJC,YAAAA,WAAW,EAAE,uBADT;AAEJC,YAAAA,KAAK,EAAE,SAFH;AAGJC,YAAAA,IAAI,EAAE,KAHF;AAIJC,YAAAA,OAAO,EAAE;AAJL,WAHP;AASDC,UAAAA,UAAU,EAAE;AACRC,YAAAA,QAAQ,EAAE;AADF,WATX;AAYDC,UAAAA,KAAK,EAAE,KAZN;AAaDC,UAAAA,OAAO,EAAE,KAbR;AAcDC,UAAAA,iBAAiB,EAAE,EAdlB;AAeDC,UAAAA,SAAS,EAAE;AAfV,SApCC;AAqDNE,QAAAA,QAAQ,EAAE;AACNd,UAAAA,OAAO,EAAE,OADH;AAENC,UAAAA,KAAK,EAAE,EAFD;AAGNC,UAAAA,MAAM,EAAE;AACJC,YAAAA,WAAW,EAAE,eADT;AAEJC,YAAAA,KAAK,EAAE,eAFH;AAGJC,YAAAA,IAAI,EAAE,UAHF;AAIJC,YAAAA,OAAO,EAAE;AAJL,WAHF;AASNC,UAAAA,UAAU,EAAE;AACRC,YAAAA,QAAQ,EAAE;AADF,WATN;AAYNC,UAAAA,KAAK,EAAE,KAZD;AAaNC,UAAAA,OAAO,EAAE,KAbH;AAcNC,UAAAA,iBAAiB,EAAE,EAdb;AAeNC,UAAAA,SAAS,EAAE;AAfL;AArDJ,OAXN;AAkFJG,MAAAA,YAAY,EAAE;AACVC,QAAAA,eAAe,EAAE;AACbhB,UAAAA,OAAO,EAAE,UADI;AAEbE,UAAAA,MAAM,EAAE;AACJE,YAAAA,KAAK,EAAE,UADH;AAEJC,YAAAA,IAAI,EAAE,gBAFF;AAGJY,YAAAA,IAAI,EAAE,UAHF;AAIJd,YAAAA,WAAW,EAAE;AAJT,WAFK;AAQbI,UAAAA,UAAU,EAAE;AACRC,YAAAA,QAAQ,EAAE;AADF,WARC;AAWbC,UAAAA,KAAK,EAAE,KAXM;AAYbC,UAAAA,OAAO,EAAE,KAZI;AAabC,UAAAA,iBAAiB,EAAE,EAbN;AAcbC,UAAAA,SAAS,EAAE;AAdE,SADP;AAiBVM,QAAAA,QAAQ,EAAE;AACNlB,UAAAA,OAAO,EAAE,OADH;AAENE,UAAAA,MAAM,EAAE;AACJE,YAAAA,KAAK,EAAE,cADH;AAEJC,YAAAA,IAAI,EAAE,gBAFF;AAGJY,YAAAA,IAAI,EAAE,UAHF;AAIJd,YAAAA,WAAW,EAAE;AAJT,WAFF;AAQNI,UAAAA,UAAU,EAAE;AACRC,YAAAA,QAAQ,EAAE;AADF,WARN;AAWNC,UAAAA,KAAK,EAAE,KAXD;AAYNC,UAAAA,OAAO,EAAE,KAZH;AAaNC,UAAAA,iBAAiB,EAAE,EAbb;AAcNC,UAAAA,SAAS,EAAE;AAdL,SAjBA;AAiCVO,QAAAA,eAAe,EAAE;AACbnB,UAAAA,OAAO,EAAE,OADI;AAEbC,UAAAA,KAAK,EAAE,EAFM;AAGbC,UAAAA,MAAM,EAAE;AACJE,YAAAA,KAAK,EAAE,mBADH;AAEJC,YAAAA,IAAI,EAAE,wBAFF;AAGJY,YAAAA,IAAI,EAAE,UAHF;AAIJd,YAAAA,WAAW,EAAE;AAJT,WAHK;AASbI,UAAAA,UAAU,EAAE;AACRC,YAAAA,QAAQ,EAAE,IADF;AAERY,YAAAA,OAAO,EAAE;AAFD,WATC;AAabX,UAAAA,KAAK,EAAE,KAbM;AAcbC,UAAAA,OAAO,EAAE,KAdI;AAebC,UAAAA,iBAAiB,EAAE,EAfN;AAgBbC,UAAAA,SAAS,EAAE;AAhBE;AAjCP;AAlFV,KADwB;;AAAA,SAoJhCjC,cApJgC,GAoJd0C,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACC,cAAN;AAEA,UAAIC,YAAY,GAAGtD,YAAY,CAAC,KAAKkB,KAAL,CAAW4B,YAAZ,EAA0B,iBAA1B,CAA/B;AACA,UAAIS,WAAW,GAAGtD,WAAW,CAAC,KAAKiB,KAAL,CAAW4B,YAAZ,EAA0B,iBAA1B,CAA7B;;AAEA,UAAIS,WAAJ,EAAiB;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AACA,aAAKI,KAAL,CAAWC,QAAX,CAAoBjD,cAAc,CAAC4C,YAAD,CAAlC,EACKM,IADL,CACUC,QAAQ,IAAI;AACdL,UAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;;AACA,cAAIA,QAAQ,CAACC,OAAT,CAAiBC,OAArB,EAA8B;AAC1B,iBAAKC,QAAL,CAAc;AACVtC,cAAAA,QAAQ,EAAE,IADA;AACMC,cAAAA,QAAQ,EAAE,SADhB;AAC2BC,cAAAA,OAAO,EAAE,YADpC,CAEV;;AAFU,aAAd,EAGG,MAAM;AAAE1B,cAAAA,WAAW,CAAC,KAAKgB,KAAL,CAAW4B,YAAZ,CAAX;AAAsC,aAHjD;AAIH,WALD,MAKO;AACH,iBAAKkB,QAAL,CAAc;AACVzC,cAAAA,SAAS,EAAE,IADD;AAEV0C,cAAAA,WAAW,EAAEJ,QAAQ,CAACC,OAAT,CAAiBlC;AAFpB,aAAd;AAIH;;AACD,eAAK8B,KAAL,CAAWC,QAAX,CAAoBlD,IAAI,EAAxB;AACH,SAfL;AAgBH,OAlBD,MAkBO;AACH,aAAKuD,QAAL,CAAc;AACVzC,UAAAA,SAAS,EAAE,IADD;AAEV0C,UAAAA,WAAW,EAAE;AAFH,SAAd;AAIH;AAEJ,KAnL+B;;AAAA,SAqLhCC,kBArLgC,GAqLVnC,OAAD,IAAa;AAC9B,YAAMoC,WAAW,GAAGpE,MAAM,CAACgC,OAAD,EAAU,KAAKb,KAAL,CAAW4B,YAArB,EAAmC,iBAAnC,CAA1B;AACA,WAAKkB,QAAL,CAAc;AACVzC,QAAAA,SAAS,EAAE,KADD;AAEVuB,QAAAA,YAAY,EAAEqB;AAFJ,OAAd;AAIH,KA3L+B;;AAAA,SA4LhCC,YA5LgC,GA4LhBC,WAAD,IAAiB;AAC5B,WAAKL,QAAL,CAAc;AACVnC,QAAAA,QAAQ,EAAEwC;AADA,OAAd;AAIH,KAjM+B;;AAAA,SAkMhCC,UAlMgC,GAkMlBlB,KAAD,IAAW;AACpB,WAAKY,QAAL,CAAc;AAAEvC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA2B,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKnC,KAAL,CAAWW,QAAX,CAAoBV,WAApB,GAAkC,KAAKD,KAAL,CAAWC,WAA7C;AACA,UAAImC,YAAY,GAAGtD,YAAY,CAAC,KAAKkB,KAAL,CAAWW,QAAZ,EAAsB,YAAtB,CAA/B;AACA,WAAK6B,KAAL,CAAWC,QAAX,CAAoBpD,aAAa,CAAC,KAAKmD,KAAL,CAAWa,IAAX,CAAgBC,QAAhB,CAAyBC,GAA1B,EAA+BnB,YAA/B,CAAjC,EACKM,IADL,CACUC,QAAQ,IAAI;AACdL,QAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACA,aAAKH,KAAL,CAAWC,QAAX,CAAoBlD,IAAI,EAAxB;AACA,aAAKuD,QAAL,CAAc;AAAEvC,UAAAA,OAAO,EAAE,KAAX;AAAkBC,UAAAA,QAAQ,EAAE,IAA5B;AAAkCC,UAAAA,QAAQ,EAAE,SAA5C;AAAuDC,UAAAA,OAAO,EAAE;AAAhE,SAAd;AACH,OALL;AAMH,KA7M+B;;AAAA,SA8MhC8C,UA9MgC,GA8MlB3C,OAAD,IAAa;AACtB,YAAMoC,WAAW,GAAGpE,MAAM,CAACgC,OAAD,EAAU,KAAKb,KAAL,CAAWW,QAArB,EAA+B,YAA/B,CAA1B;AACA,WAAKmC,QAAL,CAAc;AACVzC,QAAAA,SAAS,EAAE,KADD;AAEVM,QAAAA,QAAQ,EAAEsC;AAFA,OAAd;AAIA,WAAKH,QAAL,CAAc;AAAE1C,QAAAA,MAAM,EAAE;AAAV,OAAd;AACH,KArN+B;;AAAA,SAsNhCqD,YAtNgC,GAsNjB,MAAOvB,KAAP,IAAiB;AAC5B,WAAKY,QAAL,CAAc;AAAEvC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,YAAM,KAAKiC,KAAL,CAAWC,QAAX,CAAoBtD,oBAAoB,CAAC+C,KAAK,CAACwB,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAxC,CAAN;AACA,YAAM,KAAKnB,KAAL,CAAWC,QAAX,CAAoBrD,gBAAgB,CAAC,KAAKoD,KAAL,CAAWa,IAAX,CAAgBO,GAAhB,GAAsB,KAAKpB,KAAL,CAAWa,IAAX,CAAgBO,GAAhB,CAAoBC,GAA1C,GAAgD,CAAjD,CAApC,CAAN;AACA,YAAM,KAAKrB,KAAL,CAAWC,QAAX,CAAoBlD,IAAI,EAAxB,CAAN,CAJ4B,CAK5B;;AACA,YAAM,KAAKuD,QAAL,CAAc;AAAEvC,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,QAAQ,EAAE,IAA5B;AAAkCC,QAAAA,QAAQ,EAAE,SAA5C;AAAuDC,QAAAA,OAAO,EAAE;AAAhE,OAAd,CAAN;AACA,0BACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAIH,KAjO+B;;AAAA,SA8OhCoD,aA9OgC,GA8OfhC,IAAD,IAAU;AACtB,WAAKgB,QAAL,CAAc;AAAE3C,QAAAA,YAAY,EAAE2B;AAAhB,OAAd;AACH,KAhP+B;AAAA;;AA0IhCiC,EAAAA,KAAK,GAAG;AACJ,SAAKjB,QAAL,CAAc;AACV1C,MAAAA,MAAM,EAAE,KADE;AAEVG,MAAAA,OAAO,EAAE,KAFC;AAGVC,MAAAA,QAAQ,EAAE,KAHA;AAIVH,MAAAA,SAAS,EAAE,KAJD;AAKV0C,MAAAA,WAAW,EAAE;AALH,KAAd;AAOH;;AAgFDiB,EAAAA,WAAW,GAAG;AACV,SAAKhE,KAAL,CAAWW,QAAX,CAAoBe,GAApB,CAAwBZ,KAAxB,GAAgC,KAAK0B,KAAL,CAAWa,IAAX,CAAgBC,QAAhB,CAAyB5B,GAAzD;AACA,SAAK1B,KAAL,CAAWW,QAAX,CAAoBgB,QAApB,CAA6Bb,KAA7B,GAAqC,KAAK0B,KAAL,CAAWa,IAAX,CAAgBC,QAAhB,CAAyB3B,QAA9D;AACA,SAAK3B,KAAL,CAAWW,QAAX,CAAoBO,IAApB,CAAyBJ,KAAzB,GAAiC,KAAK0B,KAAL,CAAWa,IAAX,CAAgBC,QAAhB,CAAyBpC,IAA1D;AACA,SAAKlB,KAAL,CAAWW,QAAX,CAAoBC,KAApB,CAA0BE,KAA1B,GAAkC,KAAK0B,KAAL,CAAWa,IAAX,CAAgBC,QAAhB,CAAyB1C,KAA3D;AACA,UAAMD,QAAQ,GAAG,KAAKX,KAAL,CAAWW,QAA5B;AACA,SAAKmC,QAAL,CAAc;AAAE1C,MAAAA,MAAM,EAAE;AAAV,KAAd;AACA,SAAK8C,YAAL,CAAkBvC,QAAlB;AACH;;AACDsD,EAAAA,iBAAiB,GAAG;AAChB,SAAKD,WAAL;AACH;;AAKDE,EAAAA,MAAM,GAAG;AAEL,wBACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADJ,CADJ,eAII;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AACI,MAAA,IAAI,EAAE,EADV;AAEI,MAAA,WAAW,EAAE,CAFjB;AAGI,MAAA,KAAK,EAAE,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BARJ,CADJ,CAJJ,eAgBI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,SAAS,EAAC,qCAAhB;AAAsD,MAAA,QAAQ,EAAGhC,KAAD,IAAW,KAAKkB,UAAL,CAAgBlB,KAAhB,CAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKlC,KAAL,CAAWO,OAAX,gBACG;AAAK,MAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAqB,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAE;AAAE4D,QAAAA,KAAK,EAAE;AAAT,OAAzB;AAA+C,MAAA,SAAS,EAAE,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB,CADH,GAEU,EAHX,eAII;AAAK,MAAA,GAAG,EAAE,KAAK3B,KAAL,CAAWa,IAAX,CAAgBC,QAAhB,CAAyBc,GAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ,eAOI;AAAK,MAAA,SAAS,EAAC,sDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAK5B,KAAL,CAAWa,IAAX,CAAgBC,QAAhB,CAAyB3B,QAA9B,CADZ,eAEY;AAAO,MAAA,SAAS,EAAC,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAK8B,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DAFJ,CAFZ,CAPJ,CADJ,eAiBY;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACJ;AAAK,MAAA,SAAS,EAAC,8CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADZ,CADI,eAIJ;AAAK,MAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACY,oBAAC,SAAD;AACI,MAAA,EAAE,EAAE,UADR;AAEI,MAAA,QAAQ,EAAE,KAAKzD,KAAL,CAAWW,QAAX,CAAoBgB,QAFlC;AAGI,MAAA,MAAM,EAAGd,OAAD,IAAa,KAAK2C,UAAL,CAAgB3C,OAAhB,CAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADZ,CAJI,CAjBZ,eA+BY;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACJ;AAAK,MAAA,SAAS,EAAC,6CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADZ,CADI,eAIJ;AAAK,MAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACY,oBAAC,SAAD;AAEI,MAAA,EAAE,EAAE,MAFR;AAGI,MAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWW,QAAX,CAAoBO,IAHlC;AAII,MAAA,MAAM,EAAGL,OAAD,IAAa,KAAK2C,UAAL,CAAgB3C,OAAhB,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADZ,CAJI,CA/BZ,eA6CY;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACJ;AAAK,MAAA,SAAS,EAAC,6CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADZ,CADI,eAIJ;AAAK,MAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACY,oBAAC,SAAD;AACI,MAAA,EAAE,EAAE,OADR;AAEI,MAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWW,QAAX,CAAoBC,KAFlC;AAGI,MAAA,MAAM,EAAGC,OAAD,IAAa,KAAK2C,UAAL,CAAgB3C,OAAhB,CAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADZ,CAJI,CA7CZ,eA0DY;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACJ;AAAK,MAAA,SAAS,EAAC,+CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADI,EAIQ,KAAKb,KAAL,CAAWI,MAAX,gBACJ;AAAK,MAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,UAAlB;AAA6B,MAAA,OAAO,EAAG8B,KAAD,IAAW;AAAE,aAAKkB,UAAL,CAAgBlB,KAAhB;AAAwB,OAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADR,CADI,gBAOJ;AAAK,MAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACY,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,kBAAlB;AAAqC,MAAA,QAAQ,EAAC,MAA9C;AAAqD,MAAA,OAAO,EAAGA,KAAD,IAAW;AAAE,aAAKkB,UAAL,CAAgBlB,KAAhB;AAAwB,OAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADZ,CAXJ,CA1DZ,CADJ,CAhBJ,eA+FI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AACI,MAAA,IAAI,EAAE,EADV;AAEI,MAAA,WAAW,EAAE,CAFjB;AAGI,MAAA,KAAK,EAAE,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ,CADJ,CA/FJ,eA2GI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,SAAS,EAAC,qCAAhB;AAAsD,MAAA,QAAQ,EAAGA,KAAD,IAAW,KAAK1C,cAAL,CAAoB0C,KAApB,CAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,8CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,CADJ,eAII;AAAK,MAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AACI,MAAA,EAAE,EAAE,iBADR;AAEI,MAAA,QAAQ,EAAE,KAAKlC,KAAL,CAAW4B,YAAX,CAAwBC,eAFtC,CAGI;AAHJ;AAII,MAAA,MAAM,EAAGhB,OAAD,IAAa,KAAKmC,kBAAL,CAAwBnC,OAAxB,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,CAFJ,eAeI;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,6CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADJ,CADJ,eAII;AAAK,MAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AACI,MAAA,EAAE,EAAE,UADR;AAEI,MAAA,QAAQ,EAAE,KAAKb,KAAL,CAAW4B,YAAX,CAAwBG,QAFtC,CAGI;AAHJ;AAII,MAAA,MAAM,EAAGlB,OAAD,IAAa,KAAKmC,kBAAL,CAAwBnC,OAAxB,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,CAfJ,eA4BI;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,CADJ,eAII;AAAK,MAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AACI,MAAA,EAAE,EAAE,iBADR;AAEI,MAAA,QAAQ,EAAE,KAAKb,KAAL,CAAW4B,YAAX,CAAwBI,eAFtC,CAGI;AAHJ;AAII,MAAA,MAAM,EAAGnB,OAAD,IAAa,KAAKmC,kBAAL,CAAwBnC,OAAxB,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,CA5BJ,EA0CQ,KAAKb,KAAL,CAAWK,SAAX,gBACA;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ;AAAK,MAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR,eAGQ;AAAK,MAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKL,KAAL,CAAW+C,WADZ,CAHR,CADA,GAQE,EAlDV,eAoDI;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,6CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAIQ;AAAK,MAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,UAAlB;AAA6B,MAAA,OAAO,EAAGb,KAAD,IAAW;AAAE,aAAK1C,cAAL,CAAoB0C,KAApB;AAA4B,OAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,CAJR,CApDJ,CADJ,CA3GJ,CADJ,eAgLI,oBAAC,QAAD;AACI,MAAA,YAAY,EAAE;AACVmC,QAAAA,QAAQ,EAAE,QADA;AAEVC,QAAAA,UAAU,EAAE;AAFF,OADlB;AAKI,MAAA,IAAI,EAAE,KAAKtE,KAAL,CAAWQ,QALrB;AAMI,MAAA,OAAO,EAAE,MAAM,KAAKsC,QAAL,CAAc;AAAEtC,QAAAA,QAAQ,EAAE;AAAZ,OAAd,CANnB;AAOI,MAAA,gBAAgB,EAAE,IAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASI,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAE,CAArB;AAAwB,MAAA,OAAO,EAAC,QAAhC;AAAyC,MAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWS,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0E,KAAKT,KAAL,CAAWU,OAArF,CATJ,CAhLJ,CADJ;AA8LH;;AAlb+B;;AAsbpC,MAAM6D,eAAe,GAAIvE,KAAD,IAAW;AAC/B,SAAO;AACHqD,IAAAA,IAAI,EAAErD,KAAK,CAACqD;AADT,GAAP;AAGH,CAJD;;AAMA,eAAe3E,OAAO,CAAC6F,eAAD,CAAP,CAAyB9E,UAAU,CAACM,WAAD,CAAnC,CAAf","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Switch from 'react-ios-switch';\r\nimport FormField from '../../../ultils/Form/FormField';\r\nimport './profilesetting.scss';\r\nimport { update, generateData,ifFormValid, resetFields  } from '../../../ultils/Form/FormActions';\r\nimport { User, Lock } from 'tabler-icons-react'\r\nimport { updateprofileimgfile, updateprofileimg, changeProfile, updateprofile, auth, changePassword } from '../../../../actions/user_action';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Button, CircularProgress, Snackbar } from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert'\r\nimport Layout from '../../Layout/index';\r\n\r\nclass EditAccount extends Component {\r\n    state = {\r\n        privateMode: false,\r\n        inputValue: \"\",\r\n        settingState: 'profile',\r\n        edited: false,\r\n        formError: false,\r\n        formSuccess: false,\r\n        loading: false,\r\n        setSnack: false,\r\n        severity: \"\",\r\n        message: \"\",\r\n        formData: {\r\n            email: {\r\n                element: 'input',\r\n                value: '',\r\n                config: {\r\n                    placeholder: 'Email của bạn',\r\n                    label: 'Email',\r\n                    name: 'email',\r\n                    options: [],\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    email: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false\r\n            },\r\n            name: {\r\n                element: 'input',\r\n                value: '',\r\n                config: {\r\n                    placeholder: 'Tên của bạn',\r\n                    label: 'Tên',\r\n                    name: 'name',\r\n                    options: [],\r\n                },\r\n                validation: {\r\n                    required: false,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false\r\n            },\r\n            bio: {\r\n                element: 'textarea',\r\n                value: '',\r\n                config: {\r\n                    placeholder: 'Mô tả về bản thân bạn',\r\n                    label: 'Tiểu sử',\r\n                    name: 'bio',\r\n                    options: [],\r\n                },\r\n                validation: {\r\n                    required: false,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false\r\n            },\r\n            userName: {\r\n                element: 'input',\r\n                value: '',\r\n                config: {\r\n                    placeholder: 'Tên tài khoản',\r\n                    label: 'Tên tài khoản',\r\n                    name: 'userName',\r\n                    options: [],\r\n                },\r\n                validation: {\r\n                    required: false,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false\r\n            },\r\n        },\r\n        passwordData: {\r\n            currentPassword: {\r\n                element: 'password',\r\n                config: {\r\n                    label: 'Mật khẩu',\r\n                    name: 'password_input',\r\n                    type: 'password',\r\n                    placeholder: 'Mật khẩu hiện tại'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false,\r\n            },\r\n            password: {\r\n                element: 'input',\r\n                config: {\r\n                    label: 'Mật khẩu mới',\r\n                    name: 'password_input',\r\n                    type: 'password',\r\n                    placeholder: 'Mật khẩu mới'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false,\r\n            },\r\n            confirmPassword: {\r\n                element: 'input',\r\n                value: '',\r\n                config: {\r\n                    label: 'Nhập lại mật khẩu',\r\n                    name: 'confirm_password_input',\r\n                    type: 'password',\r\n                    placeholder: 'Nhập lại mật khẩu'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    confirm: 'password'\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false,\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    reset() {\r\n        this.setState({\r\n            edited: false,\r\n            loading: false,\r\n            setSnack: false,\r\n            formError: false,\r\n            formMessage: \"\",\r\n        })\r\n    }\r\n\r\n    changePassword = (event) => {\r\n        event.preventDefault();\r\n\r\n        let dataToSubmit = generateData(this.state.passwordData, 'change_password')\r\n        let formIsValid = ifFormValid(this.state.passwordData, 'change_password');\r\n\r\n        if (formIsValid) {\r\n            console.log(dataToSubmit)\r\n            this.props.dispatch(changePassword(dataToSubmit))\r\n                .then(response => {\r\n                    console.log(response);\r\n                    if (response.payload.success) {\r\n                        this.setState({\r\n                            setSnack: true, severity: \"success\", message: \"Thành công\",\r\n                            //formMessage: response.payload.message\r\n                        }, () => { resetFields(this.state.passwordData) })\r\n                    } else {\r\n                        this.setState({\r\n                            formError: true,\r\n                            formMessage: response.payload.message\r\n                        })\r\n                    }\r\n                    this.props.dispatch(auth());\r\n                })\r\n        } else {\r\n            this.setState({\r\n                formError: true,\r\n                formMessage: \"Vui lòng kiểm tra lại thông tin!\"\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    updatePasswordForm = (element) => {\r\n        const newFormdata = update(element, this.state.passwordData, 'update_password');\r\n        this.setState({\r\n            formError: false,\r\n            passwordData: newFormdata\r\n        });\r\n    }\r\n    updateFields = (newFormData) => {\r\n        this.setState({\r\n            formData: newFormData\r\n        })\r\n\r\n    }\r\n    submitForm = (event) => {\r\n        this.setState({ loading: true })\r\n        event.preventDefault();\r\n        this.state.formData.privateMode = this.state.privateMode;\r\n        let dataToSubmit = generateData(this.state.formData, 'update_pro')\r\n        this.props.dispatch(changeProfile(this.props.user.userData._id, dataToSubmit))\r\n            .then(response => {\r\n                console.log(response)\r\n                this.props.dispatch(auth());\r\n                this.setState({ loading: false, setSnack: true, severity: \"success\", message: \"Thành công\" })\r\n            })\r\n    }\r\n    updateForm = (element) => {\r\n        const newFormdata = update(element, this.state.formData, 'update_pro');\r\n        this.setState({\r\n            formError: false,\r\n            formData: newFormdata\r\n        });\r\n        this.setState({ edited: true })\r\n    }\r\n    onFileChange = async (event) => {\r\n        this.setState({ loading: true })\r\n        await this.props.dispatch(updateprofileimgfile(event.target.files[0]));\r\n        await this.props.dispatch(updateprofileimg(this.props.user.img ? this.props.user.img.url : 0));\r\n        await this.props.dispatch(auth());\r\n        // await Headers.props.dispatch(updateprofileimg(this.props.user.img ? this.props.user.img.url : 0));\r\n        await this.setState({ loading: false, setSnack: true, severity: \"success\", message: \"Thành công\"  });\r\n        return (\r\n            <Layout>\r\n            </Layout>\r\n        )\r\n    }\r\n    getUserForm() {\r\n        this.state.formData.bio.value = this.props.user.userData.bio;\r\n        this.state.formData.userName.value = this.props.user.userData.userName;\r\n        this.state.formData.name.value = this.props.user.userData.name;\r\n        this.state.formData.email.value = this.props.user.userData.email;\r\n        const formData = this.state.formData;\r\n        this.setState({ edited: false });\r\n        this.updateFields(formData);\r\n    }\r\n    componentDidMount() {\r\n        this.getUserForm();\r\n    }\r\n    handleSetting = (type) => {\r\n        this.setState({ settingState: type })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Layout page=\"account\">\r\n                <div className=\"editAccount\">\r\n                    <div className=\"page_title\">\r\n                        <h3>Cài đặt tài khoản</h3>\r\n                    </div>\r\n                    <div className=\"title\">\r\n                        <div className=\"title-wrapper\">\r\n                            <div className=\"title-icon\">\r\n                                <User\r\n                                    size={24}\r\n                                    strokeWidth={2}\r\n                                    color={'white'}\r\n                                />\r\n                            </div>\r\n                            <p>Personal Infomation</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row  no-gutters \">\r\n                        <form className=\"col-xl-12 no-gutters setting_detail\" onSubmit={(event) => this.submitForm(event)}>\r\n                            <div className=\"row  no-gutters  setting_type\">\r\n                                <div className=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 no-gutters label\">\r\n                                {this.state.loading ?\r\n                                    <div class=\"overlay\"><CircularProgress style={{ color: '#5477D5' }} thickness={7} />\r\n                                    </div>:''}\r\n                                    <img src={this.props.user.userData.avt}></img>\r\n                                </div>\r\n                                <div className=\"col-xl-10 col-lg-10 col-md-10 col-sm-10 col-10 field\">\r\n                                            <h2>{this.props.user.userData.userName}</h2>\r\n                                            <label className=\"custom-file-upload\">\r\n                                                <input type=\"file\" onChange={this.onFileChange} />\r\n                                                <h6>Chỉnh sửa ảnh đại diện</h6>\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row  no-gutters  setting_type\">\r\n                                <div className=\"col-xl-2 col-lg-2 col-md-2 no-gutters  label\">\r\n                                            <h3>Tên tài khoản</h3>\r\n                                        </div>\r\n                                <div className=\"col-xl-10 col-lg-10 col-md-10 field\">\r\n                                            <FormField\r\n                                                id={'userName'}\r\n                                                formData={this.state.formData.userName}\r\n                                                change={(element) => this.updateForm(element)}\r\n\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row  no-gutters  setting_type\">\r\n                                <div className=\"col-xl-2 col-lg-2 col-md-2 no-gutters label\">\r\n                                            <h3>Tên</h3>\r\n                                        </div>\r\n                                <div className=\"col-xl-10 col-lg-10 col-md-10 field\">\r\n                                            <FormField\r\n                                               \r\n                                                id={'name'}\r\n                                                formData={this.state.formData.name}\r\n                                                change={(element) => this.updateForm(element)}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row  no-gutters  setting_type\">\r\n                                <div className=\"col-xl-2 col-lg-2 col-md-2 no-gutters label\">\r\n                                            <h3>Email</h3>\r\n                                        </div>\r\n                                <div className=\"col-xl-10 col-lg-10 col-md-10 field\">\r\n                                            <FormField\r\n                                                id={'email'}\r\n                                                formData={this.state.formData.email}\r\n                                                change={(element) => this.updateForm(element)}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row  no-gutters  setting_type\">\r\n                                <div className=\"col-xl-2 col-lg-2 col-md-2  no-gutters  label\">\r\n                                        </div>\r\n                                        {\r\n                                            this.state.edited ?\r\n                                        <div className=\"col-xl-10 col-lg-10 col-md-10 field\">\r\n                                                <Button className=\"send_btn\" onClick={(event) => { this.submitForm(event) }}>\r\n                                                        Gửi\r\n                                                </Button>\r\n                                                </div>\r\n                                                :\r\n                                        <div className=\"col-xl-10 col-lg-10 col-md-10 field\">\r\n                                                    <Button className=\"send_btn disable\" disabled=\"true\" onClick={(event) => { this.submitForm(event) }}>\r\n                                                        Cập nhật\r\n                                            </Button>\r\n                                                </div>\r\n                                        }\r\n                                    </div>\r\n                                </form>\r\n                    </div>\r\n                    <div className=\"title\">\r\n                        <div className=\"title-wrapper\">\r\n                            <div className=\"title-icon\">\r\n                                <Lock\r\n                                    size={24}\r\n                                    strokeWidth={2}\r\n                                    color={'white'}\r\n                                />\r\n                            </div>\r\n                            <p>Password</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row  no-gutters \">\r\n                        <form className=\"col-xl-12 no-gutters setting_detail\" onSubmit={(event) => this.changePassword(event)}>\r\n\r\n                            <div className=\"row  no-gutters  setting_type\">\r\n                                <div className=\"col-xl-2 col-lg-2 col-md-2 no-gutters  label\">\r\n                                    <h3>Mật khẩu</h3>\r\n                                </div>\r\n                                <div className=\"col-xl-10 col-lg-10 col-md-10 field\">\r\n                                    <FormField\r\n                                        id={'currentPassword'}\r\n                                        formData={this.state.passwordData.currentPassword}\r\n                                        //Hàm change nhận vào một element và gọi đến hàm updateForm(element) \r\n                                        change={(element) => this.updatePasswordForm(element)} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row  no-gutters  setting_type\">\r\n                                <div className=\"col-xl-2 col-lg-2 col-md-2 no-gutters label\">\r\n                                    <h3>Mật khẩu mới</h3>\r\n                                </div>\r\n                                <div className=\"col-xl-10 col-lg-10 col-md-10 field\">\r\n                                    <FormField\r\n                                        id={'password'}\r\n                                        formData={this.state.passwordData.password}\r\n                                        //Hàm change nhận vào một element và gọi đến hàm updateForm(element) \r\n                                        change={(element) => this.updatePasswordForm(element)} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row  no-gutters  setting_type\">\r\n                                <div className=\"col-xl-2 col-lg-2 col-md-2 label\">\r\n                                    <h3>Nhập lại</h3>\r\n                                </div>\r\n                                <div className=\"col-xl-10 col-lg-10 col-md-10 field\">\r\n                                    <FormField\r\n                                        id={'confirmPassword'}\r\n                                        formData={this.state.passwordData.confirmPassword}\r\n                                        //Hàm change nhận vào một element và gọi đến hàm updateForm(element) \r\n                                        change={(element) => this.updatePasswordForm(element)} />\r\n                                </div>\r\n                            </div>     \r\n\r\n                            {\r\n                                this.state.formError ?\r\n                                <div className=\"row setting_type\">\r\n                                        <div className=\"col-xl-2 col-lg-2 col-md-2 label\">\r\n                                    </div>\r\n                                        <div className=\"col-xl-10 col-lg-10 col-md-10 field\">\r\n                                        {this.state.formMessage}\r\n                                    </div>\r\n                                </div>\r\n                                : \"\"\r\n                            }\r\n                            <div className=\"row  no-gutters  setting_type\">\r\n                                <div className=\"col-xl-2 col-lg-2 col-md-2 no-gutters label\">\r\n                                </div>\r\n                                {\r\n                                    <div className=\"col-xl-10 col-lg-10 col-md-10 field\">\r\n                                        <Button className=\"send_btn\" onClick={(event) => { this.changePassword(event) }}>\r\n                                            Cập nhật\r\n                                        </Button>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'center'\r\n                    }}\r\n                    open={this.state.setSnack}\r\n                    onClose={() => this.setState({ setSnack: false })}\r\n                    autoHideDuration={1000}\r\n                >\r\n                    <MuiAlert elevation={6} variant=\"filled\" severity={this.state.severity} >{this.state.message}</MuiAlert>\r\n                </Snackbar>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(EditAccount));"]},"metadata":{},"sourceType":"module"}