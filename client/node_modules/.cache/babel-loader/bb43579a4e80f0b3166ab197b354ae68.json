{"ast":null,"code":"import React, { useMemo, memo, useCallback, Fragment, useRef, useEffect } from 'react';\nimport { useTheme, guessQuantizeColorScale, quantizeColorScalePropType, withContainer, useDimensions, SvgWrapper, ResponsiveWrapper, getRelativeCursor } from '@nivo/core';\nimport { BasicTooltip, useTooltip } from '@nivo/tooltip';\nimport PropTypes from 'prop-types';\nimport { useInheritedColor, inheritedColorPropType } from '@nivo/colors';\nimport _get from 'lodash/get';\nimport _isFunction from 'lodash/isFunction';\nimport { format } from 'd3-format';\nimport { geoAzimuthalEqualArea, geoAzimuthalEquidistant, geoGnomonic, geoOrthographic, geoStereographic, geoEqualEarth, geoEquirectangular, geoMercator, geoTransverseMercator, geoNaturalEarth1, geoPath, geoGraticule, geoContains } from 'd3-geo';\nimport { useQuantizeColorScaleLegendData, BoxLegendSvg, renderLegendToCanvas } from '@nivo/legends';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar projectionById = {\n  azimuthalEqualArea: geoAzimuthalEqualArea,\n  azimuthalEquidistant: geoAzimuthalEquidistant,\n  gnomonic: geoGnomonic,\n  orthographic: geoOrthographic,\n  stereographic: geoStereographic,\n  equalEarth: geoEqualEarth,\n  equirectangular: geoEquirectangular,\n  mercator: geoMercator,\n  transverseMercator: geoTransverseMercator,\n  naturalEarth1: geoNaturalEarth1\n};\n\nvar useGeoMap = function useGeoMap(_ref) {\n  var width = _ref.width,\n      height = _ref.height,\n      projectionType = _ref.projectionType,\n      projectionScale = _ref.projectionScale,\n      projectionTranslation = _ref.projectionTranslation,\n      projectionRotation = _ref.projectionRotation,\n      fillColor = _ref.fillColor,\n      borderWidth = _ref.borderWidth,\n      borderColor = _ref.borderColor;\n  var projection = useMemo(function () {\n    return projectionById[projectionType]().scale(projectionScale).translate([width * projectionTranslation[0], height * projectionTranslation[1]]).rotate(projectionRotation);\n  }, [width, height, projectionType, projectionScale, projectionTranslation[0], projectionTranslation[1], projectionRotation[0], projectionRotation[1], projectionRotation[2]]);\n  var path = useMemo(function () {\n    return geoPath(projection);\n  }, [projection]);\n  var graticule = useMemo(function () {\n    return geoGraticule();\n  });\n  var theme = useTheme();\n  var getBorderWidth = useMemo(function () {\n    return typeof borderWidth === 'function' ? borderWidth : function () {\n      return borderWidth;\n    };\n  }, [borderWidth]);\n  var getBorderColor = useInheritedColor(borderColor, theme);\n  var getFillColor = useMemo(function () {\n    return typeof fillColor === 'function' ? fillColor : function () {\n      return fillColor;\n    };\n  }, [fillColor]);\n  return {\n    projection: projection,\n    path: path,\n    graticule: graticule,\n    getBorderWidth: getBorderWidth,\n    getBorderColor: getBorderColor,\n    getFillColor: getFillColor\n  };\n};\n\nvar useChoropleth = function useChoropleth(_ref2) {\n  var features = _ref2.features,\n      data = _ref2.data,\n      match = _ref2.match,\n      label = _ref2.label,\n      value = _ref2.value,\n      valueFormat = _ref2.valueFormat,\n      colors = _ref2.colors,\n      unknownColor = _ref2.unknownColor,\n      domain = _ref2.domain;\n  var findMatchingDatum = useMemo(function () {\n    if (_isFunction(match)) return match;\n    return function (feature, datum) {\n      var featureKey = _get(feature, match);\n\n      var datumKey = _get(datum, match);\n\n      return featureKey && featureKey === datumKey;\n    };\n  }, [match]);\n  var getLabel = useMemo(function () {\n    return _isFunction(label) ? label : function (datum) {\n      return _get(datum, label);\n    };\n  }, [label]);\n  var getValue = useMemo(function () {\n    return _isFunction(value) ? value : function (datum) {\n      return _get(datum, value);\n    };\n  }, [value]);\n  var valueFormatter = useMemo(function () {\n    if (valueFormat === undefined) return function (d) {\n      return d;\n    };\n    if (_isFunction(valueFormat)) return valueFormat;\n    return format(valueFormat);\n  }, [valueFormat]);\n  var colorScale = useMemo(function () {\n    return guessQuantizeColorScale(colors).domain(domain);\n  }, [colors, domain]);\n  var getFillColor = useMemo(function () {\n    return function (feature) {\n      if (feature.value === undefined) return unknownColor;\n      return colorScale(feature.value);\n    };\n  }, [colorScale, unknownColor]);\n  var boundFeatures = useMemo(function () {\n    return features.map(function (feature) {\n      var datum = data.find(function (datum) {\n        return findMatchingDatum(feature, datum);\n      });\n      var datumValue = getValue(datum);\n\n      if (datum) {\n        var featureWithData = _objectSpread2(_objectSpread2({}, feature), {}, {\n          data: datum,\n          value: datumValue,\n          formattedValue: valueFormatter(datumValue)\n        });\n\n        featureWithData.color = getFillColor(featureWithData);\n        featureWithData.label = getLabel(featureWithData);\n        return featureWithData;\n      }\n\n      return feature;\n    });\n  }, [features, data, findMatchingDatum, getValue, valueFormatter, getFillColor]);\n  var legendData = useQuantizeColorScaleLegendData({\n    scale: colorScale,\n    valueFormat: valueFormatter\n  });\n  return {\n    colorScale: colorScale,\n    getFillColor: getFillColor,\n    boundFeatures: boundFeatures,\n    valueFormatter: valueFormatter,\n    legendData: legendData\n  };\n};\n\nvar ChoroplethTooltip = memo(function (_ref) {\n  var feature = _ref.feature;\n  if (feature.data === undefined) return null;\n  return React.createElement(BasicTooltip, {\n    id: feature.label,\n    color: feature.color,\n    enableChip: true,\n    value: feature.formattedValue\n  });\n});\nChoroplethTooltip.displayName = 'ChoroplethTooltip';\nvar commonPropTypes = {\n  features: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(['Feature']).isRequired,\n    properties: PropTypes.object,\n    geometry: PropTypes.object.isRequired\n  })).isRequired,\n  projectionType: PropTypes.oneOf(Object.keys(projectionById)).isRequired,\n  projectionScale: PropTypes.number.isRequired,\n  projectionTranslation: PropTypes.arrayOf(PropTypes.number).isRequired,\n  projectionRotation: PropTypes.arrayOf(PropTypes.number).isRequired,\n  fillColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n  borderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n  borderColor: inheritedColorPropType.isRequired,\n  enableGraticule: PropTypes.bool.isRequired,\n  graticuleLineWidth: PropTypes.number.isRequired,\n  graticuleLineColor: PropTypes.string.isRequired,\n  isInteractive: PropTypes.bool.isRequired,\n  onMouseEnter: PropTypes.func.isRequired,\n  onMouseMove: PropTypes.func.isRequired,\n  onMouseLeave: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n  tooltip: PropTypes.any,\n  layers: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.oneOf(['graticule', 'features']), PropTypes.func])).isRequired\n};\n\nvar GeoMapPropTypes = _objectSpread2(_objectSpread2({}, commonPropTypes), {}, {\n  role: PropTypes.string.isRequired\n});\n\nvar GeoMapCanvasPropTypes = _objectSpread2({\n  pixelRatio: PropTypes.number.isRequired\n}, commonPropTypes);\n\nvar commonChoroplethPropTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  match: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n  valueFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  colors: quantizeColorScalePropType.isRequired,\n  domain: PropTypes.arrayOf(PropTypes.number).isRequired,\n  unknownColor: PropTypes.string.isRequired,\n  layers: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.oneOf(['graticule', 'features', 'legends']), PropTypes.func])).isRequired\n};\n\nvar ChoroplethPropTypes = _objectSpread2(_objectSpread2(_objectSpread2({}, GeoMapPropTypes), commonChoroplethPropTypes), {}, {\n  role: PropTypes.string.isRequired\n});\n\nvar ChoroplethCanvasPropTypes = _objectSpread2(_objectSpread2({}, GeoMapCanvasPropTypes), commonChoroplethPropTypes);\n\nvar commonDefaultProps = {\n  projectionType: 'mercator',\n  projectionScale: 100,\n  projectionTranslation: [0.5, 0.5],\n  projectionRotation: [0, 0, 0],\n  enableGraticule: false,\n  graticuleLineWidth: 0.5,\n  graticuleLineColor: '#999999',\n  fillColor: '#dddddd',\n  borderWidth: 0,\n  borderColor: '#000000',\n  isInteractive: true,\n  onMouseEnter: function onMouseEnter() {},\n  onMouseLeave: function onMouseLeave() {},\n  onMouseMove: function onMouseMove() {},\n  onClick: function onClick() {},\n  layers: ['graticule', 'features'],\n  legends: []\n};\n\nvar GeoMapDefaultProps = _objectSpread2(_objectSpread2({}, commonDefaultProps), {}, {\n  role: 'img'\n});\n\nvar GeoMapCanvasDefaultProps = _objectSpread2(_objectSpread2({}, commonDefaultProps), {}, {\n  pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1\n});\n\nvar commonChoroplethDefaultProps = {\n  match: 'id',\n  label: 'id',\n  value: 'value',\n  colors: 'PuBuGn',\n  unknownColor: '#999',\n  tooltip: ChoroplethTooltip,\n  layers: ['graticule', 'features', 'legends']\n};\n\nvar ChoroplethDefaultProps = _objectSpread2(_objectSpread2(_objectSpread2({}, GeoMapDefaultProps), commonChoroplethDefaultProps), {}, {\n  role: 'img'\n});\n\nvar ChoroplethCanvasDefaultProps = _objectSpread2(_objectSpread2({}, GeoMapCanvasDefaultProps), commonChoroplethDefaultProps);\n\nvar GeoGraticule = memo(function (_ref) {\n  var path = _ref.path,\n      graticule = _ref.graticule,\n      lineWidth = _ref.lineWidth,\n      lineColor = _ref.lineColor;\n  return React.createElement(\"path\", {\n    fill: \"none\",\n    strokeWidth: lineWidth,\n    stroke: lineColor,\n    d: path(graticule())\n  });\n});\nGeoGraticule.displayName = 'GeoGraticule';\nvar GeoMapFeature = memo(function (_ref) {\n  var feature = _ref.feature,\n      path = _ref.path,\n      fillColor = _ref.fillColor,\n      borderWidth = _ref.borderWidth,\n      borderColor = _ref.borderColor,\n      _onClick = _ref.onClick,\n      _onMouseEnter = _ref.onMouseEnter,\n      _onMouseMove = _ref.onMouseMove,\n      _onMouseLeave = _ref.onMouseLeave;\n  return React.createElement(\"path\", {\n    key: feature.id,\n    fill: fillColor,\n    strokeWidth: borderWidth,\n    stroke: borderColor,\n    strokeLinejoin: \"bevel\",\n    d: path(feature),\n    onMouseEnter: function onMouseEnter(event) {\n      return _onMouseEnter(feature, event);\n    },\n    onMouseMove: function onMouseMove(event) {\n      return _onMouseMove(feature, event);\n    },\n    onMouseLeave: function onMouseLeave(event) {\n      return _onMouseLeave(feature, event);\n    },\n    onClick: function onClick(event) {\n      return _onClick(feature, event);\n    }\n  });\n});\nGeoMapFeature.displayName = 'GeoMapFeature';\nvar GeoMap = memo(function (props) {\n  var width = props.width,\n      height = props.height,\n      partialMargin = props.margin,\n      features = props.features,\n      layers = props.layers,\n      projectionType = props.projectionType,\n      projectionScale = props.projectionScale,\n      projectionTranslation = props.projectionTranslation,\n      projectionRotation = props.projectionRotation,\n      fillColor = props.fillColor,\n      borderWidth = props.borderWidth,\n      borderColor = props.borderColor,\n      enableGraticule = props.enableGraticule,\n      graticuleLineWidth = props.graticuleLineWidth,\n      graticuleLineColor = props.graticuleLineColor,\n      isInteractive = props.isInteractive,\n      onClick = props.onClick,\n      Tooltip = props.tooltip,\n      role = props.role;\n\n  var _useDimensions = useDimensions(width, height, partialMargin),\n      margin = _useDimensions.margin,\n      outerWidth = _useDimensions.outerWidth,\n      outerHeight = _useDimensions.outerHeight;\n\n  var _useGeoMap = useGeoMap({\n    width: width,\n    height: height,\n    projectionType: projectionType,\n    projectionScale: projectionScale,\n    projectionTranslation: projectionTranslation,\n    projectionRotation: projectionRotation,\n    fillColor: fillColor,\n    borderWidth: borderWidth,\n    borderColor: borderColor\n  }),\n      graticule = _useGeoMap.graticule,\n      path = _useGeoMap.path,\n      getFillColor = _useGeoMap.getFillColor,\n      getBorderWidth = _useGeoMap.getBorderWidth,\n      getBorderColor = _useGeoMap.getBorderColor;\n\n  var theme = useTheme();\n\n  var _useTooltip = useTooltip(),\n      showTooltipFromEvent = _useTooltip.showTooltipFromEvent,\n      hideTooltip = _useTooltip.hideTooltip;\n\n  var handleClick = useCallback(function (feature, event) {\n    return isInteractive && onClick && onClick(feature, event);\n  }, [isInteractive, onClick]);\n  var handleMouseEnter = useCallback(function (feature, event) {\n    return isInteractive && Tooltip && showTooltipFromEvent(React.createElement(Tooltip, {\n      feature: feature\n    }), event);\n  }, [isInteractive, showTooltipFromEvent, Tooltip]);\n  var handleMouseMove = useCallback(function (feature, event) {\n    return isInteractive && Tooltip && showTooltipFromEvent(React.createElement(Tooltip, {\n      feature: feature\n    }), event);\n  }, [isInteractive, showTooltipFromEvent, Tooltip]);\n  var handleMouseLeave = useCallback(function () {\n    return isInteractive && hideTooltip();\n  }, [isInteractive, hideTooltip]);\n  return React.createElement(SvgWrapper, {\n    width: outerWidth,\n    height: outerHeight,\n    margin: margin,\n    theme: theme,\n    role: role\n  }, layers.map(function (layer, i) {\n    if (layer === 'graticule') {\n      if (enableGraticule !== true) return null;\n      return React.createElement(GeoGraticule, {\n        key: \"graticule\",\n        path: path,\n        graticule: graticule,\n        lineWidth: graticuleLineWidth,\n        lineColor: graticuleLineColor\n      });\n    }\n\n    if (layer === 'features') {\n      return React.createElement(Fragment, {\n        key: \"features\"\n      }, features.map(function (feature) {\n        return React.createElement(GeoMapFeature, {\n          key: feature.id,\n          feature: feature,\n          path: path,\n          fillColor: getFillColor(feature),\n          borderWidth: getBorderWidth(feature),\n          borderColor: getBorderColor(feature),\n          onMouseEnter: handleMouseEnter,\n          onMouseMove: handleMouseMove,\n          onMouseLeave: handleMouseLeave,\n          onClick: handleClick\n        });\n      }));\n    }\n\n    return React.createElement(Fragment, {\n      key: i\n    }, layer(props));\n  }));\n});\nGeoMap.displayName = 'GeoMap';\nGeoMap.defaultProps = GeoMapDefaultProps;\nvar GeoMap$1 = withContainer(GeoMap);\n\nvar ResponsiveGeoMap = function ResponsiveGeoMap(props) {\n  return React.createElement(ResponsiveWrapper, null, function (_ref) {\n    var width = _ref.width,\n        height = _ref.height;\n    return React.createElement(GeoMap$1, Object.assign({\n      width: width,\n      height: height\n    }, props));\n  });\n};\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nvar getFeatureFromMouseEvent = function getFeatureFromMouseEvent(event, el, features, projection) {\n  var _getRelativeCursor = getRelativeCursor(el, event),\n      _getRelativeCursor2 = _slicedToArray(_getRelativeCursor, 2),\n      x = _getRelativeCursor2[0],\n      y = _getRelativeCursor2[1];\n\n  return features.find(function (f) {\n    return geoContains(f, projection.invert([x, y]));\n  });\n};\n\nvar GeoMapCanvas = memo(function (props) {\n  var width = props.width,\n      height = props.height,\n      partialMargin = props.margin,\n      pixelRatio = props.pixelRatio,\n      features = props.features,\n      layers = props.layers,\n      projectionType = props.projectionType,\n      projectionScale = props.projectionScale,\n      projectionTranslation = props.projectionTranslation,\n      projectionRotation = props.projectionRotation,\n      fillColor = props.fillColor,\n      borderWidth = props.borderWidth,\n      borderColor = props.borderColor,\n      enableGraticule = props.enableGraticule,\n      graticuleLineWidth = props.graticuleLineWidth,\n      graticuleLineColor = props.graticuleLineColor,\n      isInteractive = props.isInteractive,\n      onClick = props.onClick,\n      onMouseMove = props.onMouseMove,\n      Tooltip = props.tooltip;\n  var canvasEl = useRef(null);\n  var theme = useTheme();\n\n  var _useDimensions = useDimensions(width, height, partialMargin),\n      margin = _useDimensions.margin,\n      outerWidth = _useDimensions.outerWidth,\n      outerHeight = _useDimensions.outerHeight;\n\n  var _useGeoMap = useGeoMap({\n    width: width,\n    height: height,\n    projectionType: projectionType,\n    projectionScale: projectionScale,\n    projectionTranslation: projectionTranslation,\n    projectionRotation: projectionRotation,\n    fillColor: fillColor,\n    borderWidth: borderWidth,\n    borderColor: borderColor\n  }),\n      projection = _useGeoMap.projection,\n      graticule = _useGeoMap.graticule,\n      path = _useGeoMap.path,\n      getFillColor = _useGeoMap.getFillColor,\n      getBorderWidth = _useGeoMap.getBorderWidth,\n      getBorderColor = _useGeoMap.getBorderColor;\n\n  useEffect(function () {\n    if (!canvasEl) return;\n    canvasEl.current.width = outerWidth * pixelRatio;\n    canvasEl.current.height = outerHeight * pixelRatio;\n    var ctx = canvasEl.current.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.fillStyle = theme.background;\n    ctx.fillRect(0, 0, outerWidth, outerHeight);\n    ctx.translate(margin.left, margin.top);\n    path.context(ctx);\n    layers.forEach(function (layer) {\n      if (layer === 'graticule') {\n        if (enableGraticule === true) {\n          ctx.lineWidth = graticuleLineWidth;\n          ctx.strokeStyle = graticuleLineColor;\n          ctx.beginPath();\n          path(graticule());\n          ctx.stroke();\n        }\n      } else if (layer === 'features') {\n        features.forEach(function (feature) {\n          ctx.beginPath();\n          path(feature);\n          ctx.fillStyle = getFillColor(feature);\n          ctx.fill();\n          var borderWidth = getBorderWidth(feature);\n\n          if (borderWidth > 0) {\n            ctx.strokeStyle = getBorderColor(feature);\n            ctx.lineWidth = borderWidth;\n            ctx.stroke();\n          }\n        });\n      } else {\n        layer(ctx, props);\n      }\n    });\n  }, [canvasEl, outerWidth, outerHeight, margin, pixelRatio, theme, path, graticule, getFillColor, getBorderWidth, getBorderColor, features, layers]);\n\n  var _useTooltip = useTooltip(),\n      showTooltipFromEvent = _useTooltip.showTooltipFromEvent,\n      hideTooltip = _useTooltip.hideTooltip;\n\n  var handleMouseMove = useCallback(function (event) {\n    if (!isInteractive || !Tooltip) return;\n    var feature = getFeatureFromMouseEvent(event, canvasEl.current, features, projection);\n\n    if (feature) {\n      showTooltipFromEvent(React.createElement(Tooltip, {\n        feature: feature\n      }), event);\n    } else {\n      hideTooltip();\n    }\n\n    onMouseMove && onMouseMove(feature || null, event);\n  }, [showTooltipFromEvent, hideTooltip, isInteractive, Tooltip, canvasEl, features, projection]);\n  var handleMouseLeave = useCallback(function () {\n    return isInteractive && hideTooltip();\n  }, [isInteractive, hideTooltip]);\n  var handleClick = useCallback(function (event) {\n    if (!isInteractive || !onClick) return;\n    var feature = getFeatureFromMouseEvent(event, canvasEl.current, features, projection);\n\n    if (feature) {\n      onClick(feature, event);\n    }\n  }, [isInteractive, canvasEl, features, projection, onClick]);\n  return React.createElement(\"canvas\", {\n    ref: canvasEl,\n    width: outerWidth * pixelRatio,\n    height: outerHeight * pixelRatio,\n    style: {\n      width: outerWidth,\n      height: outerHeight,\n      cursor: isInteractive ? 'auto' : 'normal'\n    },\n    onMouseMove: handleMouseMove,\n    onMouseLeave: handleMouseLeave,\n    onClick: handleClick\n  });\n});\nGeoMapCanvas.displatName = 'GeoMapCanvas';\nGeoMapCanvas.defaultProps = GeoMapCanvasDefaultProps;\nvar GeoMapCanvas$1 = withContainer(GeoMapCanvas);\n\nvar ResponsiveGeoMapCanvas = function ResponsiveGeoMapCanvas(props) {\n  return React.createElement(ResponsiveWrapper, null, function (_ref) {\n    var width = _ref.width,\n        height = _ref.height;\n    return React.createElement(GeoMapCanvas$1, Object.assign({\n      width: width,\n      height: height\n    }, props));\n  });\n};\n\nvar Choropleth = memo(function (_ref) {\n  var width = _ref.width,\n      height = _ref.height,\n      partialMargin = _ref.margin,\n      features = _ref.features,\n      data = _ref.data,\n      match = _ref.match,\n      label = _ref.label,\n      value = _ref.value,\n      valueFormat = _ref.valueFormat,\n      projectionType = _ref.projectionType,\n      projectionScale = _ref.projectionScale,\n      projectionTranslation = _ref.projectionTranslation,\n      projectionRotation = _ref.projectionRotation,\n      colors = _ref.colors,\n      domain = _ref.domain,\n      unknownColor = _ref.unknownColor,\n      borderWidth = _ref.borderWidth,\n      borderColor = _ref.borderColor,\n      enableGraticule = _ref.enableGraticule,\n      graticuleLineWidth = _ref.graticuleLineWidth,\n      graticuleLineColor = _ref.graticuleLineColor,\n      layers = _ref.layers,\n      legends = _ref.legends,\n      isInteractive = _ref.isInteractive,\n      onClick = _ref.onClick,\n      Tooltip = _ref.tooltip,\n      role = _ref.role;\n\n  var _useDimensions = useDimensions(width, height, partialMargin),\n      margin = _useDimensions.margin,\n      outerWidth = _useDimensions.outerWidth,\n      outerHeight = _useDimensions.outerHeight;\n\n  var _useGeoMap = useGeoMap({\n    width: width,\n    height: height,\n    projectionType: projectionType,\n    projectionScale: projectionScale,\n    projectionTranslation: projectionTranslation,\n    projectionRotation: projectionRotation,\n    fillColor: function fillColor() {},\n    borderWidth: borderWidth,\n    borderColor: borderColor\n  }),\n      graticule = _useGeoMap.graticule,\n      path = _useGeoMap.path,\n      getBorderWidth = _useGeoMap.getBorderWidth,\n      getBorderColor = _useGeoMap.getBorderColor;\n\n  var _useChoropleth = useChoropleth({\n    features: features,\n    data: data,\n    match: match,\n    label: label,\n    value: value,\n    valueFormat: valueFormat,\n    colors: colors,\n    unknownColor: unknownColor,\n    domain: domain\n  }),\n      getFillColor = _useChoropleth.getFillColor,\n      boundFeatures = _useChoropleth.boundFeatures,\n      legendData = _useChoropleth.legendData;\n\n  var theme = useTheme();\n\n  var _useTooltip = useTooltip(),\n      showTooltipFromEvent = _useTooltip.showTooltipFromEvent,\n      hideTooltip = _useTooltip.hideTooltip;\n\n  var handleClick = useCallback(function (feature, event) {\n    return isInteractive && onClick && onClick(feature, event);\n  }, [isInteractive, onClick]);\n  var handleMouseEnter = useCallback(function (feature, event) {\n    return isInteractive && Tooltip && showTooltipFromEvent(React.createElement(Tooltip, {\n      feature: feature\n    }), event);\n  }, [isInteractive, showTooltipFromEvent, Tooltip]);\n  var handleMouseMove = useCallback(function (feature, event) {\n    return isInteractive && Tooltip && showTooltipFromEvent(React.createElement(Tooltip, {\n      feature: feature\n    }), event);\n  }, [isInteractive, showTooltipFromEvent, Tooltip]);\n  var handleMouseLeave = useCallback(function () {\n    return isInteractive && hideTooltip();\n  }, [isInteractive, hideTooltip]);\n  return React.createElement(SvgWrapper, {\n    width: outerWidth,\n    height: outerHeight,\n    margin: margin,\n    theme: theme,\n    role: role\n  }, layers.map(function (layer, i) {\n    if (layer === 'graticule') {\n      if (enableGraticule !== true) return null;\n      return React.createElement(GeoGraticule, {\n        key: \"graticule\",\n        path: path,\n        graticule: graticule,\n        lineWidth: graticuleLineWidth,\n        lineColor: graticuleLineColor\n      });\n    }\n\n    if (layer === 'features') {\n      return React.createElement(Fragment, {\n        key: \"features\"\n      }, boundFeatures.map(function (feature) {\n        return React.createElement(GeoMapFeature, {\n          key: feature.id,\n          feature: feature,\n          path: path,\n          fillColor: getFillColor(feature),\n          borderWidth: getBorderWidth(feature),\n          borderColor: getBorderColor(feature),\n          onMouseEnter: handleMouseEnter,\n          onMouseMove: handleMouseMove,\n          onMouseLeave: handleMouseLeave,\n          onClick: handleClick\n        });\n      }));\n    }\n\n    if (layer === 'legends') {\n      return legends.map(function (legend, i) {\n        return React.createElement(BoxLegendSvg, Object.assign({\n          key: i,\n          containerWidth: width,\n          containerHeight: height,\n          data: legendData\n        }, legend));\n      });\n    }\n\n    return React.createElement(Fragment, {\n      key: i\n    }, layer({}));\n  }));\n});\nChoropleth.displayName = 'Choropleth';\nChoropleth.defaultProps = ChoroplethDefaultProps;\nvar Choropleth$1 = withContainer(Choropleth);\n\nvar ResponsiveChoropleth = function ResponsiveChoropleth(props) {\n  return React.createElement(ResponsiveWrapper, null, function (_ref) {\n    var width = _ref.width,\n        height = _ref.height;\n    return React.createElement(Choropleth$1, Object.assign({\n      width: width,\n      height: height\n    }, props));\n  });\n};\n\nvar getFeatureFromMouseEvent$1 = function getFeatureFromMouseEvent(event, el, features, projection) {\n  var _getRelativeCursor = getRelativeCursor(el, event),\n      _getRelativeCursor2 = _slicedToArray(_getRelativeCursor, 2),\n      x = _getRelativeCursor2[0],\n      y = _getRelativeCursor2[1];\n\n  return features.find(function (f) {\n    return geoContains(f, projection.invert([x, y]));\n  });\n};\n\nvar ChoroplethCanvas = memo(function (_ref) {\n  var width = _ref.width,\n      height = _ref.height,\n      partialMargin = _ref.margin,\n      pixelRatio = _ref.pixelRatio,\n      features = _ref.features,\n      data = _ref.data,\n      match = _ref.match,\n      label = _ref.label,\n      value = _ref.value,\n      valueFormat = _ref.valueFormat,\n      projectionType = _ref.projectionType,\n      projectionScale = _ref.projectionScale,\n      projectionTranslation = _ref.projectionTranslation,\n      projectionRotation = _ref.projectionRotation,\n      colors = _ref.colors,\n      domain = _ref.domain,\n      unknownColor = _ref.unknownColor,\n      borderWidth = _ref.borderWidth,\n      borderColor = _ref.borderColor,\n      enableGraticule = _ref.enableGraticule,\n      graticuleLineWidth = _ref.graticuleLineWidth,\n      graticuleLineColor = _ref.graticuleLineColor,\n      layers = _ref.layers,\n      legends = _ref.legends,\n      isInteractive = _ref.isInteractive,\n      onClick = _ref.onClick,\n      onMouseMove = _ref.onMouseMove,\n      Tooltip = _ref.tooltip;\n  var canvasEl = useRef(null);\n  var theme = useTheme();\n\n  var _useDimensions = useDimensions(width, height, partialMargin),\n      margin = _useDimensions.margin,\n      outerWidth = _useDimensions.outerWidth,\n      outerHeight = _useDimensions.outerHeight;\n\n  var _useGeoMap = useGeoMap({\n    width: width,\n    height: height,\n    projectionType: projectionType,\n    projectionScale: projectionScale,\n    projectionTranslation: projectionTranslation,\n    projectionRotation: projectionRotation,\n    fillColor: function fillColor() {},\n    borderWidth: borderWidth,\n    borderColor: borderColor\n  }),\n      projection = _useGeoMap.projection,\n      graticule = _useGeoMap.graticule,\n      path = _useGeoMap.path,\n      getBorderWidth = _useGeoMap.getBorderWidth,\n      getBorderColor = _useGeoMap.getBorderColor;\n\n  var _useChoropleth = useChoropleth({\n    features: features,\n    data: data,\n    match: match,\n    label: label,\n    value: value,\n    valueFormat: valueFormat,\n    colors: colors,\n    unknownColor: unknownColor,\n    domain: domain\n  }),\n      getFillColor = _useChoropleth.getFillColor,\n      boundFeatures = _useChoropleth.boundFeatures,\n      legendData = _useChoropleth.legendData;\n\n  useEffect(function () {\n    if (!canvasEl) return;\n    canvasEl.current.width = outerWidth * pixelRatio;\n    canvasEl.current.height = outerHeight * pixelRatio;\n    var ctx = canvasEl.current.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.fillStyle = theme.background;\n    ctx.fillRect(0, 0, outerWidth, outerHeight);\n    ctx.translate(margin.left, margin.top);\n    path.context(ctx);\n    layers.forEach(function (layer) {\n      if (layer === 'graticule') {\n        if (enableGraticule === true) {\n          ctx.lineWidth = graticuleLineWidth;\n          ctx.strokeStyle = graticuleLineColor;\n          ctx.beginPath();\n          path(graticule());\n          ctx.stroke();\n        }\n      } else if (layer === 'features') {\n        boundFeatures.forEach(function (feature) {\n          ctx.beginPath();\n          path(feature);\n          ctx.fillStyle = getFillColor(feature);\n          ctx.fill();\n          var borderWidth = getBorderWidth(feature);\n\n          if (borderWidth > 0) {\n            ctx.strokeStyle = getBorderColor(feature);\n            ctx.lineWidth = borderWidth;\n            ctx.stroke();\n          }\n        });\n      } else if (layer === 'legends') {\n        legends.forEach(function (legend) {\n          renderLegendToCanvas(ctx, _objectSpread2(_objectSpread2({}, legend), {}, {\n            data: legendData,\n            containerWidth: width,\n            containerHeight: height,\n            theme: theme\n          }));\n        });\n      }\n    });\n  }, [canvasEl, outerWidth, outerHeight, margin, pixelRatio, theme, path, graticule, getFillColor, getBorderWidth, getBorderColor, boundFeatures, legends, layers]);\n\n  var _useTooltip = useTooltip(),\n      showTooltipFromEvent = _useTooltip.showTooltipFromEvent,\n      hideTooltip = _useTooltip.hideTooltip;\n\n  var handleMouseMove = useCallback(function (event) {\n    if (!isInteractive || !Tooltip) return;\n    var feature = getFeatureFromMouseEvent$1(event, canvasEl.current, boundFeatures, projection);\n\n    if (feature) {\n      showTooltipFromEvent(React.createElement(Tooltip, {\n        feature: feature\n      }), event);\n    } else {\n      hideTooltip();\n    }\n\n    onMouseMove && onMouseMove(feature || null, event);\n  }, [showTooltipFromEvent, hideTooltip, isInteractive, Tooltip, canvasEl, boundFeatures, projection]);\n  var handleMouseLeave = useCallback(function () {\n    return isInteractive && hideTooltip();\n  }, [isInteractive, hideTooltip]);\n  var handleClick = useCallback(function (event) {\n    if (!isInteractive || !onClick) return;\n    var feature = getFeatureFromMouseEvent$1(event, canvasEl.current, boundFeatures, projection);\n\n    if (feature) {\n      onClick(feature, event);\n    }\n  }, [isInteractive, canvasEl, boundFeatures, projection, onClick]);\n  return React.createElement(\"canvas\", {\n    ref: canvasEl,\n    width: outerWidth * pixelRatio,\n    height: outerHeight * pixelRatio,\n    style: {\n      width: outerWidth,\n      height: outerHeight,\n      cursor: isInteractive ? 'auto' : 'normal'\n    },\n    onMouseMove: handleMouseMove,\n    onMouseLeave: handleMouseLeave,\n    onClick: handleClick\n  });\n});\nChoroplethCanvas.displayName = 'ChoroplethCanvas';\nChoroplethCanvas.defaultProps = ChoroplethCanvasDefaultProps;\nvar ChoroplethCanvas$1 = withContainer(ChoroplethCanvas);\n\nvar ResponsiveChoroplethCanvas = function ResponsiveChoroplethCanvas(props) {\n  return React.createElement(ResponsiveWrapper, null, function (_ref) {\n    var width = _ref.width,\n        height = _ref.height;\n    return React.createElement(ChoroplethCanvas$1, Object.assign({\n      width: width,\n      height: height\n    }, props));\n  });\n};\n\nexport { Choropleth$1 as Choropleth, ChoroplethCanvas$1 as ChoroplethCanvas, ChoroplethCanvasDefaultProps, ChoroplethCanvasPropTypes, ChoroplethDefaultProps, ChoroplethPropTypes, GeoMap$1 as GeoMap, GeoMapCanvas$1 as GeoMapCanvas, GeoMapCanvasDefaultProps, GeoMapCanvasPropTypes, GeoMapDefaultProps, GeoMapPropTypes, ResponsiveChoropleth, ResponsiveChoroplethCanvas, ResponsiveGeoMap, ResponsiveGeoMapCanvas, projectionById, useChoropleth, useGeoMap };","map":{"version":3,"mappings":";;;;;;;;;;;AAAe,SAASA,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,KAAnC,EAA0C;EACvD,IAAID,GAAG,IAAID,GAAX,EAAgB;IACdG,MAAM,CAACC,cAAP,CAAsBJ,GAAtB,EAA2BC,GAA3B,EAAgC;MAC9BC,KAAK,EAAEA,KADuB;MAE9BG,UAAU,EAAE,IAFkB;MAG9BC,YAAY,EAAE,IAHgB;MAI9BC,QAAQ,EAAE;IAJoB,CAAhC;EAMD,CAPD,MAOO;IACLP,GAAG,CAACC,GAAD,CAAH,GAAWC,KAAX;EACD;;EAED,OAAOF,GAAP;AACF;;ACXA,SAASQ,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;EACvC,IAAIC,IAAI,GAAGR,MAAM,CAACQ,IAAP,CAAYF,MAAZ,CAAX;;EAEA,IAAIN,MAAM,CAACS,qBAAX,EAAkC;IAChC,IAAIC,OAAO,GAAGV,MAAM,CAACS,qBAAP,CAA6BH,MAA7B,CAAd;IACA,IAAIC,cAAJ,EAAoBG,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;MAC1D,OAAOZ,MAAM,CAACa,wBAAP,CAAgCP,MAAhC,EAAwCM,GAAxC,EAA6CV,UAApD;IACD,CAF6B,CAAV;IAGpBM,IAAI,CAACM,IAAL,CAAUC,KAAV,CAAgBP,IAAhB,EAAsBE,OAAtB;EACD;;EAED,OAAOF,IAAP;AACD;;AAEc,SAASQ,cAAT,CAAwBC,MAAxB,EAAgC;EAC7C,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;IACzC,IAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAT,IAAgB,IAAhB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;;IAEA,IAAIA,CAAC,GAAG,CAAR,EAAW;MACTb,OAAO,CAACL,MAAM,CAACqB,MAAD,CAAP,EAAiB,IAAjB,CAAP,CAA8BC,OAA9B,CAAsC,UAAUxB,GAAV,EAAe;QACnDG,eAAc,CAACgB,MAAD,EAASnB,GAAT,EAAcuB,MAAM,CAACvB,GAAD,CAApB,CAAdG;MACD,CAFD;IAGD,CAJD,MAIO,IAAID,MAAM,CAACuB,yBAAX,EAAsC;MAC3CvB,MAAM,CAACwB,gBAAP,CAAwBP,MAAxB,EAAgCjB,MAAM,CAACuB,yBAAP,CAAiCF,MAAjC,CAAhC;IACD,CAFM,MAEA;MACLhB,OAAO,CAACL,MAAM,CAACqB,MAAD,CAAP,CAAP,CAAwBC,OAAxB,CAAgC,UAAUxB,GAAV,EAAe;QAC7CE,MAAM,CAACC,cAAP,CAAsBgB,MAAtB,EAA8BnB,GAA9B,EAAmCE,MAAM,CAACa,wBAAP,CAAgCQ,MAAhC,EAAwCvB,GAAxC,CAAnC;MACD,CAFD;IAGD;EACF;;EAED,OAAOmB,MAAP;AACF;;ICLaQ,cAAc,GAAG;EAC1BC,kBAAkB,EAAEC,qBADM;EAE1BC,oBAAoB,EAAEC,uBAFI;EAG1BC,QAAQ,EAAEC,WAHgB;EAI1BC,YAAY,EAAEC,eAJY;EAK1BC,aAAa,EAAEC,gBALW;EAM1BC,UAAU,EAAEC,aANc;EAO1BC,eAAe,EAAEC,kBAPS;EAQ1BC,QAAQ,EAAEC,WARgB;EAS1BC,kBAAkB,EAAEC,qBATM;EAU1BC,aAAa,EAAEC;AAVW;;IAajBC,SAAS,GAAG,SAAZA,SAAY,OAUnB;EAAA,IATFC,KASE,QATFA,KASE;EAAA,IARFC,MAQE,QARFA,MAQE;EAAA,IAPFC,cAOE,QAPFA,cAOE;EAAA,IANFC,eAME,QANFA,eAME;EAAA,IALFC,qBAKE,QALFA,qBAKE;EAAA,IAJFC,kBAIE,QAJFA,kBAIE;EAAA,IAHFC,SAGE,QAHFA,SAGE;EAAA,IAFFC,WAEE,QAFFA,WAEE;EAAA,IADFC,WACE,QADFA,WACE;EACF,IAAMC,UAAU,GAAGC,OAAO,CAAC,YAAM;IAC7B,OAAOhC,cAAc,CAACwB,cAAD,CAAdxB,GACFiC,KADEjC,CACIyB,eADJzB,EAEFkC,SAFElC,CAEQ,CAACsB,KAAK,GAAGI,qBAAqB,CAAC,CAAD,CAA9B,EAAmCH,MAAM,GAAGG,qBAAqB,CAAC,CAAD,CAAjE,CAFR1B,EAGFmC,MAHEnC,CAGK2B,kBAHL3B,CAAP;EADsB,GAKvB,CACCsB,KADD,EAECC,MAFD,EAGCC,cAHD,EAICC,eAJD,EAKCC,qBAAqB,CAAC,CAAD,CALtB,EAMCA,qBAAqB,CAAC,CAAD,CANtB,EAOCC,kBAAkB,CAAC,CAAD,CAPnB,EAQCA,kBAAkB,CAAC,CAAD,CARnB,EASCA,kBAAkB,CAAC,CAAD,CATnB,CALuB,CAA1B;EAgBA,IAAMS,IAAI,GAAGJ,OAAO,CAAC;IAAA,OAAMK,OAAO,CAACN,UAAD,CAAb;EAAD,GAA4B,CAACA,UAAD,CAA5B,CAApB;EACA,IAAMO,SAAS,GAAGN,OAAO,CAAC;IAAA,OAAMO,YAAY,EAAlB;EAAD,EAAzB;EAEA,IAAMC,KAAK,GAAGC,QAAQ,EAAtB;EACA,IAAMC,cAAc,GAAGV,OAAO,CAC1B;IAAA,OAAO,OAAOH,WAAP,KAAuB,UAAvB,GAAoCA,WAApC,GAAkD;MAAA,OAAMA,WAAN;IAAzD;EAD0B,GAE1B,CAACA,WAAD,CAF0B,CAA9B;EAIA,IAAMc,cAAc,GAAGC,iBAAiB,CAACd,WAAD,EAAcU,KAAd,CAAxC;EACA,IAAMK,YAAY,GAAGb,OAAO,CACxB;IAAA,OAAO,OAAOJ,SAAP,KAAqB,UAArB,GAAkCA,SAAlC,GAA8C;MAAA,OAAMA,SAAN;IAArD;EADwB,GAExB,CAACA,SAAD,CAFwB,CAA5B;EAKA,OAAO;IACHG,UAAU,EAAVA,UADG;IAEHK,IAAI,EAAJA,IAFG;IAGHE,SAAS,EAATA,SAHG;IAIHI,cAAc,EAAdA,cAJG;IAKHC,cAAc,EAAdA,cALG;IAMHE,YAAY,EAAZA;EANG,CAAP;AAQH;;IAEYC,aAAa,GAAG,SAAhBA,aAAgB,QAUvB;EAAA,IATFC,QASE,SATFA,QASE;EAAA,IARFC,IAQE,SARFA,IAQE;EAAA,IAPFC,KAOE,SAPFA,KAOE;EAAA,IANFC,KAME,SANFA,KAME;EAAA,IALF5E,KAKE,SALFA,KAKE;EAAA,IAJF6E,WAIE,SAJFA,WAIE;EAAA,IAHFC,MAGE,SAHFA,MAGE;EAAA,IAFFC,YAEE,SAFFA,YAEE;EAAA,IADFC,MACE,SADFA,MACE;EACF,IAAMC,iBAAiB,GAAGvB,OAAO,CAAC,YAAM;IACpC,IAAIwB,YAAWP,KAAX,CAAJ,EAAuB,OAAOA,KAAP;IACvB,OAAO,UAACQ,OAAD,EAAUC,KAAV,EAAoB;MACvB,IAAMC,UAAU,GAAGC,KAAIH,OAAJ,EAAaR,KAAb,CAAnB;;MACA,IAAMY,QAAQ,GAAGD,KAAIF,KAAJ,EAAWT,KAAX,CAAjB;;MAEA,OAAOU,UAAU,IAAIA,UAAU,KAAKE,QAApC;IAJJ;EAF6B,GAQ9B,CAACZ,KAAD,CAR8B,CAAjC;EASA,IAAMa,QAAQ,GAAG9B,OAAO,CAAC;IAAA,OAAOwB,YAAWN,KAAX,IAAoBA,KAApB,GAA4B,iBAAK;MAAA,OAAIU,KAAIF,KAAJ,EAAWR,KAAX,CAAJ;IAAxC;EAAD,GAAiE,CACrFA,KADqF,CAAjE,CAAxB;EAGA,IAAMa,QAAQ,GAAG/B,OAAO,CAAC;IAAA,OAAOwB,YAAWlF,KAAX,IAAoBA,KAApB,GAA4B,iBAAK;MAAA,OAAIsF,KAAIF,KAAJ,EAAWpF,KAAX,CAAJ;IAAxC;EAAD,GAAiE,CACrFA,KADqF,CAAjE,CAAxB;EAGA,IAAM0F,cAAc,GAAGhC,OAAO,CAAC,YAAM;IACjC,IAAImB,WAAW,KAAKc,SAApB,EAA+B,OAAO,aAAC;MAAA,OAAIC,CAAJ;IAAR;IAC/B,IAAIV,YAAWL,WAAX,CAAJ,EAA6B,OAAOA,WAAP;IAC7B,OAAOgB,MAAM,CAAChB,WAAD,CAAb;EAH0B,GAI3B,CAACA,WAAD,CAJ2B,CAA9B;EAMA,IAAMiB,UAAU,GAAGpC,OAAO,CAAC;IAAA,OAAMqC,uBAAuB,CAACjB,MAAD,CAAvBiB,CAAgCf,MAAhCe,CAAuCf,MAAvCe,CAAN;EAAD,GAAuD,CAC7EjB,MAD6E,EAE7EE,MAF6E,CAAvD,CAA1B;EAIA,IAAMT,YAAY,GAAGb,OAAO,CAAC,YAAM;IAC/B,OAAO,mBAAW;MACd,IAAIyB,OAAO,CAACnF,KAARmF,KAAkBQ,SAAtB,EAAiC,OAAOZ,YAAP;MACjC,OAAOe,UAAU,CAACX,OAAO,CAACnF,KAAT,CAAjB;IAFJ;EADwB,GAKzB,CAAC8F,UAAD,EAAaf,YAAb,CALyB,CAA5B;EAOA,IAAMiB,aAAa,GAAGtC,OAAO,CACzB;IAAA,OACIe,QAAQ,CAACwB,GAATxB,CAAa,mBAAW;MACpB,IAAMW,KAAK,GAAGV,IAAI,CAACwB,IAALxB,CAAU,iBAAK;QAAA,OAAIO,iBAAiB,CAACE,OAAD,EAAUC,KAAV,CAArB;MAAf,EAAd;MACA,IAAMe,UAAU,GAAGV,QAAQ,CAACL,KAAD,CAA3B;;MAEA,IAAIA,KAAJ,EAAW;QACP,IAAMgB,eAAe,qCACdjB,OADc;UAEjBT,IAAI,EAAEU,KAFW;UAGjBpF,KAAK,EAAEmG,UAHU;UAIjBE,cAAc,EAAEX,cAAc,CAACS,UAAD;QAJb,EAArB;;QAMAC,eAAe,CAACE,KAAhBF,GAAwB7B,YAAY,CAAC6B,eAAD,CAApCA;QACAA,eAAe,CAACxB,KAAhBwB,GAAwBZ,QAAQ,CAACY,eAAD,CAAhCA;QAEA,OAAOA,eAAP;MACH;;MAED,OAAOjB,OAAP;IAjBJ,EADJ;EADyB,GAqBzB,CAACV,QAAD,EAAWC,IAAX,EAAiBO,iBAAjB,EAAoCQ,QAApC,EAA8CC,cAA9C,EAA8DnB,YAA9D,CArByB,CAA7B;EAwBA,IAAMgC,UAAU,GAAGC,+BAA+B,CAAC;IAC/C7C,KAAK,EAAEmC,UADwC;IAE/CjB,WAAW,EAAEa;EAFkC,CAAD,CAAlD;EAKA,OAAO;IACHI,UAAU,EAAVA,UADG;IAEHvB,YAAY,EAAZA,YAFG;IAGHyB,aAAa,EAAbA,aAHG;IAIHN,cAAc,EAAdA,cAJG;IAKHa,UAAU,EAAVA;EALG,CAAP;AAOH;;AChKD,IAAME,iBAAiB,GAAGC,IAAI,CAAC,gBAAiB;EAAA,IAAdvB,OAAc,QAAdA,OAAc;EAC5C,IAAIA,OAAO,CAACT,IAARS,KAAiBQ,SAArB,EAAgC,OAAO,IAAP;EAEhC,OACIgB,oBAACC,YAAD;IACIC,EAAE,EAAE1B,OAAO,CAACP,KADhB;IAEI0B,KAAK,EAAEnB,OAAO,CAACmB,KAFnB;IAGIQ,UAAU,EAAE,IAHhB;IAII9G,KAAK,EAAEmF,OAAO,CAACkB;EAJnB,EADJ;AAH0B,EAA9B;AAiBAI,iBAAiB,CAACM,WAAlBN,GAAgC,mBAAhCA;ACfA,IAAMO,eAAe,GAAG;EACpBvC,QAAQ,EAAEwC,SAAS,CAACC,OAAVD,CACNA,SAAS,CAACE,KAAVF,CAAgB;IACZJ,EAAE,EAAEI,SAAS,CAACG,MAAVH,CAAiBI,UADT;IAEZC,IAAI,EAAEL,SAAS,CAACM,KAAVN,CAAgB,CAAC,SAAD,CAAhBA,EAA6BI,UAFvB;IAGZG,UAAU,EAAEP,SAAS,CAAC1G,MAHV;IAIZkH,QAAQ,EAAER,SAAS,CAAC1G,MAAV0G,CAAiBI;EAJf,CAAhBJ,CADMA,EAORI,UARkB;EAUpBnE,cAAc,EAAE+D,SAAS,CAACM,KAAVN,CAAgBhH,MAAM,CAACQ,IAAPR,CAAYyB,cAAZzB,CAAhBgH,EAA6CI,UAVzC;EAWpBlE,eAAe,EAAE8D,SAAS,CAACS,MAAVT,CAAiBI,UAXd;EAYpBjE,qBAAqB,EAAE6D,SAAS,CAACC,OAAVD,CAAkBA,SAAS,CAACS,MAA5BT,EAAoCI,UAZvC;EAapBhE,kBAAkB,EAAE4D,SAAS,CAACC,OAAVD,CAAkBA,SAAS,CAACS,MAA5BT,EAAoCI,UAbpC;EAepB/D,SAAS,EAAE2D,SAAS,CAACU,SAAVV,CAAoB,CAACA,SAAS,CAACG,MAAX,EAAmBH,SAAS,CAACW,IAA7B,CAApBX,EAAwDI,UAf/C;EAgBpB9D,WAAW,EAAE0D,SAAS,CAACU,SAAVV,CAAoB,CAACA,SAAS,CAACS,MAAX,EAAmBT,SAAS,CAACW,IAA7B,CAApBX,EAAwDI,UAhBjD;EAiBpB7D,WAAW,EAAEqE,sBAAsB,CAACR,UAjBhB;EAmBpBS,eAAe,EAAEb,SAAS,CAACc,IAAVd,CAAeI,UAnBZ;EAoBpBW,kBAAkB,EAAEf,SAAS,CAACS,MAAVT,CAAiBI,UApBjB;EAqBpBY,kBAAkB,EAAEhB,SAAS,CAACG,MAAVH,CAAiBI,UArBjB;EAuBpBa,aAAa,EAAEjB,SAAS,CAACc,IAAVd,CAAeI,UAvBV;EAwBpBc,YAAY,EAAElB,SAAS,CAACW,IAAVX,CAAeI,UAxBT;EAyBpBe,WAAW,EAAEnB,SAAS,CAACW,IAAVX,CAAeI,UAzBR;EA0BpBgB,YAAY,EAAEpB,SAAS,CAACW,IAAVX,CAAeI,UA1BT;EA2BpBiB,OAAO,EAAErB,SAAS,CAACW,IAAVX,CAAeI,UA3BJ;EA4BpBkB,OAAO,EAAEtB,SAAS,CAACuB,GA5BC;EA8BpBC,MAAM,EAAExB,SAAS,CAACC,OAAVD,CACJA,SAAS,CAACU,SAAVV,CAAoB,CAACA,SAAS,CAACM,KAAVN,CAAgB,CAAC,WAAD,EAAc,UAAd,CAAhBA,CAAD,EAA6CA,SAAS,CAACW,IAAvD,CAApBX,CADIA,EAENI;AAhCkB,CAAxB;;IAmCaqB,eAAe,qCACrB1B,eADqB;EAExB2B,IAAI,EAAE1B,SAAS,CAACG,MAAVH,CAAiBI;AAFC;;IAKfuB,qBAAqB;EAC9BC,UAAU,EAAE5B,SAAS,CAACS,MAAVT,CAAiBI;AADC,GAE3BL,eAF2B;;AAKlC,IAAM8B,yBAAyB,GAAG;EAC9BpE,IAAI,EAAEuC,SAAS,CAACC,OAAVD,CAAkBA,SAAS,CAAC1G,MAA5B0G,EAAoCI,UADZ;EAE9B1C,KAAK,EAAEsC,SAAS,CAACU,SAAVV,CAAoB,CAACA,SAAS,CAACG,MAAX,EAAmBH,SAAS,CAACW,IAA7B,CAApBX,EAAwDI,UAFjC;EAG9BzC,KAAK,EAAEqC,SAAS,CAACU,SAAVV,CAAoB,CAACA,SAAS,CAACG,MAAX,EAAmBH,SAAS,CAACW,IAA7B,CAApBX,EAAwDI,UAHjC;EAI9BrH,KAAK,EAAEiH,SAAS,CAACU,SAAVV,CAAoB,CAACA,SAAS,CAACG,MAAX,EAAmBH,SAAS,CAACW,IAA7B,CAApBX,EAAwDI,UAJjC;EAK9BxC,WAAW,EAAEoC,SAAS,CAACU,SAAVV,CAAoB,CAACA,SAAS,CAACG,MAAX,EAAmBH,SAAS,CAACW,IAA7B,CAApBX,CALiB;EAM9BnC,MAAM,EAAEiE,0BAA0B,CAAC1B,UANL;EAO9BrC,MAAM,EAAEiC,SAAS,CAACC,OAAVD,CAAkBA,SAAS,CAACS,MAA5BT,EAAoCI,UAPd;EAQ9BtC,YAAY,EAAEkC,SAAS,CAACG,MAAVH,CAAiBI,UARD;EAS9BoB,MAAM,EAAExB,SAAS,CAACC,OAAVD,CACJA,SAAS,CAACU,SAAVV,CAAoB,CAACA,SAAS,CAACM,KAAVN,CAAgB,CAAC,WAAD,EAAc,UAAd,EAA0B,SAA1B,CAAhBA,CAAD,EAAwDA,SAAS,CAACW,IAAlE,CAApBX,CADIA,EAENI;AAX4B,CAAlC;;IAca2B,mBAAmB,oDACzBN,eADyB,GAEzBI,yBAFyB;EAG5BH,IAAI,EAAE1B,SAAS,CAACG,MAAVH,CAAiBI;AAHK;;IAMnB4B,yBAAyB,qCAC/BL,qBAD+B,GAE/BE,yBAF+B;;AAKtC,IAAMI,kBAAkB,GAAG;EACvBhG,cAAc,EAAE,UADO;EAEvBC,eAAe,EAAE,GAFM;EAGvBC,qBAAqB,EAAE,CAAC,GAAD,EAAM,GAAN,CAHA;EAIvBC,kBAAkB,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJG;EAMvByE,eAAe,EAAE,KANM;EAOvBE,kBAAkB,EAAE,GAPG;EAQvBC,kBAAkB,EAAE,SARG;EAUvB3E,SAAS,EAAE,SAVY;EAWvBC,WAAW,EAAE,CAXU;EAYvBC,WAAW,EAAE,SAZU;EAcvB0E,aAAa,EAAE,IAdQ;EAevBC,YAAY,EAAE,wBAAM,CAfG;EAgBvBE,YAAY,EAAE,wBAAM,CAhBG;EAiBvBD,WAAW,EAAE,uBAAM,CAjBI;EAkBvBE,OAAO,EAAE,mBAAM,CAlBQ;EAoBvBG,MAAM,EAAE,CAAC,WAAD,EAAc,UAAd,CApBe;EAqBvBU,OAAO,EAAE;AArBc,CAA3B;;IAwBaC,kBAAkB,qCACxBF,kBADwB;EAE3BP,IAAI,EAAE;AAFqB;;IAKlBU,wBAAwB,qCAC9BH,kBAD8B;EAEjCL,UAAU,EAAE,OAAOS,MAAP,KAAkB,WAAlB,GAAgCA,MAAM,CAACC,gBAAPD,IAA2B,CAA3D,GAA+D;AAF1C;;AAKrC,IAAME,4BAA4B,GAAG;EACjC7E,KAAK,EAAE,IAD0B;EAEjCC,KAAK,EAAE,IAF0B;EAGjC5E,KAAK,EAAE,OAH0B;EAIjC8E,MAAM,EAAE,QAJyB;EAKjCC,YAAY,EAAE,MALmB;EAMjCwD,OAAO,EAAE9B,iBANwB;EAOjCgC,MAAM,EAAE,CAAC,WAAD,EAAc,UAAd,EAA0B,SAA1B;AAPyB,CAArC;;IAUagB,sBAAsB,oDAC5BL,kBAD4B,GAE5BI,4BAF4B;EAG/Bb,IAAI,EAAE;AAHyB;;IAMtBe,4BAA4B,qCAClCL,wBADkC,GAElCG,4BAFkC;;AC3HzC,IAAMG,YAAY,GAAGjD,IAAI,CAAC,gBAA+C;EAAA,IAA5C5C,IAA4C,QAA5CA,IAA4C;EAAA,IAAtCE,SAAsC,QAAtCA,SAAsC;EAAA,IAA3B4F,SAA2B,QAA3BA,SAA2B;EAAA,IAAhBC,SAAgB,QAAhBA,SAAgB;EACrE,OAAOlD;IAAMmD,IAAI,EAAC,MAAX;IAAkBC,WAAW,EAAEH,SAA/B;IAA0CI,MAAM,EAAEH,SAAlD;IAA6DjE,CAAC,EAAE9B,IAAI,CAACE,SAAS,EAAV;EAApE,EAAP;AADqB,EAAzB;AAWA2F,YAAY,CAAC5C,WAAb4C,GAA2B,cAA3BA;ACXA,IAAMM,aAAa,GAAGvD,IAAI,CACtB,gBAUM;EAAA,IATFvB,OASE,QATFA,OASE;EAAA,IARFrB,IAQE,QARFA,IAQE;EAAA,IAPFR,SAOE,QAPFA,SAOE;EAAA,IANFC,WAME,QANFA,WAME;EAAA,IALFC,WAKE,QALFA,WAKE;EAAA,IAJF8E,QAIE,QAJFA,OAIE;EAAA,IAHFH,aAGE,QAHFA,YAGE;EAAA,IAFFC,YAEE,QAFFA,WAEE;EAAA,IADFC,aACE,QADFA,YACE;EACF,OACI1B;IACI5G,GAAG,EAAEoF,OAAO,CAAC0B,EADjB;IAEIiD,IAAI,EAAExG,SAFV;IAGIyG,WAAW,EAAExG,WAHjB;IAIIyG,MAAM,EAAExG,WAJZ;IAKI0G,cAAc,EAAC,OALnB;IAMItE,CAAC,EAAE9B,IAAI,CAACqB,OAAD,CANX;IAOIgD,YAAY,EAAE,6BAAK;MAAA,OAAIA,aAAY,CAAChD,OAAD,EAAUgF,KAAV,CAAhB;IAPvB;IAQI/B,WAAW,EAAE,4BAAK;MAAA,OAAIA,YAAW,CAACjD,OAAD,EAAUgF,KAAV,CAAf;IARtB;IASI9B,YAAY,EAAE,6BAAK;MAAA,OAAIA,aAAY,CAAClD,OAAD,EAAUgF,KAAV,CAAhB;IATvB;IAUI7B,OAAO,EAAE,wBAAK;MAAA,OAAIA,QAAO,CAACnD,OAAD,EAAUgF,KAAV,CAAX;IAAA;EAVlB,EADJ;AAZkB,EAA1B;AAgDAF,aAAa,CAAClD,WAAdkD,GAA4B,eAA5BA;AC3CA,IAAMG,MAAM,GAAG1D,IAAI,CAAC,iBAAS;EAAA,IAErB1D,KAFqB,GAqBrBqH,KArBqB,CAErBrH,KAFqB;EAAA,IAGrBC,MAHqB,GAqBrBoH,KArBqB,CAGrBpH,MAHqB;EAAA,IAIbqH,aAJa,GAqBrBD,KArBqB,CAIrBE,MAJqB;EAAA,IAKrB9F,QALqB,GAqBrB4F,KArBqB,CAKrB5F,QALqB;EAAA,IAMrBgE,MANqB,GAqBrB4B,KArBqB,CAMrB5B,MANqB;EAAA,IAOrBvF,cAPqB,GAqBrBmH,KArBqB,CAOrBnH,cAPqB;EAAA,IAQrBC,eARqB,GAqBrBkH,KArBqB,CAQrBlH,eARqB;EAAA,IASrBC,qBATqB,GAqBrBiH,KArBqB,CASrBjH,qBATqB;EAAA,IAUrBC,kBAVqB,GAqBrBgH,KArBqB,CAUrBhH,kBAVqB;EAAA,IAWrBC,SAXqB,GAqBrB+G,KArBqB,CAWrB/G,SAXqB;EAAA,IAYrBC,WAZqB,GAqBrB8G,KArBqB,CAYrB9G,WAZqB;EAAA,IAarBC,WAbqB,GAqBrB6G,KArBqB,CAarB7G,WAbqB;EAAA,IAcrBsE,eAdqB,GAqBrBuC,KArBqB,CAcrBvC,eAdqB;EAAA,IAerBE,kBAfqB,GAqBrBqC,KArBqB,CAerBrC,kBAfqB;EAAA,IAgBrBC,kBAhBqB,GAqBrBoC,KArBqB,CAgBrBpC,kBAhBqB;EAAA,IAiBrBC,aAjBqB,GAqBrBmC,KArBqB,CAiBrBnC,aAjBqB;EAAA,IAkBrBI,OAlBqB,GAqBrB+B,KArBqB,CAkBrB/B,OAlBqB;EAAA,IAmBZkC,OAnBY,GAqBrBH,KArBqB,CAmBrB9B,OAnBqB;EAAA,IAoBrBI,IApBqB,GAqBrB0B,KArBqB,CAoBrB1B,IApBqB;;EAAA,qBAsBmB8B,aAAa,CAACzH,KAAD,EAAQC,MAAR,EAAgBqH,aAAhB,CAtBhC;EAAA,IAsBjBC,MAtBiB,kBAsBjBA,MAtBiB;EAAA,IAsBTG,UAtBS,kBAsBTA,UAtBS;EAAA,IAsBGC,WAtBH,kBAsBGA,WAtBH;;EAAA,iBAuBiD5H,SAAS,CAAC;IAChFC,KAAK,EAALA,KADgF;IAEhFC,MAAM,EAANA,MAFgF;IAGhFC,cAAc,EAAdA,cAHgF;IAIhFC,eAAe,EAAfA,eAJgF;IAKhFC,qBAAqB,EAArBA,qBALgF;IAMhFC,kBAAkB,EAAlBA,kBANgF;IAOhFC,SAAS,EAATA,SAPgF;IAQhFC,WAAW,EAAXA,WARgF;IAShFC,WAAW,EAAXA;EATgF,CAAD,CAvB1D;EAAA,IAuBjBQ,SAvBiB,cAuBjBA,SAvBiB;EAAA,IAuBNF,IAvBM,cAuBNA,IAvBM;EAAA,IAuBAS,YAvBA,cAuBAA,YAvBA;EAAA,IAuBcH,cAvBd,cAuBcA,cAvBd;EAAA,IAuB8BC,cAvB9B,cAuB8BA,cAvB9B;;EAmCzB,IAAMH,KAAK,GAAGC,QAAQ,EAAtB;;EAnCyB,kBAqCqByG,UAAU,EArC/B;EAAA,IAqCjBC,oBArCiB,eAqCjBA,oBArCiB;EAAA,IAqCKC,WArCL,eAqCKA,WArCL;;EAsCzB,IAAMC,WAAW,GAAGC,WAAW,CAC3B,UAAC7F,OAAD,EAAUgF,KAAV;IAAA,OAAoBjC,aAAa,IAAII,OAAjBJ,IAA4BI,OAAO,CAACnD,OAAD,EAAUgF,KAAV,CAAvD;EAD2B,GAE3B,CAACjC,aAAD,EAAgBI,OAAhB,CAF2B,CAA/B;EAIA,IAAM2C,gBAAgB,GAAGD,WAAW,CAChC,UAAC7F,OAAD,EAAUgF,KAAV;IAAA,OACIjC,aAAa,IAAIsC,OAAjBtC,IAA4B2C,oBAAoB,CAAClE,oBAAC6D,OAAD;MAASrF,OAAO,EAAEA;IAAlB,EAAD,EAAgCgF,KAAhC,CADpD;EADgC,GAGhC,CAACjC,aAAD,EAAgB2C,oBAAhB,EAAsCL,OAAtC,CAHgC,CAApC;EAKA,IAAMU,eAAe,GAAGF,WAAW,CAC/B,UAAC7F,OAAD,EAAUgF,KAAV;IAAA,OACIjC,aAAa,IAAIsC,OAAjBtC,IAA4B2C,oBAAoB,CAAClE,oBAAC6D,OAAD;MAASrF,OAAO,EAAEA;IAAlB,EAAD,EAAgCgF,KAAhC,CADpD;EAD+B,GAG/B,CAACjC,aAAD,EAAgB2C,oBAAhB,EAAsCL,OAAtC,CAH+B,CAAnC;EAKA,IAAMW,gBAAgB,GAAGH,WAAW,CAAC;IAAA,OAAM9C,aAAa,IAAI4C,WAAW,EAAlC;EAAD,GAAuC,CACvE5C,aADuE,EAEvE4C,WAFuE,CAAvC,CAApC;EAKA,OACInE,oBAACyE,UAAD;IACIpI,KAAK,EAAE0H,UADX;IAEIzH,MAAM,EAAE0H,WAFZ;IAGIJ,MAAM,EAAEA,MAHZ;IAIIrG,KAAK,EAAEA,KAJX;IAKIyE,IAAI,EAAEA;EALV,GAOKF,MAAM,CAACxC,GAAPwC,CAAW,UAAC4C,KAAD,EAAQlK,CAAR,EAAc;IACtB,IAAIkK,KAAK,KAAK,WAAd,EAA2B;MACvB,IAAIvD,eAAe,KAAK,IAAxB,EAA8B,OAAO,IAAP;MAE9B,OACInB,oBAACgD,YAAD;QACI5J,GAAG,EAAC,WADR;QAEI+D,IAAI,EAAEA,IAFV;QAGIE,SAAS,EAAEA,SAHf;QAII4F,SAAS,EAAE5B,kBAJf;QAKI6B,SAAS,EAAE5B;MALf,EADJ;IASH;;IACD,IAAIoD,KAAK,KAAK,UAAd,EAA0B;MACtB,OACI1E,oBAAC2E,QAAD;QAAUvL,GAAG,EAAC;MAAd,GACK0E,QAAQ,CAACwB,GAATxB,CAAa,mBAAO;QAAA,OACjBkC,oBAACsD,aAAD;UACIlK,GAAG,EAAEoF,OAAO,CAAC0B,EADjB;UAEI1B,OAAO,EAAEA,OAFb;UAGIrB,IAAI,EAAEA,IAHV;UAIIR,SAAS,EAAEiB,YAAY,CAACY,OAAD,CAJ3B;UAKI5B,WAAW,EAAEa,cAAc,CAACe,OAAD,CAL/B;UAMI3B,WAAW,EAAEa,cAAc,CAACc,OAAD,CAN/B;UAOIgD,YAAY,EAAE8C,gBAPlB;UAQI7C,WAAW,EAAE8C,eARjB;UASI7C,YAAY,EAAE8C,gBATlB;UAUI7C,OAAO,EAAEyC;QAVb,EADiB;MAApB,EADL,CADJ;IAkBH;;IAED,OAAOpE,oBAAC2E,QAAD;MAAUvL,GAAG,EAAEoB;IAAf,GAAmBkK,KAAK,CAAChB,KAAD,CAAxB,CAAP;EAnCH,EAPL,CADJ;AAzDe,EAAnB;AA0GAD,MAAM,CAACrD,WAAPqD,GAAqB,QAArBA;AAEAA,MAAM,CAACmB,YAAPnB,GAAsBhB,kBAAtBgB;AAEA,eAAeoB,aAAa,CAACpB,MAAD,CAA5B;;IClHMqB,gBAAgB,GAAG,SAAnBA,gBAAmB,QAAK;EAAA,OAC1B9E,oBAAC+E,iBAAD,QACK;IAAA,IAAG1I,KAAH,QAAGA,KAAH;IAAA,IAAUC,MAAV,QAAUA,MAAV;IAAA,OAAuB0D,oBAACyD,QAAD;MAAQpH,KAAK,EAAEA,KAAf;MAAsBC,MAAM,EAAEA;IAA9B,GAA0CoH,KAA1C,EAAvB;EADL,EAD0B;AAAA;;ACZf,SAASsB,eAAT,CAAyBC,GAAzB,EAA8B;EAC3C,IAAIC,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAJ,EAAwB,OAAOA,GAAP;AAC1B;;ACFe,SAASG,qBAAT,CAA+BH,GAA/B,EAAoCzK,CAApC,EAAuC;EACpD,IAAI,OAAO6K,MAAP,KAAkB,WAAlB,IAAiC,EAAEA,MAAM,CAACC,QAAP,IAAmBhM,MAAM,CAAC2L,GAAD,CAA3B,CAArC,EAAwE;EACxE,IAAIM,IAAI,GAAG,EAAX;EACA,IAAIC,EAAE,GAAG,IAAT;EACA,IAAIC,EAAE,GAAG,KAAT;EACA,IAAIC,EAAE,GAAG1G,SAAT;;EAEA,IAAI;IACF,KAAK,IAAI2G,EAAE,GAAGV,GAAG,CAACI,MAAM,CAACC,QAAR,CAAH,EAAT,EAAiCM,EAAtC,EAA0C,EAAEJ,EAAE,GAAG,CAACI,EAAE,GAAGD,EAAE,CAACE,IAAH,EAAN,EAAiBC,IAAxB,CAA1C,EAAyEN,EAAE,GAAG,IAA9E,EAAoF;MAClFD,IAAI,CAACnL,IAAL,CAAUwL,EAAE,CAACvM,KAAb;;MAEA,IAAImB,CAAC,IAAI+K,IAAI,CAAC7K,MAAL,KAAgBF,CAAzB,EAA4B;IAC7B;EACF,CAND,CAME,OAAOuL,GAAP,EAAY;IACZN,EAAE,GAAG,IAAL;IACAC,EAAE,GAAGK,GAAL;EACD,CATD,SASU;IACR,IAAI;MACF,IAAI,CAACP,EAAD,IAAOG,EAAE,CAAC,QAAD,CAAF,IAAgB,IAA3B,EAAiCA,EAAE,CAAC,QAAD,CAAF;IAClC,CAFD,SAEU;MACR,IAAIF,EAAJ,EAAQ,MAAMC,EAAN;IACT;EACF;;EAED,OAAOH,IAAP;AACF;;ACzBe,SAASS,iBAAT,CAA2Bf,GAA3B,EAAgCgB,GAAhC,EAAqC;EAClD,IAAIA,GAAG,IAAI,IAAP,IAAeA,GAAG,GAAGhB,GAAG,CAACvK,MAA7B,EAAqCuL,GAAG,GAAGhB,GAAG,CAACvK,MAAV;;EAErC,KAAK,IAAIF,CAAC,GAAG,CAAR,EAAW0L,IAAI,GAAG,IAAIhB,KAAJ,CAAUe,GAAV,CAAvB,EAAuCzL,CAAC,GAAGyL,GAA3C,EAAgDzL,CAAC,EAAjD,EAAqD;IACnD0L,IAAI,CAAC1L,CAAD,CAAJ,GAAUyK,GAAG,CAACzK,CAAD,CAAb;EACD;;EAED,OAAO0L,IAAP;AACF;;ACPe,SAASC,2BAAT,CAAqCC,CAArC,EAAwCC,MAAxC,EAAgD;EAC7D,IAAI,CAACD,CAAL,EAAQ;EACR,IAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B,OAAOE,iBAAgB,CAACF,CAAD,EAAIC,MAAJ,CAAvB;EAC3B,IAAIE,CAAC,GAAGjN,MAAM,CAACkN,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BN,CAA/B,EAAkCO,KAAlC,CAAwC,CAAxC,EAA2C,CAAC,CAA5C,CAAR;EACA,IAAIJ,CAAC,KAAK,QAAN,IAAkBH,CAAC,CAACQ,WAAxB,EAAqCL,CAAC,GAAGH,CAAC,CAACQ,WAAF,CAAcC,IAAlB;EACrC,IAAIN,CAAC,KAAK,KAAN,IAAeA,CAAC,KAAK,KAAzB,EAAgC,OAAOrB,KAAK,CAAC4B,IAAN,CAAWP,CAAX,CAAP;EAChC,IAAIA,CAAC,KAAK,WAAN,IAAqB,2CAA2CQ,IAA3C,CAAgDR,CAAhD,CAAzB,EAA6E,OAAOD,iBAAgB,CAACF,CAAD,EAAIC,MAAJ,CAAvB;AAC/E;;ACRe,SAASW,gBAAT,GAA4B;EACzC,MAAM,IAAIC,SAAJ,CAAc,2IAAd,CAAN;AACF;;ACEe,SAASC,cAAT,CAAwBjC,GAAxB,EAA6BzK,CAA7B,EAAgC;EAC7C,OAAO2M,eAAc,CAAClC,GAAD,CAAdkC,IAAuBC,qBAAoB,CAACnC,GAAD,EAAMzK,CAAN,CAA3C2M,IAAuDE,2BAA0B,CAACpC,GAAD,EAAMzK,CAAN,CAAjF2M,IAA6FG,gBAAe,EAAnH;AACF;;ACSA,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAC/D,KAAD,EAAQgE,EAAR,EAAY1J,QAAZ,EAAsBhB,UAAtB,EAAqC;EAAA,yBACnD2K,iBAAiB,CAACD,EAAD,EAAKhE,KAAL,CADkC;EAAA;EAAA,IAC3DkE,CAD2D;EAAA,IACxDC,CADwD;;EAGlE,OAAO7J,QAAQ,CAACyB,IAATzB,CAAc,aAAC;IAAA,OAAI8J,WAAW,CAACC,CAAD,EAAI/K,UAAU,CAACgL,MAAXhL,CAAkB,CAAC4K,CAAD,EAAIC,CAAJ,CAAlB7K,CAAJ,CAAf;EAAf,EAAP;AAHJ;;AAMA,IAAMiL,YAAY,GAAGhI,IAAI,CAAC,iBAAS;EAAA,IAE3B1D,KAF2B,GA0B3BqH,KA1B2B,CAE3BrH,KAF2B;EAAA,IAG3BC,MAH2B,GA0B3BoH,KA1B2B,CAG3BpH,MAH2B;EAAA,IAInBqH,aAJmB,GA0B3BD,KA1B2B,CAI3BE,MAJ2B;EAAA,IAK3B1B,UAL2B,GA0B3BwB,KA1B2B,CAK3BxB,UAL2B;EAAA,IAM3BpE,QAN2B,GA0B3B4F,KA1B2B,CAM3B5F,QAN2B;EAAA,IAO3BgE,MAP2B,GA0B3B4B,KA1B2B,CAO3B5B,MAP2B;EAAA,IAS3BvF,cAT2B,GA0B3BmH,KA1B2B,CAS3BnH,cAT2B;EAAA,IAU3BC,eAV2B,GA0B3BkH,KA1B2B,CAU3BlH,eAV2B;EAAA,IAW3BC,qBAX2B,GA0B3BiH,KA1B2B,CAW3BjH,qBAX2B;EAAA,IAY3BC,kBAZ2B,GA0B3BgH,KA1B2B,CAY3BhH,kBAZ2B;EAAA,IAc3BC,SAd2B,GA0B3B+G,KA1B2B,CAc3B/G,SAd2B;EAAA,IAe3BC,WAf2B,GA0B3B8G,KA1B2B,CAe3B9G,WAf2B;EAAA,IAgB3BC,WAhB2B,GA0B3B6G,KA1B2B,CAgB3B7G,WAhB2B;EAAA,IAkB3BsE,eAlB2B,GA0B3BuC,KA1B2B,CAkB3BvC,eAlB2B;EAAA,IAmB3BE,kBAnB2B,GA0B3BqC,KA1B2B,CAmB3BrC,kBAnB2B;EAAA,IAoB3BC,kBApB2B,GA0B3BoC,KA1B2B,CAoB3BpC,kBApB2B;EAAA,IAsB3BC,aAtB2B,GA0B3BmC,KA1B2B,CAsB3BnC,aAtB2B;EAAA,IAuB3BI,OAvB2B,GA0B3B+B,KA1B2B,CAuB3B/B,OAvB2B;EAAA,IAwB3BF,WAxB2B,GA0B3BiC,KA1B2B,CAwB3BjC,WAxB2B;EAAA,IAyBlBoC,OAzBkB,GA0B3BH,KA1B2B,CAyB3B9B,OAzB2B;EA4B/B,IAAMoG,QAAQ,GAAGC,MAAM,CAAC,IAAD,CAAvB;EACA,IAAM1K,KAAK,GAAGC,QAAQ,EAAtB;;EA7B+B,qBA8BasG,aAAa,CAACzH,KAAD,EAAQC,MAAR,EAAgBqH,aAAhB,CA9B1B;EAAA,IA8BvBC,MA9BuB,kBA8BvBA,MA9BuB;EAAA,IA8BfG,UA9Be,kBA8BfA,UA9Be;EAAA,IA8BHC,WA9BG,kBA8BHA,WA9BG;;EAAA,iBA+BuD5H,SAAS,CAC3F;IACIC,KAAK,EAALA,KADJ;IAEIC,MAAM,EAANA,MAFJ;IAGIC,cAAc,EAAdA,cAHJ;IAIIC,eAAe,EAAfA,eAJJ;IAKIC,qBAAqB,EAArBA,qBALJ;IAMIC,kBAAkB,EAAlBA,kBANJ;IAOIC,SAAS,EAATA,SAPJ;IAQIC,WAAW,EAAXA,WARJ;IASIC,WAAW,EAAXA;EATJ,CAD2F,CA/BhE;EAAA,IA+BvBC,UA/BuB,cA+BvBA,UA/BuB;EAAA,IA+BXO,SA/BW,cA+BXA,SA/BW;EAAA,IA+BAF,IA/BA,cA+BAA,IA/BA;EAAA,IA+BMS,YA/BN,cA+BMA,YA/BN;EAAA,IA+BoBH,cA/BpB,cA+BoBA,cA/BpB;EAAA,IA+BoCC,cA/BpC,cA+BoCA,cA/BpC;;EA6C/BwK,SAAS,CAAC,YAAM;IACZ,IAAI,CAACF,QAAL,EAAe;IAEfA,QAAQ,CAACG,OAATH,CAAiB3L,KAAjB2L,GAAyBjE,UAAU,GAAG7B,UAAtC8F;IACAA,QAAQ,CAACG,OAATH,CAAiB1L,MAAjB0L,GAA0BhE,WAAW,GAAG9B,UAAxC8F;IAEA,IAAMI,GAAG,GAAGJ,QAAQ,CAACG,OAATH,CAAiBK,UAAjBL,CAA4B,IAA5BA,CAAZ;IAEAI,GAAG,CAACpL,KAAJoL,CAAUlG,UAAVkG,EAAsBlG,UAAtBkG;IAEAA,GAAG,CAACE,SAAJF,GAAgB7K,KAAK,CAACgL,UAAtBH;IACAA,GAAG,CAACI,QAAJJ,CAAa,CAAbA,EAAgB,CAAhBA,EAAmBrE,UAAnBqE,EAA+BpE,WAA/BoE;IACAA,GAAG,CAACnL,SAAJmL,CAAcxE,MAAM,CAAC6E,IAArBL,EAA2BxE,MAAM,CAAC8E,GAAlCN;IAEAjL,IAAI,CAACwL,OAALxL,CAAaiL,GAAbjL;IAEA2E,MAAM,CAAClH,OAAPkH,CAAe,iBAAS;MACpB,IAAI4C,KAAK,KAAK,WAAd,EAA2B;QACvB,IAAIvD,eAAe,KAAK,IAAxB,EAA8B;UAC1BiH,GAAG,CAACnF,SAAJmF,GAAgB/G,kBAAhB+G;UACAA,GAAG,CAACQ,WAAJR,GAAkB9G,kBAAlB8G;UACAA,GAAG,CAACS,SAAJT;UACAjL,IAAI,CAACE,SAAS,EAAV,CAAJF;UACAiL,GAAG,CAAC/E,MAAJ+E;QACH;MAPL,OAQO,IAAI1D,KAAK,KAAK,UAAd,EAA0B;QAC7B5G,QAAQ,CAAClD,OAATkD,CAAiB,mBAAW;UACxBsK,GAAG,CAACS,SAAJT;UACAjL,IAAI,CAACqB,OAAD,CAAJrB;UACAiL,GAAG,CAACE,SAAJF,GAAgBxK,YAAY,CAACY,OAAD,CAA5B4J;UACAA,GAAG,CAACjF,IAAJiF;UAEA,IAAMxL,WAAW,GAAGa,cAAc,CAACe,OAAD,CAAlC;;UACA,IAAI5B,WAAW,GAAG,CAAlB,EAAqB;YACjBwL,GAAG,CAACQ,WAAJR,GAAkB1K,cAAc,CAACc,OAAD,CAAhC4J;YACAA,GAAG,CAACnF,SAAJmF,GAAgBxL,WAAhBwL;YACAA,GAAG,CAAC/E,MAAJ+E;UACH;QAXL;MADG,OAcA;QACH1D,KAAK,CAAC0D,GAAD,EAAM1E,KAAN,CAALgB;MACH;IAzBL;EAhBK,GA2CN,CACCsD,QADD,EAECjE,UAFD,EAGCC,WAHD,EAICJ,MAJD,EAKC1B,UALD,EAMC3E,KAND,EAOCJ,IAPD,EAQCE,SARD,EASCO,YATD,EAUCH,cAVD,EAWCC,cAXD,EAYCI,QAZD,EAaCgE,MAbD,CA3CM,CAAToG;;EA7C+B,kBAwGejE,UAAU,EAxGzB;EAAA,IAwGvBC,oBAxGuB,eAwGvBA,oBAxGuB;EAAA,IAwGDC,WAxGC,eAwGDA,WAxGC;;EAyG/B,IAAMI,eAAe,GAAGF,WAAW,CAC/B,iBAAS;IACL,IAAI,CAAC9C,aAAD,IAAkB,CAACsC,OAAvB,EAAgC;IAEhC,IAAMrF,OAAO,GAAG+I,wBAAwB,CAAC/D,KAAD,EAAQwE,QAAQ,CAACG,OAAjB,EAA0BrK,QAA1B,EAAoChB,UAApC,CAAxC;;IACA,IAAI0B,OAAJ,EAAa;MACT0F,oBAAoB,CAAClE,oBAAC6D,OAAD;QAASrF,OAAO,EAAEA;MAAlB,EAAD,EAAgCgF,KAAhC,CAApBU;IADJ,OAEO;MACHC,WAAW;IACd;;IACD1C,WAAW,IAAIA,WAAW,CAACjD,OAAO,IAAI,IAAZ,EAAkBgF,KAAlB,CAA1B/B;EAV2B,GAY/B,CAACyC,oBAAD,EAAuBC,WAAvB,EAAoC5C,aAApC,EAAmDsC,OAAnD,EAA4DmE,QAA5D,EAAsElK,QAAtE,EAAgFhB,UAAhF,CAZ+B,CAAnC;EAcA,IAAM0H,gBAAgB,GAAGH,WAAW,CAAC;IAAA,OAAM9C,aAAa,IAAI4C,WAAW,EAAlC;EAAD,GAAuC,CACvE5C,aADuE,EAEvE4C,WAFuE,CAAvC,CAApC;EAIA,IAAMC,WAAW,GAAGC,WAAW,CAC3B,iBAAS;IACL,IAAI,CAAC9C,aAAD,IAAkB,CAACI,OAAvB,EAAgC;IAEhC,IAAMnD,OAAO,GAAG+I,wBAAwB,CAAC/D,KAAD,EAAQwE,QAAQ,CAACG,OAAjB,EAA0BrK,QAA1B,EAAoChB,UAApC,CAAxC;;IACA,IAAI0B,OAAJ,EAAa;MACTmD,OAAO,CAACnD,OAAD,EAAUgF,KAAV,CAAP7B;IACH;EAPsB,GAS3B,CAACJ,aAAD,EAAgByG,QAAhB,EAA0BlK,QAA1B,EAAoChB,UAApC,EAAgD6E,OAAhD,CAT2B,CAA/B;EAYA,OACI3B;IACI8I,GAAG,EAAEd,QADT;IAEI3L,KAAK,EAAE0H,UAAU,GAAG7B,UAFxB;IAGI5F,MAAM,EAAE0H,WAAW,GAAG9B,UAH1B;IAII6G,KAAK,EAAE;MACH1M,KAAK,EAAE0H,UADJ;MAEHzH,MAAM,EAAE0H,WAFL;MAGHgF,MAAM,EAAEzH,aAAa,GAAG,MAAH,GAAY;IAH9B,CAJX;IASIE,WAAW,EAAE8C,eATjB;IAUI7C,YAAY,EAAE8C,gBAVlB;IAWI7C,OAAO,EAAEyC;EAXb,EADJ;AAvIqB,EAAzB;AAwJA2D,YAAY,CAACkB,WAAblB,GAA2B,cAA3BA;AAEAA,YAAY,CAACnD,YAAbmD,GAA4BrF,wBAA5BqF;AAEA,qBAAelD,aAAa,CAACkD,YAAD,CAA5B;;ICrKMmB,sBAAsB,GAAG,SAAzBA,sBAAyB,QAAK;EAAA,OAChClJ,oBAAC+E,iBAAD,QACK;IAAA,IAAG1I,KAAH,QAAGA,KAAH;IAAA,IAAUC,MAAV,QAAUA,MAAV;IAAA,OAAuB0D,oBAAC+H,cAAD;MAAc1L,KAAK,EAAEA,KAArB;MAA4BC,MAAM,EAAEA;IAApC,GAAgDoH,KAAhD,EAAvB;EADL,EADgC;AAAA;;ACKpC,IAAMyF,UAAU,GAAGpJ,IAAI,CACnB,gBA4BM;EAAA,IA3BF1D,KA2BE,QA3BFA,KA2BE;EAAA,IA1BFC,MA0BE,QA1BFA,MA0BE;EAAA,IAzBMqH,aAyBN,QAzBFC,MAyBE;EAAA,IAxBF9F,QAwBE,QAxBFA,QAwBE;EAAA,IAvBFC,IAuBE,QAvBFA,IAuBE;EAAA,IAtBFC,KAsBE,QAtBFA,KAsBE;EAAA,IArBFC,KAqBE,QArBFA,KAqBE;EAAA,IApBF5E,KAoBE,QApBFA,KAoBE;EAAA,IAnBF6E,WAmBE,QAnBFA,WAmBE;EAAA,IAlBF3B,cAkBE,QAlBFA,cAkBE;EAAA,IAjBFC,eAiBE,QAjBFA,eAiBE;EAAA,IAhBFC,qBAgBE,QAhBFA,qBAgBE;EAAA,IAfFC,kBAeE,QAfFA,kBAeE;EAAA,IAdFyB,MAcE,QAdFA,MAcE;EAAA,IAbFE,MAaE,QAbFA,MAaE;EAAA,IAZFD,YAYE,QAZFA,YAYE;EAAA,IAXFxB,WAWE,QAXFA,WAWE;EAAA,IAVFC,WAUE,QAVFA,WAUE;EAAA,IATFsE,eASE,QATFA,eASE;EAAA,IARFE,kBAQE,QARFA,kBAQE;EAAA,IAPFC,kBAOE,QAPFA,kBAOE;EAAA,IANFQ,MAME,QANFA,MAME;EAAA,IALFU,OAKE,QALFA,OAKE;EAAA,IAJFjB,aAIE,QAJFA,aAIE;EAAA,IAHFI,OAGE,QAHFA,OAGE;EAAA,IAFOkC,OAEP,QAFFjC,OAEE;EAAA,IADFI,IACE,QADFA,IACE;;EAAA,qBAC0C8B,aAAa,CAACzH,KAAD,EAAQC,MAAR,EAAgBqH,aAAhB,CADvD;EAAA,IACMC,MADN,kBACMA,MADN;EAAA,IACcG,UADd,kBACcA,UADd;EAAA,IAC0BC,WAD1B,kBAC0BA,WAD1B;;EAAA,iBAE0D5H,SAAS,CAAC;IAClEC,KAAK,EAALA,KADkE;IAElEC,MAAM,EAANA,MAFkE;IAGlEC,cAAc,EAAdA,cAHkE;IAIlEC,eAAe,EAAfA,eAJkE;IAKlEC,qBAAqB,EAArBA,qBALkE;IAMlEC,kBAAkB,EAAlBA,kBANkE;IAOlEC,SAAS,EAAE,qBAAM,CAPiD;IAQlEC,WAAW,EAAXA,WARkE;IASlEC,WAAW,EAAXA;EATkE,CAAD,CAFnE;EAAA,IAEMQ,SAFN,cAEMA,SAFN;EAAA,IAEiBF,IAFjB,cAEiBA,IAFjB;EAAA,IAEuBM,cAFvB,cAEuBA,cAFvB;EAAA,IAEuCC,cAFvC,cAEuCA,cAFvC;;EAAA,qBAakDG,aAAa,CAAC;IAC9DC,QAAQ,EAARA,QAD8D;IAE9DC,IAAI,EAAJA,IAF8D;IAG9DC,KAAK,EAALA,KAH8D;IAI9DC,KAAK,EAALA,KAJ8D;IAK9D5E,KAAK,EAALA,KAL8D;IAM9D6E,WAAW,EAAXA,WAN8D;IAO9DC,MAAM,EAANA,MAP8D;IAQ9DC,YAAY,EAAZA,YAR8D;IAS9DC,MAAM,EAANA;EAT8D,CAAD,CAb/D;EAAA,IAaMT,YAbN,kBAaMA,YAbN;EAAA,IAaoByB,aAbpB,kBAaoBA,aAbpB;EAAA,IAamCO,UAbnC,kBAamCA,UAbnC;;EAyBF,IAAMrC,KAAK,GAAGC,QAAQ,EAAtB;;EAzBE,kBA2B4CyG,UAAU,EA3BtD;EAAA,IA2BMC,oBA3BN,eA2BMA,oBA3BN;EAAA,IA2B4BC,WA3B5B,eA2B4BA,WA3B5B;;EA4BF,IAAMC,WAAW,GAAGC,WAAW,CAC3B,UAAC7F,OAAD,EAAUgF,KAAV;IAAA,OAAoBjC,aAAa,IAAII,OAAjBJ,IAA4BI,OAAO,CAACnD,OAAD,EAAUgF,KAAV,CAAvD;EAD2B,GAE3B,CAACjC,aAAD,EAAgBI,OAAhB,CAF2B,CAA/B;EAIA,IAAM2C,gBAAgB,GAAGD,WAAW,CAChC,UAAC7F,OAAD,EAAUgF,KAAV;IAAA,OACIjC,aAAa,IACbsC,OADAtC,IAEA2C,oBAAoB,CAAClE,oBAAC6D,OAAD;MAASrF,OAAO,EAAEA;IAAlB,EAAD,EAAgCgF,KAAhC,CAHxB;EADgC,GAKhC,CAACjC,aAAD,EAAgB2C,oBAAhB,EAAsCL,OAAtC,CALgC,CAApC;EAOA,IAAMU,eAAe,GAAGF,WAAW,CAC/B,UAAC7F,OAAD,EAAUgF,KAAV;IAAA,OACIjC,aAAa,IACbsC,OADAtC,IAEA2C,oBAAoB,CAAClE,oBAAC6D,OAAD;MAASrF,OAAO,EAAEA;IAAlB,EAAD,EAAgCgF,KAAhC,CAHxB;EAD+B,GAK/B,CAACjC,aAAD,EAAgB2C,oBAAhB,EAAsCL,OAAtC,CAL+B,CAAnC;EAOA,IAAMW,gBAAgB,GAAGH,WAAW,CAAC;IAAA,OAAM9C,aAAa,IAAI4C,WAAW,EAAlC;EAAD,GAAuC,CACvE5C,aADuE,EAEvE4C,WAFuE,CAAvC,CAApC;EAKA,OACInE,oBAACyE,UAAD;IACIpI,KAAK,EAAE0H,UADX;IAEIzH,MAAM,EAAE0H,WAFZ;IAGIJ,MAAM,EAAEA,MAHZ;IAIIrG,KAAK,EAAEA,KAJX;IAKIyE,IAAI,EAAEA;EALV,GAOKF,MAAM,CAACxC,GAAPwC,CAAW,UAAC4C,KAAD,EAAQlK,CAAR,EAAc;IACtB,IAAIkK,KAAK,KAAK,WAAd,EAA2B;MACvB,IAAIvD,eAAe,KAAK,IAAxB,EAA8B,OAAO,IAAP;MAE9B,OACInB,oBAACgD,YAAD;QACI5J,GAAG,EAAC,WADR;QAEI+D,IAAI,EAAEA,IAFV;QAGIE,SAAS,EAAEA,SAHf;QAII4F,SAAS,EAAE5B,kBAJf;QAKI6B,SAAS,EAAE5B;MALf,EADJ;IASH;;IACD,IAAIoD,KAAK,KAAK,UAAd,EAA0B;MACtB,OACI1E,oBAAC2E,QAAD;QAAUvL,GAAG,EAAC;MAAd,GACKiG,aAAa,CAACC,GAAdD,CAAkB,mBAAO;QAAA,OACtBW,oBAACsD,aAAD;UACIlK,GAAG,EAAEoF,OAAO,CAAC0B,EADjB;UAEI1B,OAAO,EAAEA,OAFb;UAGIrB,IAAI,EAAEA,IAHV;UAIIR,SAAS,EAAEiB,YAAY,CAACY,OAAD,CAJ3B;UAKI5B,WAAW,EAAEa,cAAc,CAACe,OAAD,CAL/B;UAMI3B,WAAW,EAAEa,cAAc,CAACc,OAAD,CAN/B;UAOIgD,YAAY,EAAE8C,gBAPlB;UAQI7C,WAAW,EAAE8C,eARjB;UASI7C,YAAY,EAAE8C,gBATlB;UAUI7C,OAAO,EAAEyC;QAVb,EADsB;MAAzB,EADL,CADJ;IAkBH;;IACD,IAAIM,KAAK,KAAK,SAAd,EAAyB;MACrB,OAAOlC,OAAO,CAAClD,GAARkD,CAAY,UAAC4G,MAAD,EAAS5O,CAAT,EAAe;QAC9B,OACIwF,oBAACqJ,YAAD;UACIjQ,GAAG,EAAEoB,CADT;UAEI8O,cAAc,EAAEjN,KAFpB;UAGIkN,eAAe,EAAEjN,MAHrB;UAIIyB,IAAI,EAAE6B;QAJV,GAKQwJ,MALR,EADJ;MADG,EAAP;IAWH;;IAED,OAAOpJ,oBAAC2E,QAAD;MAAUvL,GAAG,EAAEoB;IAAf,GAAmBkK,KAAK,CAAC,EAAD,CAAxB,CAAP;EAhDH,EAPL,CADJ;AAhFe,EAAvB;AA+IAyE,UAAU,CAAC/I,WAAX+I,GAAyB,YAAzBA;AAEAA,UAAU,CAACvE,YAAXuE,GAA0BrG,sBAA1BqG;AAEA,mBAAetE,aAAa,CAACsE,UAAD,CAA5B;;ICxJMK,oBAAoB,GAAG,SAAvBA,oBAAuB,QAAK;EAAA,OAC9BxJ,oBAAC+E,iBAAD,QACK;IAAA,IAAG1I,KAAH,QAAGA,KAAH;IAAA,IAAUC,MAAV,QAAUA,MAAV;IAAA,OAAuB0D,oBAACmJ,YAAD;MAAY9M,KAAK,EAAEA,KAAnB;MAA0BC,MAAM,EAAEA;IAAlC,GAA8CoH,KAA9C,EAAvB;EADL,EAD8B;AAAA;;ACIlC,IAAM6D,0BAAwB,GAAG,SAA3BA,wBAA2B,CAAC/D,KAAD,EAAQgE,EAAR,EAAY1J,QAAZ,EAAsBhB,UAAtB,EAAqC;EAAA,yBACnD2K,iBAAiB,CAACD,EAAD,EAAKhE,KAAL,CADkC;EAAA;EAAA,IAC3DkE,CAD2D;EAAA,IACxDC,CADwD;;EAGlE,OAAO7J,QAAQ,CAACyB,IAATzB,CAAc,aAAC;IAAA,OAAI8J,WAAW,CAACC,CAAD,EAAI/K,UAAU,CAACgL,MAAXhL,CAAkB,CAAC4K,CAAD,EAAIC,CAAJ,CAAlB7K,CAAJ,CAAf;EAAf,EAAP;AAHJ;;AAMA,IAAM2M,gBAAgB,GAAG1J,IAAI,CACzB,gBA6BM;EAAA,IA5BF1D,KA4BE,QA5BFA,KA4BE;EAAA,IA3BFC,MA2BE,QA3BFA,MA2BE;EAAA,IA1BMqH,aA0BN,QA1BFC,MA0BE;EAAA,IAzBF1B,UAyBE,QAzBFA,UAyBE;EAAA,IAxBFpE,QAwBE,QAxBFA,QAwBE;EAAA,IAvBFC,IAuBE,QAvBFA,IAuBE;EAAA,IAtBFC,KAsBE,QAtBFA,KAsBE;EAAA,IArBFC,KAqBE,QArBFA,KAqBE;EAAA,IApBF5E,KAoBE,QApBFA,KAoBE;EAAA,IAnBF6E,WAmBE,QAnBFA,WAmBE;EAAA,IAlBF3B,cAkBE,QAlBFA,cAkBE;EAAA,IAjBFC,eAiBE,QAjBFA,eAiBE;EAAA,IAhBFC,qBAgBE,QAhBFA,qBAgBE;EAAA,IAfFC,kBAeE,QAfFA,kBAeE;EAAA,IAdFyB,MAcE,QAdFA,MAcE;EAAA,IAbFE,MAaE,QAbFA,MAaE;EAAA,IAZFD,YAYE,QAZFA,YAYE;EAAA,IAXFxB,WAWE,QAXFA,WAWE;EAAA,IAVFC,WAUE,QAVFA,WAUE;EAAA,IATFsE,eASE,QATFA,eASE;EAAA,IARFE,kBAQE,QARFA,kBAQE;EAAA,IAPFC,kBAOE,QAPFA,kBAOE;EAAA,IANFQ,MAME,QANFA,MAME;EAAA,IALFU,OAKE,QALFA,OAKE;EAAA,IAJFjB,aAIE,QAJFA,aAIE;EAAA,IAHFI,OAGE,QAHFA,OAGE;EAAA,IAFFF,WAEE,QAFFA,WAEE;EAAA,IADOoC,OACP,QADFjC,OACE;EACF,IAAMoG,QAAQ,GAAGC,MAAM,CAAC,IAAD,CAAvB;EACA,IAAM1K,KAAK,GAAGC,QAAQ,EAAtB;;EAFE,qBAG0CsG,aAAa,CAACzH,KAAD,EAAQC,MAAR,EAAgBqH,aAAhB,CAHvD;EAAA,IAGMC,MAHN,kBAGMA,MAHN;EAAA,IAGcG,UAHd,kBAGcA,UAHd;EAAA,IAG0BC,WAH1B,kBAG0BA,WAH1B;;EAAA,iBAIsE5H,SAAS,CAAC;IAC9EC,KAAK,EAALA,KAD8E;IAE9EC,MAAM,EAANA,MAF8E;IAG9EC,cAAc,EAAdA,cAH8E;IAI9EC,eAAe,EAAfA,eAJ8E;IAK9EC,qBAAqB,EAArBA,qBAL8E;IAM9EC,kBAAkB,EAAlBA,kBAN8E;IAO9EC,SAAS,EAAE,qBAAM,CAP6D;IAQ9EC,WAAW,EAAXA,WAR8E;IAS9EC,WAAW,EAAXA;EAT8E,CAAD,CAJ/E;EAAA,IAIMC,UAJN,cAIMA,UAJN;EAAA,IAIkBO,SAJlB,cAIkBA,SAJlB;EAAA,IAI6BF,IAJ7B,cAI6BA,IAJ7B;EAAA,IAImCM,cAJnC,cAImCA,cAJnC;EAAA,IAImDC,cAJnD,cAImDA,cAJnD;;EAAA,qBAekDG,aAAa,CAAC;IAC9DC,QAAQ,EAARA,QAD8D;IAE9DC,IAAI,EAAJA,IAF8D;IAG9DC,KAAK,EAALA,KAH8D;IAI9DC,KAAK,EAALA,KAJ8D;IAK9D5E,KAAK,EAALA,KAL8D;IAM9D6E,WAAW,EAAXA,WAN8D;IAO9DC,MAAM,EAANA,MAP8D;IAQ9DC,YAAY,EAAZA,YAR8D;IAS9DC,MAAM,EAANA;EAT8D,CAAD,CAf/D;EAAA,IAeMT,YAfN,kBAeMA,YAfN;EAAA,IAeoByB,aAfpB,kBAeoBA,aAfpB;EAAA,IAemCO,UAfnC,kBAemCA,UAfnC;;EA2BFsI,SAAS,CAAC,YAAM;IACZ,IAAI,CAACF,QAAL,EAAe;IAEfA,QAAQ,CAACG,OAATH,CAAiB3L,KAAjB2L,GAAyBjE,UAAU,GAAG7B,UAAtC8F;IACAA,QAAQ,CAACG,OAATH,CAAiB1L,MAAjB0L,GAA0BhE,WAAW,GAAG9B,UAAxC8F;IAEA,IAAMI,GAAG,GAAGJ,QAAQ,CAACG,OAATH,CAAiBK,UAAjBL,CAA4B,IAA5BA,CAAZ;IAEAI,GAAG,CAACpL,KAAJoL,CAAUlG,UAAVkG,EAAsBlG,UAAtBkG;IAEAA,GAAG,CAACE,SAAJF,GAAgB7K,KAAK,CAACgL,UAAtBH;IACAA,GAAG,CAACI,QAAJJ,CAAa,CAAbA,EAAgB,CAAhBA,EAAmBrE,UAAnBqE,EAA+BpE,WAA/BoE;IACAA,GAAG,CAACnL,SAAJmL,CAAcxE,MAAM,CAAC6E,IAArBL,EAA2BxE,MAAM,CAAC8E,GAAlCN;IAEAjL,IAAI,CAACwL,OAALxL,CAAaiL,GAAbjL;IAEA2E,MAAM,CAAClH,OAAPkH,CAAe,iBAAS;MACpB,IAAI4C,KAAK,KAAK,WAAd,EAA2B;QACvB,IAAIvD,eAAe,KAAK,IAAxB,EAA8B;UAC1BiH,GAAG,CAACnF,SAAJmF,GAAgB/G,kBAAhB+G;UACAA,GAAG,CAACQ,WAAJR,GAAkB9G,kBAAlB8G;UACAA,GAAG,CAACS,SAAJT;UACAjL,IAAI,CAACE,SAAS,EAAV,CAAJF;UACAiL,GAAG,CAAC/E,MAAJ+E;QACH;MAPL,OAQO,IAAI1D,KAAK,KAAK,UAAd,EAA0B;QAC7BrF,aAAa,CAACzE,OAAdyE,CAAsB,mBAAW;UAC7B+I,GAAG,CAACS,SAAJT;UACAjL,IAAI,CAACqB,OAAD,CAAJrB;UACAiL,GAAG,CAACE,SAAJF,GAAgBxK,YAAY,CAACY,OAAD,CAA5B4J;UACAA,GAAG,CAACjF,IAAJiF;UAEA,IAAMxL,WAAW,GAAGa,cAAc,CAACe,OAAD,CAAlC;;UACA,IAAI5B,WAAW,GAAG,CAAlB,EAAqB;YACjBwL,GAAG,CAACQ,WAAJR,GAAkB1K,cAAc,CAACc,OAAD,CAAhC4J;YACAA,GAAG,CAACnF,SAAJmF,GAAgBxL,WAAhBwL;YACAA,GAAG,CAAC/E,MAAJ+E;UACH;QAXL;MADG,OAcA,IAAI1D,KAAK,KAAK,SAAd,EAAyB;QAC5BlC,OAAO,CAAC5H,OAAR4H,CAAgB,kBAAU;UACtBkH,oBAAoB,CAACtB,GAAD,oCACbgB,MADa;YAEhBrL,IAAI,EAAE6B,UAFU;YAGhB0J,cAAc,EAAEjN,KAHA;YAIhBkN,eAAe,EAAEjN,MAJD;YAKhBiB,KAAK,EAALA;UALgB,GAApBmM;QADJ;MASH;IAjCL;EAhBK,GAqDN,CACC1B,QADD,EAECjE,UAFD,EAGCC,WAHD,EAICJ,MAJD,EAKC1B,UALD,EAMC3E,KAND,EAOCJ,IAPD,EAQCE,SARD,EASCO,YATD,EAUCH,cAVD,EAWCC,cAXD,EAYC2B,aAZD,EAaCmD,OAbD,EAcCV,MAdD,CArDM,CAAToG;;EA3BE,kBAiG4CjE,UAAU,EAjGtD;EAAA,IAiGMC,oBAjGN,eAiGMA,oBAjGN;EAAA,IAiG4BC,WAjG5B,eAiG4BA,WAjG5B;;EAkGF,IAAMI,eAAe,GAAGF,WAAW,CAC/B,iBAAS;IACL,IAAI,CAAC9C,aAAD,IAAkB,CAACsC,OAAvB,EAAgC;IAEhC,IAAMrF,OAAO,GAAG+I,0BAAwB,CACpC/D,KADoC,EAEpCwE,QAAQ,CAACG,OAF2B,EAGpC9I,aAHoC,EAIpCvC,UAJoC,CAAxC;;IAMA,IAAI0B,OAAJ,EAAa;MACT0F,oBAAoB,CAAClE,oBAAC6D,OAAD;QAASrF,OAAO,EAAEA;MAAlB,EAAD,EAAgCgF,KAAhC,CAApBU;IADJ,OAEO;MACHC,WAAW;IACd;;IACD1C,WAAW,IAAIA,WAAW,CAACjD,OAAO,IAAI,IAAZ,EAAkBgF,KAAlB,CAA1B/B;EAf2B,GAiB/B,CACIyC,oBADJ,EAEIC,WAFJ,EAGI5C,aAHJ,EAIIsC,OAJJ,EAKImE,QALJ,EAMI3I,aANJ,EAOIvC,UAPJ,CAjB+B,CAAnC;EA2BA,IAAM0H,gBAAgB,GAAGH,WAAW,CAAC;IAAA,OAAM9C,aAAa,IAAI4C,WAAW,EAAlC;EAAD,GAAuC,CACvE5C,aADuE,EAEvE4C,WAFuE,CAAvC,CAApC;EAIA,IAAMC,WAAW,GAAGC,WAAW,CAC3B,iBAAS;IACL,IAAI,CAAC9C,aAAD,IAAkB,CAACI,OAAvB,EAAgC;IAEhC,IAAMnD,OAAO,GAAG+I,0BAAwB,CACpC/D,KADoC,EAEpCwE,QAAQ,CAACG,OAF2B,EAGpC9I,aAHoC,EAIpCvC,UAJoC,CAAxC;;IAMA,IAAI0B,OAAJ,EAAa;MACTmD,OAAO,CAACnD,OAAD,EAAUgF,KAAV,CAAP7B;IACH;EAZsB,GAc3B,CAACJ,aAAD,EAAgByG,QAAhB,EAA0B3I,aAA1B,EAAyCvC,UAAzC,EAAqD6E,OAArD,CAd2B,CAA/B;EAiBA,OACI3B;IACI8I,GAAG,EAAEd,QADT;IAEI3L,KAAK,EAAE0H,UAAU,GAAG7B,UAFxB;IAGI5F,MAAM,EAAE0H,WAAW,GAAG9B,UAH1B;IAII6G,KAAK,EAAE;MACH1M,KAAK,EAAE0H,UADJ;MAEHzH,MAAM,EAAE0H,WAFL;MAGHgF,MAAM,EAAEzH,aAAa,GAAG,MAAH,GAAY;IAH9B,CAJX;IASIE,WAAW,EAAE8C,eATjB;IAUI7C,YAAY,EAAE8C,gBAVlB;IAWI7C,OAAO,EAAEyC;EAXb,EADJ;AAhLqB,EAA7B;AAkMAqF,gBAAgB,CAACrJ,WAAjBqJ,GAA+B,kBAA/BA;AAEAA,gBAAgB,CAAC7E,YAAjB6E,GAAgC1G,4BAAhC0G;AAEA,yBAAe5E,aAAa,CAAC4E,gBAAD,CAA5B;;IChNME,0BAA0B,GAAG,SAA7BA,0BAA6B,QAAK;EAAA,OACpC3J,oBAAC+E,iBAAD,QACK;IAAA,IAAG1I,KAAH,QAAGA,KAAH;IAAA,IAAUC,MAAV,QAAUA,MAAV;IAAA,OAAuB0D,oBAACyJ,kBAAD;MAAkBpN,KAAK,EAAEA,KAAzB;MAAgCC,MAAM,EAAEA;IAAxC,GAAoDoH,KAApD,EAAvB;EADL,EADoC;AAAA","names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","projectionById","azimuthalEqualArea","geoAzimuthalEqualArea","azimuthalEquidistant","geoAzimuthalEquidistant","gnomonic","geoGnomonic","orthographic","geoOrthographic","stereographic","geoStereographic","equalEarth","geoEqualEarth","equirectangular","geoEquirectangular","mercator","geoMercator","transverseMercator","geoTransverseMercator","naturalEarth1","geoNaturalEarth1","useGeoMap","width","height","projectionType","projectionScale","projectionTranslation","projectionRotation","fillColor","borderWidth","borderColor","projection","useMemo","scale","translate","rotate","path","geoPath","graticule","geoGraticule","theme","useTheme","getBorderWidth","getBorderColor","useInheritedColor","getFillColor","useChoropleth","features","data","match","label","valueFormat","colors","unknownColor","domain","findMatchingDatum","_isFunction","feature","datum","featureKey","_get","datumKey","getLabel","getValue","valueFormatter","undefined","d","format","colorScale","guessQuantizeColorScale","boundFeatures","map","find","datumValue","featureWithData","formattedValue","color","legendData","useQuantizeColorScaleLegendData","ChoroplethTooltip","memo","React","BasicTooltip","id","enableChip","displayName","commonPropTypes","PropTypes","arrayOf","shape","string","isRequired","type","oneOf","properties","geometry","number","oneOfType","func","inheritedColorPropType","enableGraticule","bool","graticuleLineWidth","graticuleLineColor","isInteractive","onMouseEnter","onMouseMove","onMouseLeave","onClick","tooltip","any","layers","GeoMapPropTypes","role","GeoMapCanvasPropTypes","pixelRatio","commonChoroplethPropTypes","quantizeColorScalePropType","ChoroplethPropTypes","ChoroplethCanvasPropTypes","commonDefaultProps","legends","GeoMapDefaultProps","GeoMapCanvasDefaultProps","window","devicePixelRatio","commonChoroplethDefaultProps","ChoroplethDefaultProps","ChoroplethCanvasDefaultProps","GeoGraticule","lineWidth","lineColor","fill","strokeWidth","stroke","GeoMapFeature","strokeLinejoin","event","GeoMap","props","partialMargin","margin","Tooltip","useDimensions","outerWidth","outerHeight","useTooltip","showTooltipFromEvent","hideTooltip","handleClick","useCallback","handleMouseEnter","handleMouseMove","handleMouseLeave","SvgWrapper","layer","Fragment","defaultProps","withContainer","ResponsiveGeoMap","ResponsiveWrapper","_arrayWithHoles","arr","Array","isArray","_iterableToArrayLimit","Symbol","iterator","_arr","_n","_d","_e","_i","_s","next","done","err","_arrayLikeToArray","len","arr2","_unsupportedIterableToArray","o","minLen","arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","from","test","_nonIterableRest","TypeError","_slicedToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","getFeatureFromMouseEvent","el","getRelativeCursor","x","y","geoContains","f","invert","GeoMapCanvas","canvasEl","useRef","useEffect","current","ctx","getContext","fillStyle","background","fillRect","left","top","context","strokeStyle","beginPath","ref","style","cursor","displatName","ResponsiveGeoMapCanvas","Choropleth","legend","BoxLegendSvg","containerWidth","containerHeight","ResponsiveChoropleth","ChoroplethCanvas","renderLegendToCanvas","ResponsiveChoroplethCanvas"],"sources":["D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\defineProperty.js","D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\objectSpread2.js","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\geo\\src\\hooks.js","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\geo\\src\\ChoroplethTooltip.js","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\geo\\src\\props.js","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\geo\\src\\GeoGraticule.js","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\geo\\src\\GeoMapFeature.js","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\geo\\src\\GeoMap.js","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\geo\\src\\ResponsiveGeoMap.js","D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\arrayWithHoles.js","D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\iterableToArrayLimit.js","D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\arrayLikeToArray.js","D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\unsupportedIterableToArray.js","D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\nonIterableRest.js","D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\slicedToArray.js","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\geo\\src\\GeoMapCanvas.js","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\geo\\src\\ResponsiveGeoMapCanvas.js","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\geo\\src\\Choropleth.js","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\geo\\src\\ResponsiveChoropleth.js","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\geo\\src\\ChoroplethCanvas.js","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\geo\\src\\ResponsiveChoroplethCanvas.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useMemo } from 'react'\nimport { isFunction, get } from 'lodash'\nimport { format } from 'd3-format'\nimport {\n    geoPath,\n    geoAzimuthalEqualArea,\n    geoAzimuthalEquidistant,\n    geoGnomonic,\n    geoOrthographic,\n    geoStereographic,\n    geoEqualEarth,\n    geoEquirectangular,\n    geoMercator,\n    geoTransverseMercator,\n    geoNaturalEarth1,\n    geoGraticule,\n} from 'd3-geo'\nimport { guessQuantizeColorScale, useTheme } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { useQuantizeColorScaleLegendData } from '@nivo/legends'\n\nexport const projectionById = {\n    azimuthalEqualArea: geoAzimuthalEqualArea,\n    azimuthalEquidistant: geoAzimuthalEquidistant,\n    gnomonic: geoGnomonic,\n    orthographic: geoOrthographic,\n    stereographic: geoStereographic,\n    equalEarth: geoEqualEarth,\n    equirectangular: geoEquirectangular,\n    mercator: geoMercator,\n    transverseMercator: geoTransverseMercator,\n    naturalEarth1: geoNaturalEarth1,\n}\n\nexport const useGeoMap = ({\n    width,\n    height,\n    projectionType,\n    projectionScale,\n    projectionTranslation,\n    projectionRotation,\n    fillColor,\n    borderWidth,\n    borderColor,\n}) => {\n    const projection = useMemo(() => {\n        return projectionById[projectionType]()\n            .scale(projectionScale)\n            .translate([width * projectionTranslation[0], height * projectionTranslation[1]])\n            .rotate(projectionRotation)\n    }, [\n        width,\n        height,\n        projectionType,\n        projectionScale,\n        projectionTranslation[0],\n        projectionTranslation[1],\n        projectionRotation[0],\n        projectionRotation[1],\n        projectionRotation[2],\n    ])\n    const path = useMemo(() => geoPath(projection), [projection])\n    const graticule = useMemo(() => geoGraticule())\n\n    const theme = useTheme()\n    const getBorderWidth = useMemo(\n        () => (typeof borderWidth === 'function' ? borderWidth : () => borderWidth),\n        [borderWidth]\n    )\n    const getBorderColor = useInheritedColor(borderColor, theme)\n    const getFillColor = useMemo(\n        () => (typeof fillColor === 'function' ? fillColor : () => fillColor),\n        [fillColor]\n    )\n\n    return {\n        projection,\n        path,\n        graticule,\n        getBorderWidth,\n        getBorderColor,\n        getFillColor,\n    }\n}\n\nexport const useChoropleth = ({\n    features,\n    data,\n    match,\n    label,\n    value,\n    valueFormat,\n    colors,\n    unknownColor,\n    domain,\n}) => {\n    const findMatchingDatum = useMemo(() => {\n        if (isFunction(match)) return match\n        return (feature, datum) => {\n            const featureKey = get(feature, match)\n            const datumKey = get(datum, match)\n\n            return featureKey && featureKey === datumKey\n        }\n    }, [match])\n    const getLabel = useMemo(() => (isFunction(label) ? label : datum => get(datum, label)), [\n        label,\n    ])\n    const getValue = useMemo(() => (isFunction(value) ? value : datum => get(datum, value)), [\n        value,\n    ])\n    const valueFormatter = useMemo(() => {\n        if (valueFormat === undefined) return d => d\n        if (isFunction(valueFormat)) return valueFormat\n        return format(valueFormat)\n    }, [valueFormat])\n\n    const colorScale = useMemo(() => guessQuantizeColorScale(colors).domain(domain), [\n        colors,\n        domain,\n    ])\n    const getFillColor = useMemo(() => {\n        return feature => {\n            if (feature.value === undefined) return unknownColor\n            return colorScale(feature.value)\n        }\n    }, [colorScale, unknownColor])\n\n    const boundFeatures = useMemo(\n        () =>\n            features.map(feature => {\n                const datum = data.find(datum => findMatchingDatum(feature, datum))\n                const datumValue = getValue(datum)\n\n                if (datum) {\n                    const featureWithData = {\n                        ...feature,\n                        data: datum,\n                        value: datumValue,\n                        formattedValue: valueFormatter(datumValue),\n                    }\n                    featureWithData.color = getFillColor(featureWithData)\n                    featureWithData.label = getLabel(featureWithData)\n\n                    return featureWithData\n                }\n\n                return feature\n            }),\n        [features, data, findMatchingDatum, getValue, valueFormatter, getFillColor]\n    )\n\n    const legendData = useQuantizeColorScaleLegendData({\n        scale: colorScale,\n        valueFormat: valueFormatter,\n    })\n\n    return {\n        colorScale,\n        getFillColor,\n        boundFeatures,\n        valueFormatter,\n        legendData,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst ChoroplethTooltip = memo(({ feature }) => {\n    if (feature.data === undefined) return null\n\n    return (\n        <BasicTooltip\n            id={feature.label}\n            color={feature.color}\n            enableChip={true}\n            value={feature.formattedValue}\n        />\n    )\n})\n\nChoroplethTooltip.propTypes = {\n    feature: PropTypes.object.isRequired,\n}\n\nChoroplethTooltip.displayName = 'ChoroplethTooltip'\n\nexport default ChoroplethTooltip\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { quantizeColorScalePropType } from '@nivo/core'\nimport { inheritedColorPropType } from '@nivo/colors'\nimport { projectionById } from './hooks'\nimport ChoroplethTooltip from './ChoroplethTooltip'\n\nconst commonPropTypes = {\n    features: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            type: PropTypes.oneOf(['Feature']).isRequired,\n            properties: PropTypes.object,\n            geometry: PropTypes.object.isRequired,\n        })\n    ).isRequired,\n\n    projectionType: PropTypes.oneOf(Object.keys(projectionById)).isRequired,\n    projectionScale: PropTypes.number.isRequired,\n    projectionTranslation: PropTypes.arrayOf(PropTypes.number).isRequired,\n    projectionRotation: PropTypes.arrayOf(PropTypes.number).isRequired,\n\n    fillColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    borderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    borderColor: inheritedColorPropType.isRequired,\n\n    enableGraticule: PropTypes.bool.isRequired,\n    graticuleLineWidth: PropTypes.number.isRequired,\n    graticuleLineColor: PropTypes.string.isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func.isRequired,\n    onMouseMove: PropTypes.func.isRequired,\n    onMouseLeave: PropTypes.func.isRequired,\n    onClick: PropTypes.func.isRequired,\n    tooltip: PropTypes.any,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['graticule', 'features']), PropTypes.func])\n    ).isRequired,\n}\n\nexport const GeoMapPropTypes = {\n    ...commonPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nexport const GeoMapCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonChoroplethPropTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    match: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    valueFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    colors: quantizeColorScalePropType.isRequired,\n    domain: PropTypes.arrayOf(PropTypes.number).isRequired,\n    unknownColor: PropTypes.string.isRequired,\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['graticule', 'features', 'legends']), PropTypes.func])\n    ).isRequired,\n}\n\nexport const ChoroplethPropTypes = {\n    ...GeoMapPropTypes,\n    ...commonChoroplethPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nexport const ChoroplethCanvasPropTypes = {\n    ...GeoMapCanvasPropTypes,\n    ...commonChoroplethPropTypes,\n}\n\nconst commonDefaultProps = {\n    projectionType: 'mercator',\n    projectionScale: 100,\n    projectionTranslation: [0.5, 0.5],\n    projectionRotation: [0, 0, 0],\n\n    enableGraticule: false,\n    graticuleLineWidth: 0.5,\n    graticuleLineColor: '#999999',\n\n    fillColor: '#dddddd',\n    borderWidth: 0,\n    borderColor: '#000000',\n\n    isInteractive: true,\n    onMouseEnter: () => {},\n    onMouseLeave: () => {},\n    onMouseMove: () => {},\n    onClick: () => {},\n\n    layers: ['graticule', 'features'],\n    legends: [],\n}\n\nexport const GeoMapDefaultProps = {\n    ...commonDefaultProps,\n    role: 'img',\n}\n\nexport const GeoMapCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n}\n\nconst commonChoroplethDefaultProps = {\n    match: 'id',\n    label: 'id',\n    value: 'value',\n    colors: 'PuBuGn',\n    unknownColor: '#999',\n    tooltip: ChoroplethTooltip,\n    layers: ['graticule', 'features', 'legends'],\n}\n\nexport const ChoroplethDefaultProps = {\n    ...GeoMapDefaultProps,\n    ...commonChoroplethDefaultProps,\n    role: 'img',\n}\n\nexport const ChoroplethCanvasDefaultProps = {\n    ...GeoMapCanvasDefaultProps,\n    ...commonChoroplethDefaultProps,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst GeoGraticule = memo(({ path, graticule, lineWidth, lineColor }) => {\n    return <path fill=\"none\" strokeWidth={lineWidth} stroke={lineColor} d={path(graticule())} />\n})\n\nGeoGraticule.propTypes = {\n    path: PropTypes.func.isRequired,\n    graticule: PropTypes.func.isRequired,\n    lineWidth: PropTypes.number.isRequired,\n    lineColor: PropTypes.string.isRequired,\n}\n\nGeoGraticule.displayName = 'GeoGraticule'\n\nexport default GeoGraticule\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst GeoMapFeature = memo(\n    ({\n        feature,\n        path,\n        fillColor,\n        borderWidth,\n        borderColor,\n        onClick,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n    }) => {\n        return (\n            <path\n                key={feature.id}\n                fill={fillColor}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                strokeLinejoin=\"bevel\"\n                d={path(feature)}\n                onMouseEnter={event => onMouseEnter(feature, event)}\n                onMouseMove={event => onMouseMove(feature, event)}\n                onMouseLeave={event => onMouseLeave(feature, event)}\n                onClick={event => onClick(feature, event)}\n            />\n        )\n    }\n)\n\nGeoMapFeature.propTypes = {\n    feature: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        type: PropTypes.oneOf(['Feature']).isRequired,\n        properties: PropTypes.object,\n        geometry: PropTypes.object.isRequired,\n    }).isRequired,\n    path: PropTypes.func.isRequired,\n\n    fillColor: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n\n    onMouseEnter: PropTypes.func.isRequired,\n    onMouseMove: PropTypes.func.isRequired,\n    onMouseLeave: PropTypes.func.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\n\nGeoMapFeature.displayName = 'GeoMapFeature'\n\nexport default GeoMapFeature\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Fragment, useCallback, memo } from 'react'\nimport { SvgWrapper, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { GeoMapPropTypes, GeoMapDefaultProps } from './props'\nimport GeoGraticule from './GeoGraticule'\nimport GeoMapFeature from './GeoMapFeature'\nimport { useGeoMap } from './hooks'\n\nconst GeoMap = memo(props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n        features,\n        layers,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        fillColor,\n        borderWidth,\n        borderColor,\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n        isInteractive,\n        onClick,\n        tooltip: Tooltip,\n        role,\n    } = props\n    const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n    const { graticule, path, getFillColor, getBorderWidth, getBorderColor } = useGeoMap({\n        width,\n        height,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        fillColor,\n        borderWidth,\n        borderColor,\n    })\n\n    const theme = useTheme()\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleClick = useCallback(\n        (feature, event) => isInteractive && onClick && onClick(feature, event),\n        [isInteractive, onClick]\n    )\n    const handleMouseEnter = useCallback(\n        (feature, event) =>\n            isInteractive && Tooltip && showTooltipFromEvent(<Tooltip feature={feature} />, event),\n        [isInteractive, showTooltipFromEvent, Tooltip]\n    )\n    const handleMouseMove = useCallback(\n        (feature, event) =>\n            isInteractive && Tooltip && showTooltipFromEvent(<Tooltip feature={feature} />, event),\n        [isInteractive, showTooltipFromEvent, Tooltip]\n    )\n    const handleMouseLeave = useCallback(() => isInteractive && hideTooltip(), [\n        isInteractive,\n        hideTooltip,\n    ])\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            theme={theme}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layer === 'graticule') {\n                    if (enableGraticule !== true) return null\n\n                    return (\n                        <GeoGraticule\n                            key=\"graticule\"\n                            path={path}\n                            graticule={graticule}\n                            lineWidth={graticuleLineWidth}\n                            lineColor={graticuleLineColor}\n                        />\n                    )\n                }\n                if (layer === 'features') {\n                    return (\n                        <Fragment key=\"features\">\n                            {features.map(feature => (\n                                <GeoMapFeature\n                                    key={feature.id}\n                                    feature={feature}\n                                    path={path}\n                                    fillColor={getFillColor(feature)}\n                                    borderWidth={getBorderWidth(feature)}\n                                    borderColor={getBorderColor(feature)}\n                                    onMouseEnter={handleMouseEnter}\n                                    onMouseMove={handleMouseMove}\n                                    onMouseLeave={handleMouseLeave}\n                                    onClick={handleClick}\n                                />\n                            ))}\n                        </Fragment>\n                    )\n                }\n\n                return <Fragment key={i}>{layer(props)}</Fragment>\n            })}\n        </SvgWrapper>\n    )\n})\n\nGeoMap.displayName = 'GeoMap'\nGeoMap.propTypes = GeoMapPropTypes\nGeoMap.defaultProps = GeoMapDefaultProps\n\nexport default withContainer(GeoMap)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport GeoMap from './GeoMap'\n\nconst ResponsiveGeoMap = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <GeoMap width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveGeoMap\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useRef, useEffect, useCallback } from 'react'\nimport { geoContains } from 'd3-geo'\nimport { getRelativeCursor, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { GeoMapCanvasDefaultProps, GeoMapCanvasPropTypes } from './props'\nimport { useGeoMap } from './hooks'\n\nconst getFeatureFromMouseEvent = (event, el, features, projection) => {\n    const [x, y] = getRelativeCursor(el, event)\n\n    return features.find(f => geoContains(f, projection.invert([x, y])))\n}\n\nconst GeoMapCanvas = memo(props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n        pixelRatio,\n        features,\n        layers,\n\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n\n        fillColor,\n        borderWidth,\n        borderColor,\n\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n\n        isInteractive,\n        onClick,\n        onMouseMove,\n        tooltip: Tooltip,\n    } = props\n\n    const canvasEl = useRef(null)\n    const theme = useTheme()\n    const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n    const { projection, graticule, path, getFillColor, getBorderWidth, getBorderColor } = useGeoMap(\n        {\n            width,\n            height,\n            projectionType,\n            projectionScale,\n            projectionTranslation,\n            projectionRotation,\n            fillColor,\n            borderWidth,\n            borderColor,\n        }\n    )\n\n    useEffect(() => {\n        if (!canvasEl) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        path.context(ctx)\n\n        layers.forEach(layer => {\n            if (layer === 'graticule') {\n                if (enableGraticule === true) {\n                    ctx.lineWidth = graticuleLineWidth\n                    ctx.strokeStyle = graticuleLineColor\n                    ctx.beginPath()\n                    path(graticule())\n                    ctx.stroke()\n                }\n            } else if (layer === 'features') {\n                features.forEach(feature => {\n                    ctx.beginPath()\n                    path(feature)\n                    ctx.fillStyle = getFillColor(feature)\n                    ctx.fill()\n\n                    const borderWidth = getBorderWidth(feature)\n                    if (borderWidth > 0) {\n                        ctx.strokeStyle = getBorderColor(feature)\n                        ctx.lineWidth = borderWidth\n                        ctx.stroke()\n                    }\n                })\n            } else {\n                layer(ctx, props)\n            }\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        margin,\n        pixelRatio,\n        theme,\n        path,\n        graticule,\n        getFillColor,\n        getBorderWidth,\n        getBorderColor,\n        features,\n        layers,\n    ])\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleMouseMove = useCallback(\n        event => {\n            if (!isInteractive || !Tooltip) return\n\n            const feature = getFeatureFromMouseEvent(event, canvasEl.current, features, projection)\n            if (feature) {\n                showTooltipFromEvent(<Tooltip feature={feature} />, event)\n            } else {\n                hideTooltip()\n            }\n            onMouseMove && onMouseMove(feature || null, event)\n        },\n        [showTooltipFromEvent, hideTooltip, isInteractive, Tooltip, canvasEl, features, projection]\n    )\n    const handleMouseLeave = useCallback(() => isInteractive && hideTooltip(), [\n        isInteractive,\n        hideTooltip,\n    ])\n    const handleClick = useCallback(\n        event => {\n            if (!isInteractive || !onClick) return\n\n            const feature = getFeatureFromMouseEvent(event, canvasEl.current, features, projection)\n            if (feature) {\n                onClick(feature, event)\n            }\n        },\n        [isInteractive, canvasEl, features, projection, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n        />\n    )\n})\n\nGeoMapCanvas.displatName = 'GeoMapCanvas'\nGeoMapCanvas.propTypes = GeoMapCanvasPropTypes\nGeoMapCanvas.defaultProps = GeoMapCanvasDefaultProps\n\nexport default withContainer(GeoMapCanvas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport GeoMapCanvas from './GeoMapCanvas'\n\nconst ResponsiveGeoMapCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <GeoMapCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveGeoMapCanvas\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, Fragment, useCallback } from 'react'\nimport { SvgWrapper, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ChoroplethPropTypes, ChoroplethDefaultProps } from './props'\nimport GeoGraticule from './GeoGraticule'\nimport GeoMapFeature from './GeoMapFeature'\nimport { useGeoMap, useChoropleth } from './hooks'\n\nconst Choropleth = memo(\n    ({\n        width,\n        height,\n        margin: partialMargin,\n        features,\n        data,\n        match,\n        label,\n        value,\n        valueFormat,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        colors,\n        domain,\n        unknownColor,\n        borderWidth,\n        borderColor,\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n        layers,\n        legends,\n        isInteractive,\n        onClick,\n        tooltip: Tooltip,\n        role,\n    }) => {\n        const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n        const { graticule, path, getBorderWidth, getBorderColor } = useGeoMap({\n            width,\n            height,\n            projectionType,\n            projectionScale,\n            projectionTranslation,\n            projectionRotation,\n            fillColor: () => {},\n            borderWidth,\n            borderColor,\n        })\n        const { getFillColor, boundFeatures, legendData } = useChoropleth({\n            features,\n            data,\n            match,\n            label,\n            value,\n            valueFormat,\n            colors,\n            unknownColor,\n            domain,\n        })\n\n        const theme = useTheme()\n\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n        const handleClick = useCallback(\n            (feature, event) => isInteractive && onClick && onClick(feature, event),\n            [isInteractive, onClick]\n        )\n        const handleMouseEnter = useCallback(\n            (feature, event) =>\n                isInteractive &&\n                Tooltip &&\n                showTooltipFromEvent(<Tooltip feature={feature} />, event),\n            [isInteractive, showTooltipFromEvent, Tooltip]\n        )\n        const handleMouseMove = useCallback(\n            (feature, event) =>\n                isInteractive &&\n                Tooltip &&\n                showTooltipFromEvent(<Tooltip feature={feature} />, event),\n            [isInteractive, showTooltipFromEvent, Tooltip]\n        )\n        const handleMouseLeave = useCallback(() => isInteractive && hideTooltip(), [\n            isInteractive,\n            hideTooltip,\n        ])\n\n        return (\n            <SvgWrapper\n                width={outerWidth}\n                height={outerHeight}\n                margin={margin}\n                theme={theme}\n                role={role}\n            >\n                {layers.map((layer, i) => {\n                    if (layer === 'graticule') {\n                        if (enableGraticule !== true) return null\n\n                        return (\n                            <GeoGraticule\n                                key=\"graticule\"\n                                path={path}\n                                graticule={graticule}\n                                lineWidth={graticuleLineWidth}\n                                lineColor={graticuleLineColor}\n                            />\n                        )\n                    }\n                    if (layer === 'features') {\n                        return (\n                            <Fragment key=\"features\">\n                                {boundFeatures.map(feature => (\n                                    <GeoMapFeature\n                                        key={feature.id}\n                                        feature={feature}\n                                        path={path}\n                                        fillColor={getFillColor(feature)}\n                                        borderWidth={getBorderWidth(feature)}\n                                        borderColor={getBorderColor(feature)}\n                                        onMouseEnter={handleMouseEnter}\n                                        onMouseMove={handleMouseMove}\n                                        onMouseLeave={handleMouseLeave}\n                                        onClick={handleClick}\n                                    />\n                                ))}\n                            </Fragment>\n                        )\n                    }\n                    if (layer === 'legends') {\n                        return legends.map((legend, i) => {\n                            return (\n                                <BoxLegendSvg\n                                    key={i}\n                                    containerWidth={width}\n                                    containerHeight={height}\n                                    data={legendData}\n                                    {...legend}\n                                />\n                            )\n                        })\n                    }\n\n                    return <Fragment key={i}>{layer({})}</Fragment>\n                })}\n            </SvgWrapper>\n        )\n    }\n)\n\nChoropleth.displayName = 'Choropleth'\nChoropleth.propTypes = ChoroplethPropTypes\nChoropleth.defaultProps = ChoroplethDefaultProps\n\nexport default withContainer(Choropleth)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Choropleth from './Choropleth'\n\nconst ResponsiveChoropleth = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Choropleth width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveChoropleth\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useRef, useEffect, useCallback } from 'react'\nimport { geoContains } from 'd3-geo'\nimport { getRelativeCursor, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ChoroplethCanvasDefaultProps, ChoroplethCanvasPropTypes } from './props'\nimport { useGeoMap, useChoropleth } from './hooks'\n\nconst getFeatureFromMouseEvent = (event, el, features, projection) => {\n    const [x, y] = getRelativeCursor(el, event)\n\n    return features.find(f => geoContains(f, projection.invert([x, y])))\n}\n\nconst ChoroplethCanvas = memo(\n    ({\n        width,\n        height,\n        margin: partialMargin,\n        pixelRatio,\n        features,\n        data,\n        match,\n        label,\n        value,\n        valueFormat,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        colors,\n        domain,\n        unknownColor,\n        borderWidth,\n        borderColor,\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n        layers,\n        legends,\n        isInteractive,\n        onClick,\n        onMouseMove,\n        tooltip: Tooltip,\n    }) => {\n        const canvasEl = useRef(null)\n        const theme = useTheme()\n        const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n        const { projection, graticule, path, getBorderWidth, getBorderColor } = useGeoMap({\n            width,\n            height,\n            projectionType,\n            projectionScale,\n            projectionTranslation,\n            projectionRotation,\n            fillColor: () => {},\n            borderWidth,\n            borderColor,\n        })\n        const { getFillColor, boundFeatures, legendData } = useChoropleth({\n            features,\n            data,\n            match,\n            label,\n            value,\n            valueFormat,\n            colors,\n            unknownColor,\n            domain,\n        })\n\n        useEffect(() => {\n            if (!canvasEl) return\n\n            canvasEl.current.width = outerWidth * pixelRatio\n            canvasEl.current.height = outerHeight * pixelRatio\n\n            const ctx = canvasEl.current.getContext('2d')\n\n            ctx.scale(pixelRatio, pixelRatio)\n\n            ctx.fillStyle = theme.background\n            ctx.fillRect(0, 0, outerWidth, outerHeight)\n            ctx.translate(margin.left, margin.top)\n\n            path.context(ctx)\n\n            layers.forEach(layer => {\n                if (layer === 'graticule') {\n                    if (enableGraticule === true) {\n                        ctx.lineWidth = graticuleLineWidth\n                        ctx.strokeStyle = graticuleLineColor\n                        ctx.beginPath()\n                        path(graticule())\n                        ctx.stroke()\n                    }\n                } else if (layer === 'features') {\n                    boundFeatures.forEach(feature => {\n                        ctx.beginPath()\n                        path(feature)\n                        ctx.fillStyle = getFillColor(feature)\n                        ctx.fill()\n\n                        const borderWidth = getBorderWidth(feature)\n                        if (borderWidth > 0) {\n                            ctx.strokeStyle = getBorderColor(feature)\n                            ctx.lineWidth = borderWidth\n                            ctx.stroke()\n                        }\n                    })\n                } else if (layer === 'legends') {\n                    legends.forEach(legend => {\n                        renderLegendToCanvas(ctx, {\n                            ...legend,\n                            data: legendData,\n                            containerWidth: width,\n                            containerHeight: height,\n                            theme,\n                        })\n                    })\n                } else {\n                    // layer(ctx, {})\n                }\n            })\n        }, [\n            canvasEl,\n            outerWidth,\n            outerHeight,\n            margin,\n            pixelRatio,\n            theme,\n            path,\n            graticule,\n            getFillColor,\n            getBorderWidth,\n            getBorderColor,\n            boundFeatures,\n            legends,\n            layers,\n        ])\n\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n        const handleMouseMove = useCallback(\n            event => {\n                if (!isInteractive || !Tooltip) return\n\n                const feature = getFeatureFromMouseEvent(\n                    event,\n                    canvasEl.current,\n                    boundFeatures,\n                    projection\n                )\n                if (feature) {\n                    showTooltipFromEvent(<Tooltip feature={feature} />, event)\n                } else {\n                    hideTooltip()\n                }\n                onMouseMove && onMouseMove(feature || null, event)\n            },\n            [\n                showTooltipFromEvent,\n                hideTooltip,\n                isInteractive,\n                Tooltip,\n                canvasEl,\n                boundFeatures,\n                projection,\n            ]\n        )\n        const handleMouseLeave = useCallback(() => isInteractive && hideTooltip(), [\n            isInteractive,\n            hideTooltip,\n        ])\n        const handleClick = useCallback(\n            event => {\n                if (!isInteractive || !onClick) return\n\n                const feature = getFeatureFromMouseEvent(\n                    event,\n                    canvasEl.current,\n                    boundFeatures,\n                    projection\n                )\n                if (feature) {\n                    onClick(feature, event)\n                }\n            },\n            [isInteractive, canvasEl, boundFeatures, projection, onClick]\n        )\n\n        return (\n            <canvas\n                ref={canvasEl}\n                width={outerWidth * pixelRatio}\n                height={outerHeight * pixelRatio}\n                style={{\n                    width: outerWidth,\n                    height: outerHeight,\n                    cursor: isInteractive ? 'auto' : 'normal',\n                }}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave}\n                onClick={handleClick}\n            />\n        )\n    }\n)\n\nChoroplethCanvas.displayName = 'ChoroplethCanvas'\nChoroplethCanvas.propTypes = ChoroplethCanvasPropTypes\nChoroplethCanvas.defaultProps = ChoroplethCanvasDefaultProps\n\nexport default withContainer(ChoroplethCanvas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport ChoroplethCanvas from './ChoroplethCanvas'\n\nconst ResponsiveChoroplethCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <ChoroplethCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveChoroplethCanvas\n"]},"metadata":{},"sourceType":"module"}