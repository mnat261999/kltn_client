{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kltn\\\\test\\\\social-media\\\\client\\\\src\\\\components\\\\Profile\\\\index.js\";\nimport React, { Component } from \"react\";\nimport Layout from \"../../hoc/layout\";\nimport { connect } from \"react-redux\";\nimport { findProfile, follow, unfollow, findTagged, findPosted, findSaved, auth, blockUser, requestfollow, undorequestfollow } from \"../../../src/actions/user_action\";\nimport { findPersonal } from \"../../../src/actions/message_action\";\nimport { getHighLightStory, getAllStories, createHighLightStory } from \"../../actions/user_action\";\nimport \"./profile.scss\";\nimport { GridDots, Tag, Dots, CircleX, Heart, Message2, Bookmark } from \"tabler-icons-react\";\nimport HighLightStory from \"./HighLightStory\";\nimport StoryDisplay from \"./StoryDisplay\";\nimport { Button, withTheme, Snackbar, SnackbarMessage, Dialog } from \"@material-ui/core\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport FormField from \"../ultils/Form/FormField\";\nimport { populateOptionFields, update, ifFormValid, generateData, resetFields } from \"../ultils/Form/FormActions\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Report from \"../Report/Report\";\nimport PostRow from \"./post\";\nimport { getPolicy } from \"../../actions/policy_actions\";\nimport moment from \"moment\";\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 10\n    }\n  }));\n});\n\nclass Profile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      setfollowerDiaglog: false,\n      setfollowingDiaglog: false,\n      setSnackfollow: false,\n      setSnack: false,\n      setDialog: false,\n      setType: \"posted\",\n      setMessage: \"\",\n      severity: \"\",\n      followerslist: [],\n      followings: [],\n      storyDialog: false,\n      storyIndex: -1,\n      storyUploading: false,\n      createHighlightStoryDiaglog: false,\n      highLightStory: [],\n      formSuccess: false,\n      formMessage: \"\",\n      formData: {\n        name: {\n          element: \"input\",\n          value: \"\",\n          config: {\n            placeholder: \"Tên\",\n            label: \"Tên\",\n            name: \"name\",\n            options: []\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          validationMessage: \"\",\n          showlabel: false\n        }\n      },\n      setSnack: false,\n      addStorySuccess: false,\n      addStoryStatus: false,\n      reportStatus: false,\n      reportSuccess: false,\n      SnackMess: \"\",\n      isReportFormShow: false,\n      reportData: {},\n      setfollowerDiaglog: false,\n      alertFunctionIsRestricted: false,\n      restrictedFunction: {}\n    };\n\n    this.handleSnackBar = (mess, res) => {\n      console.log(mess, res);\n      this.setState({\n        reportStatus: true,\n        SnackMess: mess,\n        reportSuccess: res\n      });\n    };\n\n    this.closeReportForm = () => {\n      this.setState({\n        isReportFormShow: false,\n        reportData: {}\n      });\n    };\n\n    this.handleClickfollow = async user => {\n      if (user.privateMode === true) {\n        await this.props.dispatch(requestfollow(user._id)).then(response => {\n          this.setState({\n            setSnackfollow: true,\n            setMessage: \"Đã gửi yêu cầu\",\n            severity: \"success\"\n          });\n          this.props.dispatch(findProfile(this.props.match.params.id));\n        });\n      } else {\n        await this.props.dispatch(follow(user._id)).then(response => {\n          if (response.payload.restricted) {\n            console.log(response.payload);\n            this.setState({\n              alertFunctionIsRestricted: true,\n              restrictedFunction: response.payload.restrictedFunction\n            });\n          } else {\n            this.props.dispatch(findProfile(this.props.match.params.id));\n            this.props.dispatch(auth());\n            this.setState({\n              setSnackfollow: true,\n              setMessage: \"Đã theo dõi\",\n              severity: \"success\"\n            });\n          }\n        });\n      }\n    };\n\n    this.handleClickunfollow = async user => {\n      if (user.request.includes(this.props.user.userData ? this.props.user.userData._id : \"\")) {\n        await this.props.dispatch(undorequestfollow(user._id)).then(response => {\n          this.setState({\n            setSnack: true,\n            setMessage: \"Đã hủy yêu cầu theo dõi\",\n            severity: \"warning\"\n          });\n          this.props.dispatch(findProfile(this.props.match.params.id));\n        });\n      } else {\n        await this.props.dispatch(unfollow(user._id)).then(response => {\n          if (response.payload.restricted) {\n            console.log(response.payload);\n            this.setState({\n              alertFunctionIsRestricted: true,\n              restrictedFunction: response.payload.restrictedFunction\n            });\n          } else {\n            this.props.dispatch(findProfile(this.props.match.params.id));\n            this.props.dispatch(auth());\n            this.setState({\n              setSnackfollow: true,\n              setMessage: \"Đã bỏ theo dõi\",\n              severity: \"success\"\n            });\n          }\n        });\n      }\n    };\n\n    this.setDisplayIndex = index => {\n      this.setState({\n        currentDisplay: index,\n        isStoryPageShow: true\n      });\n    };\n\n    this.openCreateHighlightStoryDiaglog = () => {\n      this.setState({\n        createHighlightStoryDiaglog: true\n      });\n    };\n\n    this.openEditor = () => {};\n\n    this.handleType = type => {\n      if (type == \"tagged\") {\n        this.setState({\n          setType: type\n        });\n        this.props.dispatch(findTagged(this.props.user.userProfile ? this.props.user.userProfile._id : 0));\n      }\n\n      if (type == \"posted\") {\n        this.setState({\n          setType: type\n        });\n        this.props.dispatch(findPosted(this.props.user.userProfile ? this.props.user.userProfile._id : 0));\n      }\n\n      if (type == \"saved\") {\n        this.setState({\n          setType: type\n        });\n        this.props.dispatch(findSaved(this.props.user.userProfile ? this.props.user.userProfile._id : 0));\n      }\n    };\n\n    this.showDialog = () => {\n      this.setState({\n        setDialog: true\n      });\n    };\n\n    this.countNumberOfPost = () => {\n      const postlist = this.props.user.postlist;\n      let cnt = 0;\n      postlist.forEach(item => {\n        if (item.hidden == false) cnt += 1;\n      });\n      return cnt;\n    };\n\n    this.displayStory = () => {\n      this.setState({\n        storyDialog: true\n      });\n    };\n\n    this.setIndex = index => {\n      this.setState({\n        storyIndex: index\n      });\n    };\n\n    this.openDialog = () => {\n      this.setState({\n        storyDialog: true\n      });\n    };\n\n    this.updateForm = element => {\n      const newFormdata = update(element, this.state.formData, \"story_name\");\n\n      if (newFormdata.name.value.trim() != \"\") {\n        this.setState({\n          formSuccess: true,\n          formData: newFormdata\n        });\n      } else {\n        this.setState({\n          formSuccess: false,\n          formData: newFormdata\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    const userID = this.props.match.params.id;\n    this.props.dispatch(findProfile(userID)).then(response => {\n      console.log(response);\n\n      if (response.payload.NotFound) {\n        this.props.history.push(\"/notfound\");\n      }\n    });\n    this.props.dispatch(findPosted(userID));\n    this.props.dispatch(getHighLightStory(userID));\n    this.props.dispatch(getAllStories());\n    this.props.dispatch(getPolicy());\n  }\n\n  showReportForm(type) {\n    return /*#__PURE__*/React.createElement(Report, {\n      isReportFormShow: this.state.isReportFormShow,\n      reportData: this.state.reportData,\n      handleSnackBar: (mess, res) => {\n        this.handleSnackBar(mess, res);\n      },\n      list: this.props.policies.policyList,\n      closeReportForm: () => this.closeReportForm(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.location.key !== this.props.location.key) {\n      const userID = this.props.match.params.id;\n      console.log(userID);\n      this.props.dispatch(findProfile(userID)).then(response => {\n        console.log(response);\n\n        if (response.payload.NotFound) {\n          this.props.history.push(\"/notfound\");\n        }\n      });\n      this.props.dispatch(findPosted(userID));\n      this.props.dispatch(getHighLightStory(userID));\n      this.setState({\n        setfollowerDiaglog: false,\n        setType: \"posted\",\n        setfollowingDiaglog: false\n      });\n    }\n  }\n\n  pullStory(item) {\n    let newhighLightStory = [...this.state.highLightStory];\n    newhighLightStory.splice(this.state.highLightStory.indexOf(item), 1);\n    console.log(newhighLightStory);\n    this.setState({\n      highLightStory: newhighLightStory\n    });\n  }\n\n  pushStory(item) {\n    let newhighLightStory = [...this.state.highLightStory];\n    newhighLightStory.push(item);\n    console.log(newhighLightStory);\n    this.setState({\n      highLightStory: newhighLightStory\n    });\n  }\n\n  render() {\n    const postlist = this.props.user.postlist;\n    const typelist = this.props.user.typelist;\n    const userProfile = this.props.user.userProfile;\n    const yourProfile = this.props.user.userData;\n    const storyList = this.props.user.storyList;\n    return /*#__PURE__*/React.createElement(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile_wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row pro_header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-sm-3 col-3 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 19\n      }\n    }, userProfile ? /*#__PURE__*/React.createElement(\"img\", {\n      src: userProfile.avt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 23\n      }\n    }) : /*#__PURE__*/React.createElement(Skeleton, {\n      variant: \"circle\",\n      width: 160,\n      height: 160,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-1 col-lg-1 col-md-1 col-sm-1 col-sm-1 col-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-8 col-lg-8 col-md-8 col-sm-8 col-sm-8 col-8 action_contain\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"prolile_header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 21\n      }\n    }, userProfile ? userProfile.userName : /*#__PURE__*/React.createElement(Skeleton, {\n      variant: \"rect\",\n      width: 100,\n      height: 36,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 25\n      }\n    })), yourProfile ? yourProfile._id == this.props.match.params.id ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"follow_options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/profilesettings`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 29\n      }\n    }, \"Ch\\u1EC9nh s\\u1EEDa th\\xF4ng tin c\\xE1 nh\\xE2n\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"follow_options\",\n      onClick: async () => {\n        await this.props.dispatch(findPersonal(this.props.match.params.id));\n        await this.props.history.push(`/message/inbox/${this.props.messages.conversationinfo._id}`);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 27\n      }\n    }, \"Nh\\u1EAFn tin\"), userProfile ? userProfile.request.includes(yourProfile._id) ? /*#__PURE__*/React.createElement(Button, {\n      className: \"follow_options\",\n      onClick: () => this.handleClickunfollow(userProfile),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 31\n      }\n    }, \"\\u0110\\xE3 g\\u1EEDi y\\xEAu c\\u1EA7u\") : yourProfile ? yourProfile.followings ? yourProfile.followings.includes(userProfile._id) ? /*#__PURE__*/React.createElement(Button, {\n      className: \"secondary_btn\",\n      onClick: () => this.handleClickunfollow(userProfile),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 35\n      }\n    }, \"\\u0110ang Theo d\\xF5i\") : /*#__PURE__*/React.createElement(Button, {\n      className: \"follow_options\",\n      onClick: () => this.handleClickfollow(userProfile),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 35\n      }\n    }, \"Theo d\\xF5i\") : /*#__PURE__*/React.createElement(Skeleton, {\n      variant: \"rect\",\n      width: 195,\n      height: 40,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 33\n      }\n    }) : /*#__PURE__*/React.createElement(Skeleton, {\n      variant: \"rect\",\n      width: 195,\n      height: 40,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 31\n      }\n    }) : /*#__PURE__*/React.createElement(Skeleton, {\n      variant: \"rect\",\n      width: 195,\n      height: 40,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.showDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Dots, {\n      size: 24,\n      strokeWidth: 1,\n      color: \"#0070F2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 29\n      }\n    }))) : \"\", /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\"\n      },\n      open: this.state.setSnackfollow,\n      onClose: () => this.setState({\n        setSnackfollow: false\n      }),\n      autoHideDuration: 1000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MuiAlert, {\n      elevation: 6,\n      variant: \"filled\",\n      severity: this.state.severity,\n      message: this.state.setMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 23\n      }\n    }, this.state.setMessage)), /*#__PURE__*/React.createElement(Dialog, {\n      className: \"dialog_wrapper\",\n      onClose: () => this.setState({\n        setDialog: false\n      }),\n      open: this.state.setDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        this.props.dispatch(blockUser(userProfile._id)).then(response => {\n          if (response.payload.success) {\n            this.props.history.push(\"/newfeed\");\n          } else {\n            console.log(\"failllllllllllllll\");\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 23\n      }\n    }, \" \", \"Ch\\u1EB7n\", \" \"), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        this.setState({\n          isReportFormShow: true,\n          setDialog: false,\n          reportData: {\n            reportType: \"user\",\n            userId: this.props.match.params.id\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 23\n      }\n    }, \" \", \"B\\xE1o c\\xE1o\", \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile_number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"number_holder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 23\n      }\n    }, postlist ? this.countNumberOfPost() : /*#__PURE__*/React.createElement(Skeleton, {\n      variant: \"rect\",\n      width: 50,\n      height: 30,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 23\n      }\n    }, \"B\\xE0i vi\\u1EBFt\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"number_holder\",\n      onClick: () => {\n        this.setState({\n          setfollowerDiaglog: true\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 23\n      }\n    }, userProfile ? userProfile.followers ? userProfile.followers.length : 0 : /*#__PURE__*/React.createElement(Skeleton, {\n      variant: \"rect\",\n      width: 50,\n      height: 30,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 23\n      }\n    }, \"Ng\\u01B0\\u1EDDi theo d\\xF5i\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"number_holder\",\n      onClick: () => {\n        this.setState({\n          setfollowingDiaglog: true\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 23\n      }\n    }, userProfile ? userProfile.followings ? userProfile.followings.length : 0 : /*#__PURE__*/React.createElement(Skeleton, {\n      variant: \"rect\",\n      width: 50,\n      height: 30,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 23\n      }\n    }, \"\\u0110ang theo d\\xF5i\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 19\n      }\n    }, userProfile ? userProfile.bio : /*#__PURE__*/React.createElement(Skeleton, {\n      variant: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 23\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row highlight-story\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(HighLightStory, {\n      open: this.openEditor,\n      list: this.props.user.highlightStory,\n      storyList: this.props.user.storylist,\n      setIndex: index => {\n        this.setIndex(index);\n      },\n      openDialog: this.openDialog,\n      openCreateHighlightStoryDiaglog: this.openCreateHighlightStoryDiaglog,\n      createButton: yourProfile._id == this.props.match.params.id ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 17\n      }\n    }), this.props.user.highlightStory ? /*#__PURE__*/React.createElement(Dialog, {\n      className: \"story-display-wrapper\",\n      onClose: () => this.setState({\n        storyDialog: false\n      }),\n      open: this.state.storyDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(StoryDisplay, {\n      story: this.props.user.highlightStory[this.state.storyIndex],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 21\n      }\n    })) : this.state.storyIndex), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row divide_type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 19\n      }\n    }, this.state.setType == \"posted\" ? /*#__PURE__*/React.createElement(Button, {\n      className: \"photo_type\",\n      onClick: () => this.handleType(\"posted\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(GridDots, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 25\n      }\n    }, \"\\u0110\\xC3 \\u0110\\u0102NG\")) : /*#__PURE__*/React.createElement(Button, {\n      className: \"photo_type diselected\",\n      onClick: () => this.handleType(\"posted\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(GridDots, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 25\n      }\n    }, \"\\u0110\\xC3 \\u0110\\u0102NG\"))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 19\n      }\n    }, this.state.setType == \"tagged\" ? /*#__PURE__*/React.createElement(Button, {\n      className: \"photo_type\",\n      onClick: () => this.handleType(\"tagged\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Tag, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 25\n      }\n    }, \"\\u0110\\u01AF\\u1EE2C G\\u1EAEN TH\\u1EBA\")) : /*#__PURE__*/React.createElement(Button, {\n      className: \"photo_type diselected\",\n      onClick: () => this.handleType(\"tagged\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Tag, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 25\n      }\n    }, \"\\u0110\\u01AF\\u1EE2C G\\u1EAEN TH\\u1EBA\"))), yourProfile ? yourProfile._id == this.props.match.params.id ? /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 23\n      }\n    }, this.state.setType == \"saved\" ? /*#__PURE__*/React.createElement(Button, {\n      className: \"photo_type\",\n      onClick: () => this.handleType(\"saved\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Bookmark, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 29\n      }\n    }, \"\\u0110\\xC3 L\\u01AFU\")) : /*#__PURE__*/React.createElement(Button, {\n      className: \"photo_type diselected\",\n      onClick: () => this.handleType(\"saved\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Bookmark, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 29\n      }\n    }, \"\\u0110\\xC3 L\\u01AFU\"))) : \"\" : \"\")), yourProfile ? yourProfile._id !== this.props.match.params.id ? this.props.user.userProfile ? this.props.user.userProfile.privateMode === true ? yourProfile.followings.includes(this.props.match.params.id) === false ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-4 col-lg-4 col-md-6 col-sm-6 col-12 image_contain\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-4 col-lg-4 col-md-6 col-sm-6 col-12 image_contain\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 29\n      }\n    }, \"T\\xE0i kho\\u1EA3n ri\\xEAng t\\u01B0 theo d\\xF5i \\u0111\\u1EC3 th\\u1EA5y b\\xE0i vi\\u1EBFt\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-4 col-lg-4 col-md-6 col-sm-6 col-12 image_contain\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 709,\n        columnNumber: 27\n      }\n    })) : /*#__PURE__*/React.createElement(PostRow, {\n      history: this.props.history,\n      typelist: typelist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 25\n      }\n    }) : /*#__PURE__*/React.createElement(PostRow, {\n      history: this.props.history,\n      typelist: typelist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 23\n      }\n    }) : /*#__PURE__*/React.createElement(PostRow, {\n      history: this.props.history,\n      typelist: typelist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(PostRow, {\n      history: this.props.history,\n      typelist: typelist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(PostRow, {\n      history: this.props.history,\n      typelist: typelist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(Dialog, {\n      className: \"dialog_cont\",\n      onClose: () => {\n        this.setState({\n          setfollowerDiaglog: false\n        });\n        this.props.dispatch(findProfile(this.props.match.params.id));\n      },\n      open: this.state.setfollowerDiaglog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dialog_header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 13\n      }\n    }, \"Danh s\\xE1ch theo d\\xF5i\")), userProfile ? userProfile.followers ? userProfile.followers.map(follower => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"follow_list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"list_info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: follower.avt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 761,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Link, {\n        to: `/user/${follower._id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 25\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 27\n        }\n      }, follower.userName))), yourProfile ? yourProfile._id == follower._id ? /*#__PURE__*/React.createElement(Button, {\n        className: \"minibtn\",\n        onClick: () => this.props.history.push(`/user/yourProfile._id`),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 27\n        }\n      }, \" \", \"Trang c\\xE1 nh\\xE2n\") : follower.request.includes(yourProfile._id) ? /*#__PURE__*/React.createElement(Button, {\n        className: \"minibtn\",\n        onClick: () => this.handleClickunfollow(follower),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 27\n        }\n      }, \"\\u0110\\xE3 g\\u1EEDi y\\xEAu c\\u1EA7u\") : yourProfile ? yourProfile.followings.includes(follower._id) ? /*#__PURE__*/React.createElement(Button, {\n        className: \"minibtn\",\n        onClick: () => this.handleClickunfollow(follower),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 29\n        }\n      }, \" \", \"\\u0110ang theo d\\xF5i\") : /*#__PURE__*/React.createElement(Button, {\n        className: \"minibtn\",\n        onClick: () => this.handleClickfollow(follower),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 29\n        }\n      }, \"Theo d\\xF5i\") : null : null);\n    }) : \"\" : \"\"), /*#__PURE__*/React.createElement(Dialog, {\n      className: \"dialog_cont\",\n      onClose: () => {\n        this.setState({\n          setfollowingDiaglog: false\n        });\n        this.props.dispatch(findProfile(this.props.match.params.id));\n      },\n      open: this.state.setfollowingDiaglog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 810,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dialog_header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 818,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 819,\n        columnNumber: 13\n      }\n    }, \"Danh s\\xE1ch \\u0111ang theo d\\xF5i\")), userProfile ? userProfile.followings ? userProfile.followings.map(following => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"follow_list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 825,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"list_info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 826,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: following.avt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 827,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Link, {\n        to: `/user/${following._id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 25\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 830,\n          columnNumber: 27\n        }\n      }, following.userName))), yourProfile ? yourProfile._id == following._id ? /*#__PURE__*/React.createElement(Button, {\n        className: \"minibtn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 27\n        }\n      }, \" Trang c\\xE1 nh\\xE2n\") : following.request.includes(yourProfile._id) ? /*#__PURE__*/React.createElement(Button, {\n        className: \"minibtn\",\n        onClick: () => this.handleClickunfollow(following),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 837,\n          columnNumber: 27\n        }\n      }, \"\\u0110\\xE3 g\\u1EEDi y\\xEAu c\\u1EA7u\") : yourProfile ? yourProfile.followings.includes(following._id) ? /*#__PURE__*/React.createElement(Button, {\n        className: \"minibtn\",\n        onClick: () => this.handleClickunfollow(following),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 845,\n          columnNumber: 29\n        }\n      }, \" \", \"\\u0110ang theo d\\xF5i\") : /*#__PURE__*/React.createElement(Button, {\n        className: \"minibtn\",\n        onClick: () => this.handleClickfollow(following),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 855,\n          columnNumber: 29\n        }\n      }, \"Theo d\\xF5i\") : null : null);\n    }) : \"\" : \"\"), this.props.user.storylist ? /*#__PURE__*/React.createElement(Dialog, {\n      fullWidth: true,\n      maxWidth: \"lg\",\n      className: \"createHighLightStoryForm\",\n      onClose: () => {\n        this.setState({\n          createHighlightStoryDiaglog: false\n        });\n      },\n      open: this.state.createHighlightStoryDiaglog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 872,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 881,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 882,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-3 col-lg-3 no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 883,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row no-gutters form-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 884,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 885,\n        columnNumber: 21\n      }\n    }, \"Tin n\\u1ED5i b\\u1EADt\"), /*#__PURE__*/React.createElement(FormField, {\n      id: \"name\",\n      formData: this.state.formData.name,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 886,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-feature\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 891,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-cancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 892,\n        columnNumber: 23\n      }\n    }, \"H\\u1EE7y\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: () => {\n        //console.log(this.state.formSuccess,this.state.highLightStory)\n        if (this.state.formSuccess && this.state.highLightStory.length != 0) {\n          let dataToSubmit = {\n            name: this.state.formData.name.value,\n            storyList: [...this.state.highLightStory]\n          };\n          console.log(\"data\", dataToSubmit);\n          this.props.dispatch(createHighLightStory(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              this.setState({\n                addStorySuccess: true,\n                formMessage: \"Thêm thành công\",\n                createHighlightStoryDiaglog: false,\n                addStoryStatus: true\n              });\n            } else {\n              this.setState({\n                addStorySuccess: false,\n                formMessage: \"Lỗi! Vui lòng thử lại :(\",\n                addStoryStatus: true\n              });\n            }\n          });\n        } else {\n          console.log(this.state.formError, this.state.highlightStory);\n          this.setState({\n            addStorySuccess: false,\n            formMessage: \"Vui lòng kiểm tra thông lại thông tin :(\",\n            addStoryStatus: true\n          });\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 893,\n        columnNumber: 23\n      }\n    }, \"Th\\xEAm m\\u1EDBi\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-9 col-lg-9 no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 943,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row no-gutters form-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 944,\n        columnNumber: 19\n      }\n    }, this.props.user.storylist.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => {\n          this.state.highLightStory.includes(item._id) ? this.pullStory(item._id) : this.pushStory(item._id);\n        },\n        className: `col-lg-3 no-gutters image-wrapper`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 947,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: `story-item ${this.state.highLightStory.includes(item._id) ? \"story_selected\" : \"unselected_story\"}`,\n        src: item.image.url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 955,\n          columnNumber: 27\n        }\n      }));\n    })))))) : \"loading\", /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      open: this.state.addStoryStatus,\n      onClose: () => this.setState({\n        addStoryStatus: false\n      }),\n      autoHideDuration: 1000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 975,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MuiAlert, {\n      elevation: 6,\n      variant: \"filled\",\n      severity: `${this.state.addStorySuccess ? \"success\" : \"warning\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 984,\n        columnNumber: 11\n      }\n    }, this.state.formMessage)), /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      open: this.state.reportStatus,\n      onClose: () => this.setState({\n        reportStatus: false\n      }),\n      autoHideDuration: 3000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 993,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MuiAlert, {\n      elevation: 6,\n      variant: \"filled\",\n      severity: this.state.reportSuccess ? \"success\" : \"warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1002,\n        columnNumber: 11\n      }\n    }, this.state.SnackMess)), this.showReportForm(), /*#__PURE__*/React.createElement(Dialog, {\n      className: \"dialog_cont\",\n      onClose: () => {\n        this.setState({\n          alertFunctionIsRestricted: false\n        });\n      },\n      open: this.state.alertFunctionIsRestricted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1011,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dialog_header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1018,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1019,\n        columnNumber: 13\n      }\n    }, \"Ba\\u0323n \\u0111a\\u0303 bi\\u0323 ha\\u0323n ch\\xEA\\u0301 ch\\u01B0\\u0301c n\\u0103ng na\\u0300y cho \\u0111\\xEA\\u0301n\", \" \", moment(this.state.restrictedFunction.amountOfTime).format(\"L\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    products: state.products,\n    policies: state.policies,\n    messages: state.messages\n  };\n};\n\nexport default connect(mapStateToProps)(withRouter(Profile));","map":{"version":3,"sources":["D:/Kltn/test/social-media/client/src/components/Profile/index.js"],"names":["React","Component","Layout","connect","findProfile","follow","unfollow","findTagged","findPosted","findSaved","auth","blockUser","requestfollow","undorequestfollow","findPersonal","getHighLightStory","getAllStories","createHighLightStory","GridDots","Tag","Dots","CircleX","Heart","Message2","Bookmark","HighLightStory","StoryDisplay","Button","withTheme","Snackbar","SnackbarMessage","Dialog","Skeleton","MuiAlert","Link","withRouter","FormField","populateOptionFields","update","ifFormValid","generateData","resetFields","Slide","Report","PostRow","getPolicy","moment","Transition","forwardRef","props","ref","Profile","state","setfollowerDiaglog","setfollowingDiaglog","setSnackfollow","setSnack","setDialog","setType","setMessage","severity","followerslist","followings","storyDialog","storyIndex","storyUploading","createHighlightStoryDiaglog","highLightStory","formSuccess","formMessage","formData","name","element","value","config","placeholder","label","options","validation","required","valid","touched","validationMessage","showlabel","addStorySuccess","addStoryStatus","reportStatus","reportSuccess","SnackMess","isReportFormShow","reportData","alertFunctionIsRestricted","restrictedFunction","handleSnackBar","mess","res","console","log","setState","closeReportForm","handleClickfollow","user","privateMode","dispatch","_id","then","response","match","params","id","payload","restricted","handleClickunfollow","request","includes","userData","setDisplayIndex","index","currentDisplay","isStoryPageShow","openCreateHighlightStoryDiaglog","openEditor","handleType","type","userProfile","showDialog","countNumberOfPost","postlist","cnt","forEach","item","hidden","displayStory","setIndex","openDialog","updateForm","newFormdata","trim","componentDidMount","userID","NotFound","history","push","showReportForm","policies","policyList","componentDidUpdate","prevProps","location","key","pullStory","newhighLightStory","splice","indexOf","pushStory","render","typelist","yourProfile","storyList","avt","userName","messages","conversationinfo","vertical","horizontal","success","reportType","userId","followers","length","bio","highlightStory","storylist","map","follower","following","dataToSubmit","formError","image","url","amountOfTime","format","mapStateToProps","products"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Layout from \"../../hoc/layout\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  findProfile,\r\n  follow,\r\n  unfollow,\r\n  findTagged,\r\n  findPosted,\r\n  findSaved,\r\n  auth,\r\n  blockUser,\r\n  requestfollow,\r\n  undorequestfollow,\r\n} from \"../../../src/actions/user_action\";\r\nimport { findPersonal } from \"../../../src/actions/message_action\";\r\nimport {\r\n  getHighLightStory,\r\n  getAllStories,\r\n  createHighLightStory,\r\n} from \"../../actions/user_action\";\r\nimport \"./profile.scss\";\r\nimport {\r\n  GridDots,\r\n  Tag,\r\n  Dots,\r\n  CircleX,\r\n  Heart,\r\n  Message2,\r\n  Bookmark,\r\n} from \"tabler-icons-react\";\r\nimport HighLightStory from \"./HighLightStory\";\r\nimport StoryDisplay from \"./StoryDisplay\";\r\nimport {\r\n  Button,\r\n  withTheme,\r\n  Snackbar,\r\n  SnackbarMessage,\r\n  Dialog,\r\n} from \"@material-ui/core\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport FormField from \"../ultils/Form/FormField\";\r\nimport {\r\n  populateOptionFields,\r\n  update,\r\n  ifFormValid,\r\n  generateData,\r\n  resetFields,\r\n} from \"../ultils/Form/FormActions\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Report from \"../Report/Report\";\r\nimport PostRow from \"./post\";\r\nimport { getPolicy } from \"../../actions/policy_actions\";\r\nimport moment from \"moment\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nclass Profile extends Component {\r\n  state = {\r\n    setfollowerDiaglog: false,\r\n    setfollowingDiaglog: false,\r\n    setSnackfollow: false,\r\n    setSnack: false,\r\n    setDialog: false,\r\n    setType: \"posted\",\r\n    setMessage: \"\",\r\n    severity: \"\",\r\n    followerslist: [],\r\n    followings: [],\r\n\r\n    storyDialog: false,\r\n    storyIndex: -1,\r\n    storyUploading: false,\r\n\r\n    createHighlightStoryDiaglog: false,\r\n    highLightStory: [],\r\n\r\n    formSuccess: false,\r\n    formMessage: \"\",\r\n    formData: {\r\n      name: {\r\n        element: \"input\",\r\n        value: \"\",\r\n        config: {\r\n          placeholder: \"Tên\",\r\n          label: \"Tên\",\r\n          name: \"name\",\r\n          options: [],\r\n        },\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n        validationMessage: \"\",\r\n        showlabel: false,\r\n      },\r\n    },\r\n\r\n    setSnack: false,\r\n    addStorySuccess: false,\r\n    addStoryStatus: false,\r\n\r\n    reportStatus: false,\r\n    reportSuccess: false,\r\n    SnackMess: \"\",\r\n\r\n    isReportFormShow: false,\r\n    reportData: {},\r\n\r\n    setfollowerDiaglog: false,\r\n    alertFunctionIsRestricted: false,\r\n\r\n    restrictedFunction: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    const userID = this.props.match.params.id;\r\n    this.props.dispatch(findProfile(userID)).then((response) => {\r\n      console.log(response);\r\n      if (response.payload.NotFound) {\r\n        this.props.history.push(\"/notfound\");\r\n      }\r\n    });\r\n    this.props.dispatch(findPosted(userID));\r\n    this.props.dispatch(getHighLightStory(userID));\r\n    this.props.dispatch(getAllStories());\r\n    this.props.dispatch(getPolicy());\r\n  }\r\n\r\n  showReportForm(type) {\r\n    return (\r\n      <Report\r\n        isReportFormShow={this.state.isReportFormShow}\r\n        reportData={this.state.reportData}\r\n        handleSnackBar={(mess, res) => {\r\n          this.handleSnackBar(mess, res);\r\n        }}\r\n        list={this.props.policies.policyList}\r\n        closeReportForm={() => this.closeReportForm()}\r\n      />\r\n    );\r\n  }\r\n\r\n  handleSnackBar = (mess, res) => {\r\n    console.log(mess, res);\r\n    this.setState({ reportStatus: true, SnackMess: mess, reportSuccess: res });\r\n  };\r\n\r\n  closeReportForm = () => {\r\n    this.setState({\r\n      isReportFormShow: false,\r\n      reportData: {},\r\n    });\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.location.key !== this.props.location.key) {\r\n      const userID = this.props.match.params.id;\r\n      console.log(userID);\r\n      this.props.dispatch(findProfile(userID)).then((response) => {\r\n        console.log(response);\r\n\r\n        if (response.payload.NotFound) {\r\n          this.props.history.push(\"/notfound\");\r\n        }\r\n      });\r\n      this.props.dispatch(findPosted(userID));\r\n      this.props.dispatch(getHighLightStory(userID));\r\n\r\n      this.setState({\r\n        setfollowerDiaglog: false,\r\n        setType: \"posted\",\r\n        setfollowingDiaglog: false,\r\n      });\r\n    }\r\n  }\r\n  handleClickfollow = async (user) => {\r\n    if (user.privateMode === true) {\r\n      await this.props.dispatch(requestfollow(user._id)).then((response) => {\r\n        this.setState({\r\n          setSnackfollow: true,\r\n          setMessage: \"Đã gửi yêu cầu\",\r\n          severity: \"success\",\r\n        });\r\n        this.props.dispatch(findProfile(this.props.match.params.id));\r\n      });\r\n    } else {\r\n      await this.props.dispatch(follow(user._id)).then((response) => {\r\n        if (response.payload.restricted) {\r\n          console.log(response.payload);\r\n          this.setState({\r\n            alertFunctionIsRestricted: true,\r\n            restrictedFunction: response.payload.restrictedFunction,\r\n          });\r\n        } else {\r\n          this.props.dispatch(findProfile(this.props.match.params.id));\r\n          this.props.dispatch(auth());\r\n          this.setState({\r\n            setSnackfollow: true,\r\n            setMessage: \"Đã theo dõi\",\r\n            severity: \"success\",\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  handleClickunfollow = async (user) => {\r\n    if (\r\n      user.request.includes(\r\n        this.props.user.userData ? this.props.user.userData._id : \"\"\r\n      )\r\n    ) {\r\n      await this.props\r\n        .dispatch(undorequestfollow(user._id))\r\n        .then((response) => {\r\n          this.setState({\r\n            setSnack: true,\r\n            setMessage: \"Đã hủy yêu cầu theo dõi\",\r\n            severity: \"warning\",\r\n          });\r\n          this.props.dispatch(findProfile(this.props.match.params.id));\r\n        });\r\n    } else {\r\n      await this.props.dispatch(unfollow(user._id)).then((response) => {\r\n        if (response.payload.restricted) {\r\n          console.log(response.payload);\r\n          this.setState({\r\n            alertFunctionIsRestricted: true,\r\n            restrictedFunction: response.payload.restrictedFunction,\r\n          });\r\n        } else {\r\n          this.props.dispatch(findProfile(this.props.match.params.id));\r\n          this.props.dispatch(auth());\r\n          this.setState({\r\n            setSnackfollow: true,\r\n            setMessage: \"Đã bỏ theo dõi\",\r\n            severity: \"success\",\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  setDisplayIndex = (index) => {\r\n    this.setState({\r\n      currentDisplay: index,\r\n      isStoryPageShow: true,\r\n    });\r\n  };\r\n\r\n  openCreateHighlightStoryDiaglog = () => {\r\n    this.setState({ createHighlightStoryDiaglog: true });\r\n  };\r\n\r\n  openEditor = () => {};\r\n\r\n  handleType = (type) => {\r\n    if (type == \"tagged\") {\r\n      this.setState({ setType: type });\r\n      this.props.dispatch(\r\n        findTagged(\r\n          this.props.user.userProfile ? this.props.user.userProfile._id : 0\r\n        )\r\n      );\r\n    }\r\n    if (type == \"posted\") {\r\n      this.setState({ setType: type });\r\n      this.props.dispatch(\r\n        findPosted(\r\n          this.props.user.userProfile ? this.props.user.userProfile._id : 0\r\n        )\r\n      );\r\n    }\r\n    if (type == \"saved\") {\r\n      this.setState({ setType: type });\r\n      this.props.dispatch(\r\n        findSaved(\r\n          this.props.user.userProfile ? this.props.user.userProfile._id : 0\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  showDialog = () => {\r\n    this.setState({ setDialog: true });\r\n  };\r\n\r\n  countNumberOfPost = () => {\r\n    const postlist = this.props.user.postlist;\r\n    let cnt = 0;\r\n    postlist.forEach((item) => {\r\n      if (item.hidden == false) cnt += 1;\r\n    });\r\n    return cnt;\r\n  };\r\n\r\n  displayStory = () => {\r\n    this.setState({\r\n      storyDialog: true,\r\n    });\r\n  };\r\n\r\n  setIndex = (index) => {\r\n    this.setState({\r\n      storyIndex: index,\r\n    });\r\n  };\r\n\r\n  openDialog = () => {\r\n    this.setState({ storyDialog: true });\r\n  };\r\n\r\n  pullStory(item) {\r\n    let newhighLightStory = [...this.state.highLightStory];\r\n    newhighLightStory.splice(this.state.highLightStory.indexOf(item), 1);\r\n    console.log(newhighLightStory);\r\n    this.setState({ highLightStory: newhighLightStory });\r\n  }\r\n\r\n  pushStory(item) {\r\n    let newhighLightStory = [...this.state.highLightStory];\r\n    newhighLightStory.push(item);\r\n    console.log(newhighLightStory);\r\n    this.setState({ highLightStory: newhighLightStory });\r\n  }\r\n\r\n  updateForm = (element) => {\r\n    const newFormdata = update(element, this.state.formData, \"story_name\");\r\n    if (newFormdata.name.value.trim() != \"\") {\r\n      this.setState({\r\n        formSuccess: true,\r\n        formData: newFormdata,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        formSuccess: false,\r\n        formData: newFormdata,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const postlist = this.props.user.postlist;\r\n    const typelist = this.props.user.typelist;\r\n    const userProfile = this.props.user.userProfile;\r\n    const yourProfile = this.props.user.userData;\r\n    const storyList = this.props.user.storyList;\r\n\r\n    return (\r\n      <Layout>\r\n        <div className=\"Profile\">\r\n          <div className=\"profile_container\">\r\n            <div className=\"profile_wrapper\">\r\n              <div className=\"row pro_header\">\r\n                <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-sm-3 col-3 \">\r\n                  <div className=\"profile-img\">\r\n                    {userProfile ? (\r\n                      <img src={userProfile.avt}></img>\r\n                    ) : (\r\n                      <Skeleton variant=\"circle\" width={160} height={160} />\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-xl-1 col-lg-1 col-md-1 col-sm-1 col-sm-1 col-1\"></div>\r\n                <div className=\"col-xl-8 col-lg-8 col-md-8 col-sm-8 col-sm-8 col-8 action_contain\">\r\n                  <div className=\"prolile_header\">\r\n                    <div className=\"name\">\r\n                      {userProfile ? (\r\n                        userProfile.userName\r\n                      ) : (\r\n                        <Skeleton variant=\"rect\" width={100} height={36} />\r\n                      )}\r\n                    </div>\r\n                    {yourProfile ? (\r\n                      yourProfile._id == this.props.match.params.id ? (\r\n                        <div>\r\n                          <Button className=\"follow_options\">\r\n                            <Link to={`/profilesettings`}>\r\n                              Chỉnh sửa thông tin cá nhân\r\n                            </Link>\r\n                          </Button>\r\n                        </div>\r\n                      ) : (\r\n                        <div>\r\n                          <Button\r\n                            className=\"follow_options\"\r\n                            onClick={async () => {\r\n                              await this.props.dispatch(\r\n                                findPersonal(this.props.match.params.id)\r\n                              );\r\n                              await this.props.history.push(\r\n                                `/message/inbox/${this.props.messages.conversationinfo._id}`\r\n                              );\r\n                            }}\r\n                          >\r\n                            Nhắn tin\r\n                          </Button>\r\n                          {userProfile ? (\r\n                            userProfile.request.includes(yourProfile._id) ? (\r\n                              <Button\r\n                                className=\"follow_options\"\r\n                                onClick={() =>\r\n                                  this.handleClickunfollow(userProfile)\r\n                                }\r\n                              >\r\n                                Đã gửi yêu cầu\r\n                              </Button>\r\n                            ) : yourProfile ? (\r\n                              yourProfile.followings ? (\r\n                                yourProfile.followings.includes(\r\n                                  userProfile._id\r\n                                ) ? (\r\n                                  <Button\r\n                                    className=\"secondary_btn\"\r\n                                    onClick={() =>\r\n                                      this.handleClickunfollow(userProfile)\r\n                                    }\r\n                                  >\r\n                                    Đang Theo dõi\r\n                                  </Button>\r\n                                ) : (\r\n                                  <Button\r\n                                    className=\"follow_options\"\r\n                                    onClick={() =>\r\n                                      this.handleClickfollow(userProfile)\r\n                                    }\r\n                                  >\r\n                                    Theo dõi\r\n                                  </Button>\r\n                                )\r\n                              ) : (\r\n                                <Skeleton\r\n                                  variant=\"rect\"\r\n                                  width={195}\r\n                                  height={40}\r\n                                />\r\n                              )\r\n                            ) : (\r\n                              <Skeleton\r\n                                variant=\"rect\"\r\n                                width={195}\r\n                                height={40}\r\n                              />\r\n                            )\r\n                          ) : (\r\n                            <Skeleton variant=\"rect\" width={195} height={40} />\r\n                          )}\r\n                          <Button onClick={this.showDialog}>\r\n                            <Dots size={24} strokeWidth={1} color={\"#0070F2\"} />\r\n                          </Button>\r\n                        </div>\r\n                      )\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n\r\n                    <Snackbar\r\n                      anchorOrigin={{\r\n                        vertical: \"bottom\",\r\n                        horizontal: \"center\",\r\n                      }}\r\n                      open={this.state.setSnackfollow}\r\n                      onClose={() => this.setState({ setSnackfollow: false })}\r\n                      autoHideDuration={1000}\r\n                    >\r\n                      <MuiAlert\r\n                        elevation={6}\r\n                        variant=\"filled\"\r\n                        severity={this.state.severity}\r\n                        message={this.state.setMessage}\r\n                      >\r\n                        {this.state.setMessage}\r\n                      </MuiAlert>\r\n                    </Snackbar>\r\n                    <Dialog\r\n                      className=\"dialog_wrapper\"\r\n                      onClose={() => this.setState({ setDialog: false })}\r\n                      open={this.state.setDialog}\r\n                    >\r\n                      <Button\r\n                        onClick={() => {\r\n                          this.props\r\n                            .dispatch(blockUser(userProfile._id))\r\n                            .then((response) => {\r\n                              if (response.payload.success) {\r\n                                this.props.history.push(\"/newfeed\");\r\n                              } else {\r\n                                console.log(\"failllllllllllllll\");\r\n                              }\r\n                            });\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        Chặn{\" \"}\r\n                      </Button>\r\n                      <Button\r\n                        onClick={() => {\r\n                          this.setState({\r\n                            isReportFormShow: true,\r\n                            setDialog: false,\r\n                            reportData: {\r\n                              reportType: \"user\",\r\n                              userId: this.props.match.params.id,\r\n                            },\r\n                          });\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        Báo cáo{\" \"}\r\n                      </Button>\r\n                    </Dialog>\r\n                  </div>\r\n                  <div className=\"profile_number\">\r\n                    <div className=\"number_holder\">\r\n                      <div className=\"number\">\r\n                        {postlist ? (\r\n                          this.countNumberOfPost()\r\n                        ) : (\r\n                          <Skeleton variant=\"rect\" width={50} height={30} />\r\n                        )}\r\n                      </div>\r\n                      <div className=\"type\">Bài viết</div>\r\n                    </div>\r\n                    <div\r\n                      className=\"number_holder\"\r\n                      onClick={() => {\r\n                        this.setState({ setfollowerDiaglog: true });\r\n                      }}\r\n                    >\r\n                      <div className=\"number\">\r\n                        {userProfile ? (\r\n                          userProfile.followers ? (\r\n                            userProfile.followers.length\r\n                          ) : (\r\n                            0\r\n                          )\r\n                        ) : (\r\n                          <Skeleton variant=\"rect\" width={50} height={30} />\r\n                        )}\r\n                      </div>\r\n                      <div className=\"type\">Người theo dõi</div>\r\n                    </div>\r\n                    <div\r\n                      className=\"number_holder\"\r\n                      onClick={() => {\r\n                        this.setState({ setfollowingDiaglog: true });\r\n                      }}\r\n                    >\r\n                      <div className=\"number\">\r\n                        {userProfile ? (\r\n                          userProfile.followings ? (\r\n                            userProfile.followings.length\r\n                          ) : (\r\n                            0\r\n                          )\r\n                        ) : (\r\n                          <Skeleton variant=\"rect\" width={50} height={30} />\r\n                        )}\r\n                      </div>\r\n                      <div className=\"type\">Đang theo dõi</div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"bio\">\r\n                    {userProfile ? (\r\n                      userProfile.bio\r\n                    ) : (\r\n                      <Skeleton variant=\"text\" />\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row highlight-story\">\r\n                <HighLightStory\r\n                  open={this.openEditor}\r\n                  list={this.props.user.highlightStory}\r\n                  storyList={this.props.user.storylist}\r\n                  setIndex={(index) => {\r\n                    this.setIndex(index);\r\n                  }}\r\n                  openDialog={this.openDialog}\r\n                  openCreateHighlightStoryDiaglog={\r\n                    this.openCreateHighlightStoryDiaglog\r\n                  }\r\n                  createButton={\r\n                    yourProfile._id == this.props.match.params.id ? true : false\r\n                  }\r\n                />\r\n                {this.props.user.highlightStory ? (\r\n                  <Dialog\r\n                    className=\"story-display-wrapper\"\r\n                    onClose={() => this.setState({ storyDialog: false })}\r\n                    open={this.state.storyDialog}\r\n                  >\r\n                    <StoryDisplay\r\n                      story={\r\n                        this.props.user.highlightStory[this.state.storyIndex]\r\n                      }\r\n                    />\r\n                  </Dialog>\r\n                ) : (\r\n                  this.state.storyIndex\r\n                )}\r\n              </div>\r\n              <div className=\"row divide_type\">\r\n                <ul>\r\n                  <li>\r\n                    {this.state.setType == \"posted\" ? (\r\n                      <Button\r\n                        className=\"photo_type\"\r\n                        onClick={() => this.handleType(\"posted\")}\r\n                      >\r\n                        <GridDots\r\n                          size={20}\r\n                          strokeWidth={1}\r\n                          color=\"black\"\r\n                        ></GridDots>\r\n                        <h2>ĐÃ ĐĂNG</h2>\r\n                      </Button>\r\n                    ) : (\r\n                      <Button\r\n                        className=\"photo_type diselected\"\r\n                        onClick={() => this.handleType(\"posted\")}\r\n                      >\r\n                        <GridDots\r\n                          size={20}\r\n                          strokeWidth={1}\r\n                          color=\"black\"\r\n                        ></GridDots>\r\n                        <h2>ĐÃ ĐĂNG</h2>\r\n                      </Button>\r\n                    )}\r\n                  </li>\r\n                  <li>\r\n                    {this.state.setType == \"tagged\" ? (\r\n                      <Button\r\n                        className=\"photo_type\"\r\n                        onClick={() => this.handleType(\"tagged\")}\r\n                      >\r\n                        <Tag size={20} strokeWidth={1} color=\"black\"></Tag>\r\n                        <h2>ĐƯỢC GẮN THẺ</h2>\r\n                      </Button>\r\n                    ) : (\r\n                      <Button\r\n                        className=\"photo_type diselected\"\r\n                        onClick={() => this.handleType(\"tagged\")}\r\n                      >\r\n                        <Tag size={20} strokeWidth={1} color=\"black\"></Tag>\r\n                        <h2>ĐƯỢC GẮN THẺ</h2>\r\n                      </Button>\r\n                    )}\r\n                  </li>\r\n                  {yourProfile ? (\r\n                    yourProfile._id == this.props.match.params.id ? (\r\n                      <li>\r\n                        {this.state.setType == \"saved\" ? (\r\n                          <Button\r\n                            className=\"photo_type\"\r\n                            onClick={() => this.handleType(\"saved\")}\r\n                          >\r\n                            <Bookmark\r\n                              size={20}\r\n                              strokeWidth={1}\r\n                              color=\"black\"\r\n                            ></Bookmark>\r\n                            <h2>ĐÃ LƯU</h2>\r\n                          </Button>\r\n                        ) : (\r\n                          <Button\r\n                            className=\"photo_type diselected\"\r\n                            onClick={() => this.handleType(\"saved\")}\r\n                          >\r\n                            <Bookmark\r\n                              size={20}\r\n                              strokeWidth={1}\r\n                              color=\"black\"\r\n                            ></Bookmark>\r\n                            <h2>ĐÃ LƯU</h2>\r\n                          </Button>\r\n                        )}\r\n                      </li>\r\n                    ) : (\r\n                      \"\"\r\n                    )\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </ul>\r\n              </div>\r\n              {yourProfile ? (\r\n                yourProfile._id !== this.props.match.params.id ? (\r\n                  this.props.user.userProfile ? (\r\n                    this.props.user.userProfile.privateMode === true ? (\r\n                      yourProfile.followings.includes(\r\n                        this.props.match.params.id\r\n                      ) === false ? (\r\n                        <div className=\"row body\">\r\n                          <div className=\"col-xl-4 col-lg-4 col-md-6 col-sm-6 col-12 image_contain\"></div>\r\n                          <div className=\"col-xl-4 col-lg-4 col-md-6 col-sm-6 col-12 image_contain\">\r\n                            <h6>\r\n                              Tài khoản riêng tư theo dõi để thấy bài viết\r\n                            </h6>\r\n                          </div>\r\n                          <div className=\"col-xl-4 col-lg-4 col-md-6 col-sm-6 col-12 image_contain\"></div>\r\n                        </div>\r\n                      ) : (\r\n                        <PostRow\r\n                          history={this.props.history}\r\n                          typelist={typelist}\r\n                        ></PostRow>\r\n                      )\r\n                    ) : (\r\n                      <PostRow\r\n                        history={this.props.history}\r\n                        typelist={typelist}\r\n                      ></PostRow>\r\n                    )\r\n                  ) : (\r\n                    <PostRow\r\n                      history={this.props.history}\r\n                      typelist={typelist}\r\n                    ></PostRow>\r\n                  )\r\n                ) : (\r\n                  <PostRow\r\n                    history={this.props.history}\r\n                    typelist={typelist}\r\n                  ></PostRow>\r\n                )\r\n              ) : (\r\n                <PostRow\r\n                  history={this.props.history}\r\n                  typelist={typelist}\r\n                ></PostRow>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Dialog\r\n          className=\"dialog_cont\"\r\n          onClose={() => {\r\n            this.setState({ setfollowerDiaglog: false });\r\n            this.props.dispatch(findProfile(this.props.match.params.id));\r\n          }}\r\n          open={this.state.setfollowerDiaglog}\r\n        >\r\n          <div className=\"dialog_header\">\r\n            <h5>Danh sách theo dõi</h5>\r\n          </div>\r\n          {userProfile\r\n            ? userProfile.followers\r\n              ? userProfile.followers.map((follower) => {\r\n                  return (\r\n                    <div className=\"follow_list\">\r\n                      <div className=\"list_info\">\r\n                        <img src={follower.avt}></img>\r\n                        <Link to={`/user/${follower._id}`}>\r\n                          {\" \"}\r\n                          <h2>{follower.userName}</h2>\r\n                        </Link>\r\n                      </div>\r\n                      {yourProfile ? (\r\n                        yourProfile._id == follower._id ? (\r\n                          <Button\r\n                            className=\"minibtn\"\r\n                            onClick={() =>\r\n                              this.props.history.push(`/user/yourProfile._id`)\r\n                            }\r\n                          >\r\n                            {\" \"}\r\n                            Trang cá nhân\r\n                          </Button>\r\n                        ) : follower.request.includes(yourProfile._id) ? (\r\n                          <Button\r\n                            className=\"minibtn\"\r\n                            onClick={() => this.handleClickunfollow(follower)}\r\n                          >\r\n                            Đã gửi yêu cầu\r\n                          </Button>\r\n                        ) : yourProfile ? (\r\n                          yourProfile.followings.includes(follower._id) ? (\r\n                            <Button\r\n                              className=\"minibtn\"\r\n                              onClick={() => this.handleClickunfollow(follower)}\r\n                            >\r\n                              {\" \"}\r\n                              Đang theo dõi\r\n                            </Button>\r\n                          ) : (\r\n                            <Button\r\n                              className=\"minibtn\"\r\n                              onClick={() => this.handleClickfollow(follower)}\r\n                            >\r\n                              Theo dõi\r\n                            </Button>\r\n                          )\r\n                        ) : null\r\n                      ) : null}\r\n                    </div>\r\n                  );\r\n                })\r\n              : \"\"\r\n            : \"\"}\r\n        </Dialog>\r\n        <Dialog\r\n          className=\"dialog_cont\"\r\n          onClose={() => {\r\n            this.setState({ setfollowingDiaglog: false });\r\n            this.props.dispatch(findProfile(this.props.match.params.id));\r\n          }}\r\n          open={this.state.setfollowingDiaglog}\r\n        >\r\n          <div className=\"dialog_header\">\r\n            <h5>Danh sách đang theo dõi</h5>\r\n          </div>\r\n          {userProfile\r\n            ? userProfile.followings\r\n              ? userProfile.followings.map((following) => {\r\n                  return (\r\n                    <div className=\"follow_list\">\r\n                      <div className=\"list_info\">\r\n                        <img src={following.avt}></img>\r\n                        <Link to={`/user/${following._id}`}>\r\n                          {\" \"}\r\n                          <h2>{following.userName}</h2>\r\n                        </Link>\r\n                      </div>\r\n                      {yourProfile ? (\r\n                        yourProfile._id == following._id ? (\r\n                          <Button className=\"minibtn\"> Trang cá nhân</Button>\r\n                        ) : following.request.includes(yourProfile._id) ? (\r\n                          <Button\r\n                            className=\"minibtn\"\r\n                            onClick={() => this.handleClickunfollow(following)}\r\n                          >\r\n                            Đã gửi yêu cầu\r\n                          </Button>\r\n                        ) : yourProfile ? (\r\n                          yourProfile.followings.includes(following._id) ? (\r\n                            <Button\r\n                              className=\"minibtn\"\r\n                              onClick={() =>\r\n                                this.handleClickunfollow(following)\r\n                              }\r\n                            >\r\n                              {\" \"}\r\n                              Đang theo dõi\r\n                            </Button>\r\n                          ) : (\r\n                            <Button\r\n                              className=\"minibtn\"\r\n                              onClick={() => this.handleClickfollow(following)}\r\n                            >\r\n                              Theo dõi\r\n                            </Button>\r\n                          )\r\n                        ) : null\r\n                      ) : null}\r\n                    </div>\r\n                  );\r\n                })\r\n              : \"\"\r\n            : \"\"}\r\n        </Dialog>\r\n        {/* Thêm story */}\r\n        {this.props.user.storylist ? (\r\n          <Dialog\r\n            fullWidth={true}\r\n            maxWidth=\"lg\"\r\n            className=\"createHighLightStoryForm\"\r\n            onClose={() => {\r\n              this.setState({ createHighlightStoryDiaglog: false });\r\n            }}\r\n            open={this.state.createHighlightStoryDiaglog}\r\n          >\r\n            <div className=\"wrapper\">\r\n              <div className=\"row no-gutters\">\r\n                <div className=\"col-xl-3 col-lg-3 no-gutters\">\r\n                  <div className=\"row no-gutters form-header\">\r\n                    <h5>Tin nổi bật</h5>\r\n                    <FormField\r\n                      id={\"name\"}\r\n                      formData={this.state.formData.name}\r\n                      change={(element) => this.updateForm(element)}\r\n                    />\r\n                    <div className=\"header-feature\">\r\n                      <button className=\"btn btn-cancel\">Hủy</button>\r\n                      <button\r\n                        className=\"btn\"\r\n                        onClick={() => {\r\n                          //console.log(this.state.formSuccess,this.state.highLightStory)\r\n                          if (\r\n                            this.state.formSuccess &&\r\n                            this.state.highLightStory.length != 0\r\n                          ) {\r\n                            let dataToSubmit = {\r\n                              name: this.state.formData.name.value,\r\n                              storyList: [...this.state.highLightStory],\r\n                            };\r\n                            console.log(\"data\", dataToSubmit);\r\n                            this.props\r\n                              .dispatch(createHighLightStory(dataToSubmit))\r\n                              .then((response) => {\r\n                                if (response.payload.success) {\r\n                                  this.setState({\r\n                                    addStorySuccess: true,\r\n                                    formMessage: \"Thêm thành công\",\r\n                                    createHighlightStoryDiaglog: false,\r\n                                    addStoryStatus: true,\r\n                                  });\r\n                                } else {\r\n                                  this.setState({\r\n                                    addStorySuccess: false,\r\n                                    formMessage: \"Lỗi! Vui lòng thử lại :(\",\r\n                                    addStoryStatus: true,\r\n                                  });\r\n                                }\r\n                              });\r\n                          } else {\r\n                            console.log(\r\n                              this.state.formError,\r\n                              this.state.highlightStory\r\n                            );\r\n                            this.setState({\r\n                              addStorySuccess: false,\r\n                              formMessage:\r\n                                \"Vui lòng kiểm tra thông lại thông tin :(\",\r\n                              addStoryStatus: true,\r\n                            });\r\n                          }\r\n                        }}\r\n                      >\r\n                        Thêm mới\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-xl-9 col-lg-9 no-gutters\">\r\n                  <div className=\"row no-gutters form-content\">\r\n                    {this.props.user.storylist.map((item, index) => {\r\n                      return (\r\n                        <div\r\n                          onClick={() => {\r\n                            this.state.highLightStory.includes(item._id)\r\n                              ? this.pullStory(item._id)\r\n                              : this.pushStory(item._id);\r\n                          }}\r\n                          className={`col-lg-3 no-gutters image-wrapper`}\r\n                        >\r\n                          <img\r\n                            className={`story-item ${\r\n                              this.state.highLightStory.includes(item._id)\r\n                                ? \"story_selected\"\r\n                                : \"unselected_story\"\r\n                            }`}\r\n                            src={item.image.url}\r\n                          />\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Dialog>\r\n        ) : (\r\n          \"loading\"\r\n        )}\r\n        {/* Thông báo chỉnh sửa story nổi bật thành công */}\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n          open={this.state.addStoryStatus}\r\n          onClose={() => this.setState({ addStoryStatus: false })}\r\n          autoHideDuration={1000}\r\n        >\r\n          <MuiAlert\r\n            elevation={6}\r\n            variant=\"filled\"\r\n            severity={`${this.state.addStorySuccess ? \"success\" : \"warning\"}`}\r\n          >\r\n            {this.state.formMessage}\r\n          </MuiAlert>\r\n        </Snackbar>\r\n        {/* Thông báo báo cáo tài khoản thành công */}\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n          open={this.state.reportStatus}\r\n          onClose={() => this.setState({ reportStatus: false })}\r\n          autoHideDuration={3000}\r\n        >\r\n          <MuiAlert\r\n            elevation={6}\r\n            variant=\"filled\"\r\n            severity={this.state.reportSuccess ? \"success\" : \"warning\"}\r\n          >\r\n            {this.state.SnackMess}\r\n          </MuiAlert>\r\n        </Snackbar>\r\n        {this.showReportForm()}\r\n        <Dialog\r\n          className=\"dialog_cont\"\r\n          onClose={() => {\r\n            this.setState({ alertFunctionIsRestricted: false });\r\n          }}\r\n          open={this.state.alertFunctionIsRestricted}\r\n        >\r\n          <div className=\"dialog_header\">\r\n            <h5>\r\n              Bạn đã bị hạn chế chức năng này cho đến{\" \"}\r\n              {moment(this.state.restrictedFunction.amountOfTime).format(\"L\")}\r\n            </h5>\r\n          </div>\r\n        </Dialog>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    products: state.products,\r\n    policies: state.policies,\r\n    messages: state.messages,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(withRouter(Profile));\r\n"]},"metadata":{},"sourceType":"module"}