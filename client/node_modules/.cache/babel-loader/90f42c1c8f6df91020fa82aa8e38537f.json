{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kltn\\\\test\\\\social-media\\\\client\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Routes from \"./Routes\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport promiseMiddleware from \"redux-promise\";\nimport ReduxThunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/index\"; //HOC\n//syntax cũ để tạo Store có sử dụng 2 middleware là promisMiddleware và ReduxThunk\n// Trong rect redux 3.1 trở lên sử dụng createStore(reducer,state,applyMiddleware(middleware1,middleware2,..))\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: createStoreWithMiddleware(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(BrowserRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Routes, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }\n}))), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA","map":{"version":3,"sources":["D:/Kltn/test/social-media/client/src/index.js"],"names":["React","ReactDOM","BrowserRouter","Route","Routes","Provider","createStore","applyMiddleware","promiseMiddleware","ReduxThunk","rootReducer","createStoreWithMiddleware","render","window","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,EAAwBC,KAAxB,QAAqC,kBAArC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,iBAAP,MAA8B,eAA9B;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,WAAP,MAAwB,kBAAxB,C,CAEA;AACA;AACA;;AACA,MAAMC,yBAAyB,GAAGJ,eAAe,CAC/CC,iBAD+C,EAE/CC,UAF+C,CAAf,CAGhCH,WAHgC,CAAlC;AAKAL,QAAQ,CAACW,MAAT,eACE,oBAAC,QAAD;AACE,EAAA,KAAK,EAAED,yBAAyB,CAC9BD,WAD8B,EAE9BG,MAAM,CAACC,4BAAP,IACED,MAAM,CAACC,4BAAP,EAH4B,CADlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAOE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAPF,CADF,EAYEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAZF,E,CAeA;AACA;AACA","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport Routes from \"./Routes\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport promiseMiddleware from \"redux-promise\";\r\nimport ReduxThunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/index\";\r\n\r\n//HOC\r\n//syntax cũ để tạo Store có sử dụng 2 middleware là promisMiddleware và ReduxThunk\r\n// Trong rect redux 3.1 trở lên sử dụng createStore(reducer,state,applyMiddleware(middleware1,middleware2,..))\r\nconst createStoreWithMiddleware = applyMiddleware(\r\n  promiseMiddleware,\r\n  ReduxThunk\r\n)(createStore);\r\n\r\nReactDOM.render(\r\n  <Provider\r\n    store={createStoreWithMiddleware(\r\n      rootReducer,\r\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )}\r\n  >\r\n    <BrowserRouter>\r\n      <Routes />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"]},"metadata":{},"sourceType":"module"}