{"ast":null,"code":"import { LOGIN_USER, REGISTER_USER, AUTH_USER, LOGOUT_USER, ADD_TO_CART, STORE_REGISTER_INFO, GET_POST, GET_TYPE, UPDATE_IMG, UPDATE_PRO, FOLLOW_USER, CHANGE_PRO, CHANGE_IMG, SAVE_DETAIL, SAVE_POST, GET_HIGHLIGHT_STORY, GET_ALL_STORY, CREATE_HIGHLIGHT_STORY, DELETE_HIGHLIGHT_STORY, EDIT_HIGHLIGHT_STORY, GET_RECOMMEND_POST, GET_BLOCKED_USERS, UNBLOCKED_USERS, BLOCK_USER, RESTRICTED, GET_NATIONALITY, CHANGE_PRIVATE, REQUEST_FOLLOW, ACCEPT_FOLLOW } from '../actions/types';\nexport default function (state = {}, action) {\n  switch (action.type) {\n    case LOGIN_USER:\n      {\n        return { ...state,\n          loginSuccess: action.payload\n        };\n      }\n\n    case REGISTER_USER:\n      {\n        return { ...state,\n          registerSuccess: action.payload\n        };\n      }\n\n    case AUTH_USER:\n      {\n        return { ...state,\n          userData: action.payload\n        };\n      }\n\n    case LOGOUT_USER:\n      {\n        return { ...state\n        };\n      }\n\n    case ADD_TO_CART:\n      {\n        return { ...state,\n          userData: { ...state.userData,\n            cart: action.payload\n          }\n        };\n      }\n\n    case STORE_REGISTER_INFO:\n      {\n        return { ...state,\n          RegisterInfo: { ...action.payload\n          }\n        };\n      }\n\n    case GET_POST:\n      {\n        return { ...state,\n          postlist: action.payload.posts,\n          userProfile: action.payload.userProfile\n        };\n      }\n\n    case GET_TYPE:\n      {\n        return { ...state,\n          typelist: action.payload\n        };\n      }\n\n    case UPDATE_IMG:\n      {\n        return { ...state,\n          img: action.payload\n        };\n      }\n\n    case UPDATE_PRO:\n      {\n        return { ...state,\n          userData: action.payload\n        };\n      }\n\n    case FOLLOW_USER:\n      {\n        return { ...state,\n          userData: { ...state.userData,\n            followings: action.payload\n          }\n        };\n      }\n\n    case CHANGE_PRO:\n      {\n        return { ...state,\n          updateInfo: action.payload\n        };\n      }\n\n    case SAVE_POST:\n      {\n        return { ...state,\n          userData: { ...state.userData,\n            saved: action.payload.saved\n          }\n        };\n      }\n\n    case CHANGE_IMG:\n      {\n        return { ...state,\n          updateimginfo: action.payload\n        };\n      }\n\n    case GET_HIGHLIGHT_STORY:\n      {\n        return { ...state,\n          highlightStory: action.payload\n        };\n      }\n\n    case GET_ALL_STORY:\n      {\n        return { ...state,\n          storylist: action.payload\n        };\n      }\n\n    case CREATE_HIGHLIGHT_STORY:\n      {\n        if (action.payload.success) {\n          return { ...state,\n            highlightStory: [...state.highlightStory, action.payload.highlightStory[0]]\n          };\n        } else {\n          return state;\n        }\n      }\n\n    case DELETE_HIGHLIGHT_STORY:\n      {\n        let updatedHighlightStory = [...state.highlightStory];\n        updatedHighlightStory = updatedHighlightStory.filter(item => item._id !== action.payload.storyId);\n        console.log(\"data\", updatedHighlightStory);\n        return { ...state,\n          highlightStory: updatedHighlightStory\n        };\n      }\n\n    case EDIT_HIGHLIGHT_STORY:\n      {\n        let updatedHighlightStory = [...state.highlightStory];\n        updatedHighlightStory = updatedHighlightStory.map(item => {\n          if (item._id == action.payload.highlightStory[0]._id) {\n            return action.payload.highlightStory[0];\n          } else {\n            return item;\n          }\n        });\n        return { ...state,\n          highlightStory: updatedHighlightStory\n        };\n      }\n\n    case GET_RECOMMEND_POST:\n      {\n        return { ...state,\n          recommendedPost: action.payload.posts,\n          recommendedPostSize: action.payload.size\n        };\n      }\n\n    case GET_BLOCKED_USERS:\n      {\n        return { ...state,\n          blockedUsers: action.payload\n        };\n      }\n\n    case BLOCK_USER:\n      {\n        let updatedBlockedUsers = [...state.userData.blockedUsers, action.payload.userId];\n        return { ...state,\n          userData: { ...state.userData,\n            blockedUsers: updatedBlockedUsers\n          }\n        };\n      }\n\n    case UNBLOCKED_USERS:\n      {\n        let updatedBlockedUsers = [...state.userData.blockedUsers];\n        console.log(\"data\", updatedBlockedUsers);\n        console.log(\"data\", action.payload);\n        updatedBlockedUsers = updatedBlockedUsers.filter(item => item != action.payload.userId);\n        console.log(\"data\", updatedBlockedUsers);\n        return { ...state,\n          userData: { ...state.userData,\n            blockedUsers: updatedBlockedUsers\n          }\n        };\n      }\n\n    case RESTRICTED:\n      {\n        return { ...state,\n          restricted: true\n        };\n      }\n\n    case GET_NATIONALITY:\n      {\n        return { ...state,\n          nationality: action.payload\n        };\n      }\n\n    case REQUEST_FOLLOW:\n      {\n        let newuserProfile = { ...state.userProfile\n        };\n        newuserProfile.request = action.payload.request;\n        return { ...state,\n          userProfile: newuserProfile\n        };\n      }\n\n    case ACCEPT_FOLLOW:\n      {\n        return { ...state,\n          accept: action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/Kltn/test/social-media/client/src/reducers/user_reducer.js"],"names":["LOGIN_USER","REGISTER_USER","AUTH_USER","LOGOUT_USER","ADD_TO_CART","STORE_REGISTER_INFO","GET_POST","GET_TYPE","UPDATE_IMG","UPDATE_PRO","FOLLOW_USER","CHANGE_PRO","CHANGE_IMG","SAVE_DETAIL","SAVE_POST","GET_HIGHLIGHT_STORY","GET_ALL_STORY","CREATE_HIGHLIGHT_STORY","DELETE_HIGHLIGHT_STORY","EDIT_HIGHLIGHT_STORY","GET_RECOMMEND_POST","GET_BLOCKED_USERS","UNBLOCKED_USERS","BLOCK_USER","RESTRICTED","GET_NATIONALITY","CHANGE_PRIVATE","REQUEST_FOLLOW","ACCEPT_FOLLOW","state","action","type","loginSuccess","payload","registerSuccess","userData","cart","RegisterInfo","postlist","posts","userProfile","typelist","img","followings","updateInfo","saved","updateimginfo","highlightStory","storylist","success","updatedHighlightStory","filter","item","_id","storyId","console","log","map","recommendedPost","recommendedPostSize","size","blockedUsers","updatedBlockedUsers","userId","restricted","nationality","newuserProfile","request","accept"],"mappings":"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","sourcesContent":["import {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n    ADD_TO_CART,\r\n    STORE_REGISTER_INFO,\r\n    GET_POST,\r\n    GET_TYPE,\r\n    UPDATE_IMG,\r\n    UPDATE_PRO,\r\n    FOLLOW_USER,\r\n    CHANGE_PRO,\r\n    CHANGE_IMG, \r\n    SAVE_DETAIL,\r\n    SAVE_POST,\r\n    GET_HIGHLIGHT_STORY,\r\n    GET_ALL_STORY,\r\n    CREATE_HIGHLIGHT_STORY,\r\n    DELETE_HIGHLIGHT_STORY,\r\n    EDIT_HIGHLIGHT_STORY,\r\n    GET_RECOMMEND_POST,\r\n    GET_BLOCKED_USERS,\r\n    UNBLOCKED_USERS,\r\n    BLOCK_USER,\r\n    RESTRICTED,\r\n    GET_NATIONALITY,\r\n    CHANGE_PRIVATE,\r\n    REQUEST_FOLLOW,\r\n    ACCEPT_FOLLOW\r\n} from '../actions/types';\r\n\r\nexport default function(state={},action){\r\n    switch(action.type){\r\n        case LOGIN_USER: {\r\n            return {...state, loginSuccess: action.payload}\r\n        }\r\n        case REGISTER_USER: {\r\n            return { ...state, registerSuccess: action.payload }\r\n        }\r\n        case AUTH_USER: {\r\n            return {...state,userData: action.payload}\r\n        } \r\n        case LOGOUT_USER: {\r\n            return { ...state}\r\n        } \r\n        case ADD_TO_CART: {\r\n            return { ...state,\r\n                userData:{\r\n                    ...state.userData,\r\n                    cart: action.payload\r\n            }}\r\n        } \r\n        case STORE_REGISTER_INFO: {\r\n            return {\r\n                ...state,\r\n                RegisterInfo: {\r\n                    ... action.payload\r\n                }\r\n            }\r\n        }\r\n        case GET_POST: {\r\n            return {\r\n                ...state,\r\n                postlist: action.payload.posts,\r\n                userProfile: action.payload.userProfile\r\n            }\r\n        }\r\n        case GET_TYPE:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    typelist: action.payload\r\n                }\r\n            }\r\n        case UPDATE_IMG:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    img: action.payload\r\n                }\r\n            }\r\n        case UPDATE_PRO:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    userData: action.payload\r\n                }\r\n            } \r\n        case FOLLOW_USER:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    userData: {\r\n                        ...state.userData,\r\n                        followings: action.payload\r\n                    }\r\n                }\r\n            } \r\n        case CHANGE_PRO:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    updateInfo: action.payload\r\n                }\r\n            }\r\n        case SAVE_POST: {\r\n            return {\r\n                ...state,\r\n                userData: {\r\n                    ...state.userData,\r\n                    saved: action.payload.saved\r\n                }\r\n            }\r\n        }\r\n        case CHANGE_IMG:\r\n        {\r\n            return {\r\n                ...state,\r\n                updateimginfo: action.payload\r\n            }\r\n        }\r\n        case GET_HIGHLIGHT_STORY:{\r\n            return {\r\n                ...state,\r\n                highlightStory: action.payload\r\n            }\r\n        }\r\n        case GET_ALL_STORY:{\r\n            return {\r\n                ...state,\r\n                storylist: action.payload\r\n            }\r\n        }\r\n        case CREATE_HIGHLIGHT_STORY:{\r\n            if(action.payload.success)\r\n            {\r\n                return {\r\n                    ...state,\r\n                    highlightStory: [...state.highlightStory,\r\n                    action.payload.highlightStory[0]]\r\n                }\r\n            }else{\r\n                return state\r\n            }\r\n        }\r\n        case DELETE_HIGHLIGHT_STORY:{\r\n            let updatedHighlightStory = [...state.highlightStory]\r\n        \r\n            updatedHighlightStory = updatedHighlightStory.filter(item =>\r\n                item._id !== action.payload.storyId\r\n            );\r\n            console.log(\"data\", updatedHighlightStory);\r\n            return {\r\n                ...state,\r\n                highlightStory: updatedHighlightStory\r\n            }\r\n        }\r\n        case EDIT_HIGHLIGHT_STORY:{\r\n            let updatedHighlightStory = [...state.highlightStory]\r\n            updatedHighlightStory = updatedHighlightStory.map(item => {\r\n                if (item._id == action.payload.highlightStory[0]._id) {\r\n                    return action.payload.highlightStory[0]\r\n                } else {\r\n                    return item\r\n                }\r\n            })\r\n            return {\r\n                ...state,\r\n                highlightStory: updatedHighlightStory\r\n            }\r\n        }\r\n        case GET_RECOMMEND_POST:{\r\n            return {...state, \r\n                recommendedPost: action.payload.posts,\r\n                recommendedPostSize: action.payload.size\r\n            }\r\n        }\r\n        case GET_BLOCKED_USERS:{\r\n            return {...state,\r\n                blockedUsers: action.payload\r\n            }\r\n        }\r\n        case BLOCK_USER:{\r\n\r\n            let updatedBlockedUsers = [...state.userData.blockedUsers, action.payload.userId]\r\n\r\n            return {\r\n                ...state,\r\n                userData:{\r\n                    ...state.userData,\r\n                    blockedUsers: updatedBlockedUsers\r\n                }\r\n            }\r\n        }\r\n        case UNBLOCKED_USERS: {\r\n            let updatedBlockedUsers = [...state.userData.blockedUsers]\r\n            console.log(\"data\", updatedBlockedUsers);\r\n            console.log(\"data\", action.payload);\r\n            updatedBlockedUsers = updatedBlockedUsers.filter(item =>\r\n                item != action.payload.userId\r\n            );\r\n            console.log(\"data\", updatedBlockedUsers);\r\n            return {\r\n                ...state,\r\n                userData:{\r\n                    ...state.userData,\r\n                    blockedUsers: updatedBlockedUsers\r\n                }\r\n            }\r\n        }\r\n        case RESTRICTED:{\r\n            return {\r\n                ...state,\r\n                restricted: true\r\n            }\r\n        }\r\n        case GET_NATIONALITY:{\r\n            return {\r\n                ...state,\r\n                nationality: action.payload\r\n            }\r\n        }\r\n        case REQUEST_FOLLOW:{\r\n            let newuserProfile= {...state.userProfile}\r\n            newuserProfile.request = action.payload.request\r\n            return {\r\n                ...state, userProfile: newuserProfile\r\n                }\r\n        }\r\n        case ACCEPT_FOLLOW:{\r\n            return {\r\n                ...state,\r\n                accept: action.payload\r\n            }\r\n        }\r\n     \r\n        default: return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}