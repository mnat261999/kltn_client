{"ast":null,"code":"import React, { useMemo, useState, createElement, Fragment, useRef, useEffect } from 'react';\nimport { usePropertyAccessor, useValueFormatter, degreesToRadians, radiansToDegrees, Container, useDimensions, bindDefs, SvgWrapper, ResponsiveWrapper, useTheme, getRelativeCursor } from '@nivo/core';\nimport { useArcGenerator, computeArcBoundingBox, ArcsLayer, ArcLinkLabelsLayer, ArcLabelsLayer, useArcLabels, useArcLinkLabels, drawCanvasArcLinkLabels, drawCanvasArcLabels, findArcUnderCursor } from '@nivo/arcs';\nimport { BoxLegendSvg, renderLegendToCanvas } from '@nivo/legends';\nimport { pie } from 'd3-shape';\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors';\nimport { BasicTooltip, useTooltip } from '@nivo/tooltip';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar PieLegends = function PieLegends(_ref) {\n  var width = _ref.width,\n      height = _ref.height,\n      legends = _ref.legends,\n      dataWithArc = _ref.dataWithArc;\n  return React.createElement(React.Fragment, null, legends.map(function (legend, i) {\n    return React.createElement(BoxLegendSvg, Object.assign({\n      key: i\n    }, legend, {\n      containerWidth: width,\n      containerHeight: height,\n      data: dataWithArc\n    }));\n  }));\n};\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar PieTooltip = function PieTooltip(_ref) {\n  var datum = _ref.datum;\n  return React.createElement(BasicTooltip, {\n    id: datum.id,\n    value: datum.formattedValue,\n    enableChip: true,\n    color: datum.color\n  });\n};\n\nvar _window$devicePixelRa;\n\nvar defaultProps = {\n  id: 'id',\n  value: 'value',\n  sortByValue: false,\n  innerRadius: 0,\n  padAngle: 0,\n  cornerRadius: 0,\n  layers: ['arcLinkLabels', 'arcs', 'arcLabels', 'legends'],\n  startAngle: 0,\n  endAngle: 360,\n  fit: true,\n  activeInnerRadiusOffset: 0,\n  activeOuterRadiusOffset: 0,\n  borderWidth: 0,\n  borderColor: {\n    from: 'color',\n    modifiers: [['darker', 1]]\n  },\n  enableArcLabels: true,\n  arcLabel: 'formattedValue',\n  arcLabelsSkipAngle: 0,\n  arcLabelsRadiusOffset: 0.5,\n  arcLabelsTextColor: {\n    theme: 'labels.text.fill'\n  },\n  enableArcLinkLabels: true,\n  arcLinkLabel: 'id',\n  arcLinkLabelsSkipAngle: 0,\n  arcLinkLabelsOffset: 0,\n  arcLinkLabelsDiagonalLength: 16,\n  arcLinkLabelsStraightLength: 24,\n  arcLinkLabelsThickness: 1,\n  arcLinkLabelsTextOffset: 6,\n  arcLinkLabelsTextColor: {\n    theme: 'labels.text.fill'\n  },\n  arcLinkLabelsColor: {\n    theme: 'axis.ticks.line.stroke'\n  },\n  colors: {\n    scheme: 'nivo'\n  },\n  defs: [],\n  fill: [],\n  isInteractive: true,\n  animate: true,\n  motionConfig: 'gentle',\n  transitionMode: 'innerRadius',\n  tooltip: PieTooltip,\n  legends: [],\n  role: 'img',\n  pixelRatio: typeof window !== 'undefined' ? (_window$devicePixelRa = window.devicePixelRatio) !== null && _window$devicePixelRa !== void 0 ? _window$devicePixelRa : 1 : 1\n};\n\nvar useNormalizedData = function useNormalizedData(_ref) {\n  var data = _ref.data,\n      _ref$id = _ref.id,\n      id = _ref$id === void 0 ? defaultProps.id : _ref$id,\n      _ref$value = _ref.value,\n      value = _ref$value === void 0 ? defaultProps.value : _ref$value,\n      valueFormat = _ref.valueFormat,\n      _ref$colors = _ref.colors,\n      colors = _ref$colors === void 0 ? defaultProps.colors : _ref$colors;\n  var getId = usePropertyAccessor(id);\n  var getValue = usePropertyAccessor(value);\n  var formatValue = useValueFormatter(valueFormat);\n  var getColor = useOrdinalColorScale(colors, 'id');\n  return useMemo(function () {\n    return data.map(function (datum) {\n      var _datum$label;\n\n      var datumId = getId(datum);\n      var datumValue = getValue(datum);\n      var normalizedDatum = {\n        id: datumId,\n        label: (_datum$label = datum.label) !== null && _datum$label !== void 0 ? _datum$label : datumId,\n        value: datumValue,\n        formattedValue: formatValue(datumValue),\n        data: datum\n      };\n      return _objectSpread2(_objectSpread2({}, normalizedDatum), {}, {\n        color: getColor(normalizedDatum)\n      });\n    });\n  }, [data, getId, getValue, formatValue, getColor]);\n};\n\nvar usePieArcs = function usePieArcs(_ref2) {\n  var data = _ref2.data,\n      startAngle = _ref2.startAngle,\n      endAngle = _ref2.endAngle,\n      innerRadius = _ref2.innerRadius,\n      outerRadius = _ref2.outerRadius,\n      padAngle = _ref2.padAngle,\n      sortByValue = _ref2.sortByValue,\n      activeId = _ref2.activeId,\n      activeInnerRadiusOffset = _ref2.activeInnerRadiusOffset,\n      activeOuterRadiusOffset = _ref2.activeOuterRadiusOffset;\n  var pie$1 = useMemo(function () {\n    var innerPie = pie().value(function (d) {\n      return d.value;\n    }).startAngle(degreesToRadians(startAngle)).endAngle(degreesToRadians(endAngle)).padAngle(degreesToRadians(padAngle));\n\n    if (!sortByValue) {\n      innerPie.sortValues(null);\n    }\n\n    return innerPie;\n  }, [startAngle, endAngle, padAngle, sortByValue]);\n  return useMemo(function () {\n    return pie$1(data).map(function (arc) {\n      var angle = Math.abs(arc.endAngle - arc.startAngle);\n      return _objectSpread2(_objectSpread2({}, arc.data), {}, {\n        arc: {\n          index: arc.index,\n          startAngle: arc.startAngle,\n          endAngle: arc.endAngle,\n          innerRadius: activeId === arc.data.id ? innerRadius - activeInnerRadiusOffset : innerRadius,\n          outerRadius: activeId === arc.data.id ? outerRadius + activeOuterRadiusOffset : outerRadius,\n          thickness: outerRadius - innerRadius,\n          padAngle: arc.padAngle,\n          angle: angle,\n          angleDeg: radiansToDegrees(angle)\n        }\n      });\n    });\n  }, [pie$1, data, innerRadius, outerRadius, activeId, activeInnerRadiusOffset, activeInnerRadiusOffset]);\n};\n\nvar usePie = function usePie(_ref3) {\n  var data = _ref3.data,\n      radius = _ref3.radius,\n      innerRadius = _ref3.innerRadius,\n      _ref3$startAngle = _ref3.startAngle,\n      startAngle = _ref3$startAngle === void 0 ? defaultProps.startAngle : _ref3$startAngle,\n      _ref3$endAngle = _ref3.endAngle,\n      endAngle = _ref3$endAngle === void 0 ? defaultProps.endAngle : _ref3$endAngle,\n      _ref3$padAngle = _ref3.padAngle,\n      padAngle = _ref3$padAngle === void 0 ? defaultProps.padAngle : _ref3$padAngle,\n      _ref3$sortByValue = _ref3.sortByValue,\n      sortByValue = _ref3$sortByValue === void 0 ? defaultProps.sortByValue : _ref3$sortByValue,\n      _ref3$cornerRadius = _ref3.cornerRadius,\n      cornerRadius = _ref3$cornerRadius === void 0 ? defaultProps.cornerRadius : _ref3$cornerRadius,\n      _ref3$activeInnerRadi = _ref3.activeInnerRadiusOffset,\n      activeInnerRadiusOffset = _ref3$activeInnerRadi === void 0 ? defaultProps.activeInnerRadiusOffset : _ref3$activeInnerRadi,\n      _ref3$activeOuterRadi = _ref3.activeOuterRadiusOffset,\n      activeOuterRadiusOffset = _ref3$activeOuterRadi === void 0 ? defaultProps.activeOuterRadiusOffset : _ref3$activeOuterRadi;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeId = _useState2[0],\n      setActiveId = _useState2[1];\n\n  var dataWithArc = usePieArcs({\n    data: data,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    innerRadius: innerRadius,\n    outerRadius: radius,\n    padAngle: padAngle,\n    sortByValue: sortByValue,\n    activeId: activeId,\n    activeInnerRadiusOffset: activeInnerRadiusOffset,\n    activeOuterRadiusOffset: activeOuterRadiusOffset\n  });\n  var arcGenerator = useArcGenerator({\n    cornerRadius: cornerRadius,\n    padAngle: degreesToRadians(padAngle)\n  });\n  return {\n    dataWithArc: dataWithArc,\n    arcGenerator: arcGenerator,\n    setActiveId: setActiveId\n  };\n};\n\nvar usePieFromBox = function usePieFromBox(_ref4) {\n  var data = _ref4.data,\n      width = _ref4.width,\n      height = _ref4.height,\n      _ref4$innerRadius = _ref4.innerRadius,\n      innerRadiusRatio = _ref4$innerRadius === void 0 ? defaultProps.innerRadius : _ref4$innerRadius,\n      _ref4$startAngle = _ref4.startAngle,\n      startAngle = _ref4$startAngle === void 0 ? defaultProps.startAngle : _ref4$startAngle,\n      _ref4$endAngle = _ref4.endAngle,\n      endAngle = _ref4$endAngle === void 0 ? defaultProps.endAngle : _ref4$endAngle,\n      _ref4$padAngle = _ref4.padAngle,\n      padAngle = _ref4$padAngle === void 0 ? defaultProps.padAngle : _ref4$padAngle,\n      _ref4$sortByValue = _ref4.sortByValue,\n      sortByValue = _ref4$sortByValue === void 0 ? defaultProps.sortByValue : _ref4$sortByValue,\n      _ref4$cornerRadius = _ref4.cornerRadius,\n      cornerRadius = _ref4$cornerRadius === void 0 ? defaultProps.cornerRadius : _ref4$cornerRadius,\n      _ref4$fit = _ref4.fit,\n      fit = _ref4$fit === void 0 ? defaultProps.fit : _ref4$fit,\n      _ref4$activeInnerRadi = _ref4.activeInnerRadiusOffset,\n      activeInnerRadiusOffset = _ref4$activeInnerRadi === void 0 ? defaultProps.activeInnerRadiusOffset : _ref4$activeInnerRadi,\n      _ref4$activeOuterRadi = _ref4.activeOuterRadiusOffset,\n      activeOuterRadiusOffset = _ref4$activeOuterRadi === void 0 ? defaultProps.activeOuterRadiusOffset : _ref4$activeOuterRadi;\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      activeId = _useState4[0],\n      setActiveId = _useState4[1];\n\n  var computedProps = useMemo(function () {\n    var radius = Math.min(width, height) / 2;\n    var innerRadius = radius * Math.min(innerRadiusRatio, 1);\n    var centerX = width / 2;\n    var centerY = height / 2;\n    var boundingBox;\n\n    if (fit) {\n      var _computeArcBoundingBo = computeArcBoundingBox(centerX, centerY, radius, startAngle - 90, endAngle - 90),\n          points = _computeArcBoundingBo.points,\n          box = _objectWithoutProperties(_computeArcBoundingBo, [\"points\"]);\n\n      var ratio = Math.min(width / box.width, height / box.height);\n      var adjustedBox = {\n        width: box.width * ratio,\n        height: box.height * ratio\n      };\n      adjustedBox.x = (width - adjustedBox.width) / 2;\n      adjustedBox.y = (height - adjustedBox.height) / 2;\n      centerX = (centerX - box.x) / box.width * box.width * ratio + adjustedBox.x;\n      centerY = (centerY - box.y) / box.height * box.height * ratio + adjustedBox.y;\n      boundingBox = {\n        box: box,\n        ratio: ratio,\n        points: points\n      };\n      radius = radius * ratio;\n      innerRadius = innerRadius * ratio;\n    }\n\n    return {\n      centerX: centerX,\n      centerY: centerY,\n      radius: radius,\n      innerRadius: innerRadius,\n      debug: boundingBox\n    };\n  }, [width, height, innerRadiusRatio, startAngle, endAngle, fit, cornerRadius]);\n  var dataWithArc = usePieArcs({\n    data: data,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    innerRadius: computedProps.innerRadius,\n    outerRadius: computedProps.radius,\n    padAngle: padAngle,\n    sortByValue: sortByValue,\n    activeId: activeId,\n    activeInnerRadiusOffset: activeInnerRadiusOffset,\n    activeOuterRadiusOffset: activeOuterRadiusOffset\n  });\n  var arcGenerator = useArcGenerator({\n    cornerRadius: cornerRadius,\n    padAngle: degreesToRadians(padAngle)\n  });\n  return _objectSpread2({\n    dataWithArc: dataWithArc,\n    arcGenerator: arcGenerator,\n    setActiveId: setActiveId\n  }, computedProps);\n};\n\nvar usePieLayerContext = function usePieLayerContext(_ref5) {\n  var dataWithArc = _ref5.dataWithArc,\n      arcGenerator = _ref5.arcGenerator,\n      centerX = _ref5.centerX,\n      centerY = _ref5.centerY,\n      radius = _ref5.radius,\n      innerRadius = _ref5.innerRadius;\n  return useMemo(function () {\n    return {\n      dataWithArc: dataWithArc,\n      arcGenerator: arcGenerator,\n      centerX: centerX,\n      centerY: centerY,\n      radius: radius,\n      innerRadius: innerRadius\n    };\n  }, [dataWithArc, arcGenerator, centerX, centerY, radius, innerRadius]);\n};\n\nvar Arcs = function Arcs(_ref) {\n  var center = _ref.center,\n      data = _ref.data,\n      arcGenerator = _ref.arcGenerator,\n      borderWidth = _ref.borderWidth,\n      borderColor = _ref.borderColor,\n      isInteractive = _ref.isInteractive,\n      onClick = _ref.onClick,\n      onMouseEnter = _ref.onMouseEnter,\n      onMouseMove = _ref.onMouseMove,\n      onMouseLeave = _ref.onMouseLeave,\n      setActiveId = _ref.setActiveId,\n      tooltip = _ref.tooltip,\n      transitionMode = _ref.transitionMode;\n\n  var _useTooltip = useTooltip(),\n      showTooltipFromEvent = _useTooltip.showTooltipFromEvent,\n      hideTooltip = _useTooltip.hideTooltip;\n\n  var handleClick = useMemo(function () {\n    if (!isInteractive) return undefined;\n    return function (datum, event) {\n      onClick === null || onClick === void 0 ? void 0 : onClick(datum, event);\n    };\n  }, [isInteractive, onClick]);\n  var handleMouseEnter = useMemo(function () {\n    if (!isInteractive) return undefined;\n    return function (datum, event) {\n      showTooltipFromEvent(createElement(tooltip, {\n        datum: datum\n      }), event);\n      setActiveId(datum.id);\n      onMouseEnter === null || onMouseEnter === void 0 ? void 0 : onMouseEnter(datum, event);\n    };\n  }, [isInteractive, showTooltipFromEvent, setActiveId, onMouseEnter]);\n  var handleMouseMove = useMemo(function () {\n    if (!isInteractive) return undefined;\n    return function (datum, event) {\n      showTooltipFromEvent(createElement(tooltip, {\n        datum: datum\n      }), event);\n      onMouseMove === null || onMouseMove === void 0 ? void 0 : onMouseMove(datum, event);\n    };\n  }, [isInteractive, showTooltipFromEvent, onMouseMove]);\n  var handleMouseLeave = useMemo(function () {\n    if (!isInteractive) return undefined;\n    return function (datum, event) {\n      hideTooltip();\n      setActiveId(null);\n      onMouseLeave === null || onMouseLeave === void 0 ? void 0 : onMouseLeave(datum, event);\n    };\n  }, [isInteractive, hideTooltip, setActiveId, onMouseLeave]);\n  return React.createElement(ArcsLayer, {\n    center: center,\n    data: data,\n    arcGenerator: arcGenerator,\n    borderWidth: borderWidth,\n    borderColor: borderColor,\n    transitionMode: transitionMode,\n    onClick: handleClick,\n    onMouseEnter: handleMouseEnter,\n    onMouseMove: handleMouseMove,\n    onMouseLeave: handleMouseLeave\n  });\n};\n\nvar InnerPie = function InnerPie(_ref) {\n  var data = _ref.data,\n      _ref$id = _ref.id,\n      id = _ref$id === void 0 ? defaultProps.id : _ref$id,\n      _ref$value = _ref.value,\n      value = _ref$value === void 0 ? defaultProps.value : _ref$value,\n      valueFormat = _ref.valueFormat,\n      _ref$sortByValue = _ref.sortByValue,\n      sortByValue = _ref$sortByValue === void 0 ? defaultProps.sortByValue : _ref$sortByValue,\n      _ref$layers = _ref.layers,\n      layers = _ref$layers === void 0 ? defaultProps.layers : _ref$layers,\n      _ref$startAngle = _ref.startAngle,\n      startAngle = _ref$startAngle === void 0 ? defaultProps.startAngle : _ref$startAngle,\n      _ref$endAngle = _ref.endAngle,\n      endAngle = _ref$endAngle === void 0 ? defaultProps.endAngle : _ref$endAngle,\n      _ref$padAngle = _ref.padAngle,\n      padAngle = _ref$padAngle === void 0 ? defaultProps.padAngle : _ref$padAngle,\n      _ref$fit = _ref.fit,\n      fit = _ref$fit === void 0 ? defaultProps.fit : _ref$fit,\n      _ref$innerRadius = _ref.innerRadius,\n      innerRadiusRatio = _ref$innerRadius === void 0 ? defaultProps.innerRadius : _ref$innerRadius,\n      _ref$cornerRadius = _ref.cornerRadius,\n      cornerRadius = _ref$cornerRadius === void 0 ? defaultProps.cornerRadius : _ref$cornerRadius,\n      _ref$activeInnerRadiu = _ref.activeInnerRadiusOffset,\n      activeInnerRadiusOffset = _ref$activeInnerRadiu === void 0 ? defaultProps.activeInnerRadiusOffset : _ref$activeInnerRadiu,\n      _ref$activeOuterRadiu = _ref.activeOuterRadiusOffset,\n      activeOuterRadiusOffset = _ref$activeOuterRadiu === void 0 ? defaultProps.activeOuterRadiusOffset : _ref$activeOuterRadiu,\n      width = _ref.width,\n      height = _ref.height,\n      partialMargin = _ref.margin,\n      _ref$colors = _ref.colors,\n      colors = _ref$colors === void 0 ? defaultProps.colors : _ref$colors,\n      _ref$borderWidth = _ref.borderWidth,\n      borderWidth = _ref$borderWidth === void 0 ? defaultProps.borderWidth : _ref$borderWidth,\n      _ref$borderColor = _ref.borderColor,\n      borderColor = _ref$borderColor === void 0 ? defaultProps.borderColor : _ref$borderColor,\n      _ref$enableArcLabels = _ref.enableArcLabels,\n      enableArcLabels = _ref$enableArcLabels === void 0 ? defaultProps.enableArcLabels : _ref$enableArcLabels,\n      _ref$arcLabel = _ref.arcLabel,\n      arcLabel = _ref$arcLabel === void 0 ? defaultProps.arcLabel : _ref$arcLabel,\n      _ref$arcLabelsSkipAng = _ref.arcLabelsSkipAngle,\n      arcLabelsSkipAngle = _ref$arcLabelsSkipAng === void 0 ? defaultProps.arcLabelsSkipAngle : _ref$arcLabelsSkipAng,\n      _ref$arcLabelsTextCol = _ref.arcLabelsTextColor,\n      arcLabelsTextColor = _ref$arcLabelsTextCol === void 0 ? defaultProps.arcLabelsTextColor : _ref$arcLabelsTextCol,\n      _ref$arcLabelsRadiusO = _ref.arcLabelsRadiusOffset,\n      arcLabelsRadiusOffset = _ref$arcLabelsRadiusO === void 0 ? defaultProps.arcLabelsRadiusOffset : _ref$arcLabelsRadiusO,\n      arcLabelsComponent = _ref.arcLabelsComponent,\n      _ref$enableArcLinkLab = _ref.enableArcLinkLabels,\n      enableArcLinkLabels = _ref$enableArcLinkLab === void 0 ? defaultProps.enableArcLinkLabels : _ref$enableArcLinkLab,\n      _ref$arcLinkLabel = _ref.arcLinkLabel,\n      arcLinkLabel = _ref$arcLinkLabel === void 0 ? defaultProps.arcLinkLabel : _ref$arcLinkLabel,\n      _ref$arcLinkLabelsSki = _ref.arcLinkLabelsSkipAngle,\n      arcLinkLabelsSkipAngle = _ref$arcLinkLabelsSki === void 0 ? defaultProps.arcLinkLabelsSkipAngle : _ref$arcLinkLabelsSki,\n      _ref$arcLinkLabelsOff = _ref.arcLinkLabelsOffset,\n      arcLinkLabelsOffset = _ref$arcLinkLabelsOff === void 0 ? defaultProps.arcLinkLabelsOffset : _ref$arcLinkLabelsOff,\n      _ref$arcLinkLabelsDia = _ref.arcLinkLabelsDiagonalLength,\n      arcLinkLabelsDiagonalLength = _ref$arcLinkLabelsDia === void 0 ? defaultProps.arcLinkLabelsDiagonalLength : _ref$arcLinkLabelsDia,\n      _ref$arcLinkLabelsStr = _ref.arcLinkLabelsStraightLength,\n      arcLinkLabelsStraightLength = _ref$arcLinkLabelsStr === void 0 ? defaultProps.arcLinkLabelsStraightLength : _ref$arcLinkLabelsStr,\n      _ref$arcLinkLabelsThi = _ref.arcLinkLabelsThickness,\n      arcLinkLabelsThickness = _ref$arcLinkLabelsThi === void 0 ? defaultProps.arcLinkLabelsThickness : _ref$arcLinkLabelsThi,\n      _ref$arcLinkLabelsTex = _ref.arcLinkLabelsTextOffset,\n      arcLinkLabelsTextOffset = _ref$arcLinkLabelsTex === void 0 ? defaultProps.arcLinkLabelsTextOffset : _ref$arcLinkLabelsTex,\n      _ref$arcLinkLabelsTex2 = _ref.arcLinkLabelsTextColor,\n      arcLinkLabelsTextColor = _ref$arcLinkLabelsTex2 === void 0 ? defaultProps.arcLinkLabelsTextColor : _ref$arcLinkLabelsTex2,\n      _ref$arcLinkLabelsCol = _ref.arcLinkLabelsColor,\n      arcLinkLabelsColor = _ref$arcLinkLabelsCol === void 0 ? defaultProps.arcLinkLabelsColor : _ref$arcLinkLabelsCol,\n      arcLinkLabelComponent = _ref.arcLinkLabelComponent,\n      _ref$defs = _ref.defs,\n      defs = _ref$defs === void 0 ? defaultProps.defs : _ref$defs,\n      _ref$fill = _ref.fill,\n      fill = _ref$fill === void 0 ? defaultProps.fill : _ref$fill,\n      _ref$isInteractive = _ref.isInteractive,\n      isInteractive = _ref$isInteractive === void 0 ? defaultProps.isInteractive : _ref$isInteractive,\n      onClick = _ref.onClick,\n      onMouseEnter = _ref.onMouseEnter,\n      onMouseMove = _ref.onMouseMove,\n      onMouseLeave = _ref.onMouseLeave,\n      _ref$tooltip = _ref.tooltip,\n      tooltip = _ref$tooltip === void 0 ? defaultProps.tooltip : _ref$tooltip,\n      _ref$transitionMode = _ref.transitionMode,\n      transitionMode = _ref$transitionMode === void 0 ? defaultProps.transitionMode : _ref$transitionMode,\n      _ref$legends = _ref.legends,\n      legends = _ref$legends === void 0 ? defaultProps.legends : _ref$legends,\n      _ref$role = _ref.role,\n      role = _ref$role === void 0 ? defaultProps.role : _ref$role;\n\n  var _useDimensions = useDimensions(width, height, partialMargin),\n      outerWidth = _useDimensions.outerWidth,\n      outerHeight = _useDimensions.outerHeight,\n      margin = _useDimensions.margin,\n      innerWidth = _useDimensions.innerWidth,\n      innerHeight = _useDimensions.innerHeight;\n\n  var normalizedData = useNormalizedData({\n    data: data,\n    id: id,\n    value: value,\n    valueFormat: valueFormat,\n    colors: colors\n  });\n\n  var _usePieFromBox = usePieFromBox({\n    data: normalizedData,\n    width: innerWidth,\n    height: innerHeight,\n    fit: fit,\n    innerRadius: innerRadiusRatio,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    padAngle: padAngle,\n    sortByValue: sortByValue,\n    cornerRadius: cornerRadius,\n    activeInnerRadiusOffset: activeInnerRadiusOffset,\n    activeOuterRadiusOffset: activeOuterRadiusOffset\n  }),\n      dataWithArc = _usePieFromBox.dataWithArc,\n      arcGenerator = _usePieFromBox.arcGenerator,\n      centerX = _usePieFromBox.centerX,\n      centerY = _usePieFromBox.centerY,\n      radius = _usePieFromBox.radius,\n      innerRadius = _usePieFromBox.innerRadius,\n      setActiveId = _usePieFromBox.setActiveId;\n\n  var boundDefs = bindDefs(defs, dataWithArc, fill);\n  var layerById = {\n    arcLinkLabels: null,\n    arcs: null,\n    arcLabels: null,\n    legends: null\n  };\n\n  if (enableArcLinkLabels && layers.includes('arcLinkLabels')) {\n    layerById.arcLinkLabels = React.createElement(ArcLinkLabelsLayer, {\n      key: \"arcLinkLabels\",\n      center: [centerX, centerY],\n      data: dataWithArc,\n      label: arcLinkLabel,\n      skipAngle: arcLinkLabelsSkipAngle,\n      offset: arcLinkLabelsOffset,\n      diagonalLength: arcLinkLabelsDiagonalLength,\n      straightLength: arcLinkLabelsStraightLength,\n      strokeWidth: arcLinkLabelsThickness,\n      textOffset: arcLinkLabelsTextOffset,\n      textColor: arcLinkLabelsTextColor,\n      linkColor: arcLinkLabelsColor,\n      component: arcLinkLabelComponent\n    });\n  }\n\n  if (layers.includes('arcs')) {\n    layerById.arcs = React.createElement(Arcs, {\n      key: \"arcs\",\n      center: [centerX, centerY],\n      data: dataWithArc,\n      arcGenerator: arcGenerator,\n      borderWidth: borderWidth,\n      borderColor: borderColor,\n      isInteractive: isInteractive,\n      onClick: onClick,\n      onMouseEnter: onMouseEnter,\n      onMouseMove: onMouseMove,\n      onMouseLeave: onMouseLeave,\n      setActiveId: setActiveId,\n      tooltip: tooltip,\n      transitionMode: transitionMode\n    });\n  }\n\n  if (enableArcLabels && layers.includes('arcLabels')) {\n    layerById.arcLabels = React.createElement(ArcLabelsLayer, {\n      key: \"arcLabels\",\n      center: [centerX, centerY],\n      data: dataWithArc,\n      label: arcLabel,\n      radiusOffset: arcLabelsRadiusOffset,\n      skipAngle: arcLabelsSkipAngle,\n      textColor: arcLabelsTextColor,\n      transitionMode: transitionMode,\n      component: arcLabelsComponent\n    });\n  }\n\n  if (legends.length > 0 && layers.includes('legends')) {\n    layerById.legends = React.createElement(PieLegends, {\n      key: \"legends\",\n      width: innerWidth,\n      height: innerHeight,\n      dataWithArc: dataWithArc,\n      legends: legends\n    });\n  }\n\n  var layerContext = usePieLayerContext({\n    dataWithArc: dataWithArc,\n    arcGenerator: arcGenerator,\n    centerX: centerX,\n    centerY: centerY,\n    radius: radius,\n    innerRadius: innerRadius\n  });\n  return React.createElement(SvgWrapper, {\n    width: outerWidth,\n    height: outerHeight,\n    margin: margin,\n    defs: boundDefs,\n    role: role\n  }, layers.map(function (layer, i) {\n    if (layerById[layer] !== undefined) {\n      return layerById[layer];\n    }\n\n    if (typeof layer === 'function') {\n      return React.createElement(Fragment, {\n        key: i\n      }, createElement(layer, layerContext));\n    }\n\n    return null;\n  }));\n};\n\nvar Pie = function Pie(_ref2) {\n  var _ref2$isInteractive = _ref2.isInteractive,\n      isInteractive = _ref2$isInteractive === void 0 ? defaultProps.isInteractive : _ref2$isInteractive,\n      _ref2$animate = _ref2.animate,\n      animate = _ref2$animate === void 0 ? defaultProps.animate : _ref2$animate,\n      _ref2$motionConfig = _ref2.motionConfig,\n      motionConfig = _ref2$motionConfig === void 0 ? defaultProps.motionConfig : _ref2$motionConfig,\n      theme = _ref2.theme,\n      renderWrapper = _ref2.renderWrapper,\n      otherProps = _objectWithoutProperties(_ref2, [\"isInteractive\", \"animate\", \"motionConfig\", \"theme\", \"renderWrapper\"]);\n\n  return React.createElement(Container, {\n    animate: animate,\n    isInteractive: isInteractive,\n    motionConfig: motionConfig,\n    renderWrapper: renderWrapper,\n    theme: theme\n  }, React.createElement(InnerPie, Object.assign({\n    isInteractive: isInteractive\n  }, otherProps)));\n};\n\nvar ResponsivePie = function ResponsivePie(props) {\n  return React.createElement(ResponsiveWrapper, null, function (_ref) {\n    var width = _ref.width,\n        height = _ref.height;\n    return React.createElement(Pie, Object.assign({\n      width: width,\n      height: height\n    }, props));\n  });\n};\n\nvar InnerPieCanvas = function InnerPieCanvas(_ref) {\n  var data = _ref.data,\n      _ref$id = _ref.id,\n      id = _ref$id === void 0 ? defaultProps.id : _ref$id,\n      _ref$value = _ref.value,\n      value = _ref$value === void 0 ? defaultProps.value : _ref$value,\n      valueFormat = _ref.valueFormat,\n      _ref$sortByValue = _ref.sortByValue,\n      sortByValue = _ref$sortByValue === void 0 ? defaultProps.sortByValue : _ref$sortByValue,\n      _ref$startAngle = _ref.startAngle,\n      startAngle = _ref$startAngle === void 0 ? defaultProps.startAngle : _ref$startAngle,\n      _ref$endAngle = _ref.endAngle,\n      endAngle = _ref$endAngle === void 0 ? defaultProps.endAngle : _ref$endAngle,\n      _ref$padAngle = _ref.padAngle,\n      padAngle = _ref$padAngle === void 0 ? defaultProps.padAngle : _ref$padAngle,\n      _ref$fit = _ref.fit,\n      fit = _ref$fit === void 0 ? defaultProps.fit : _ref$fit,\n      _ref$innerRadius = _ref.innerRadius,\n      innerRadiusRatio = _ref$innerRadius === void 0 ? defaultProps.innerRadius : _ref$innerRadius,\n      _ref$cornerRadius = _ref.cornerRadius,\n      cornerRadius = _ref$cornerRadius === void 0 ? defaultProps.cornerRadius : _ref$cornerRadius,\n      _ref$activeInnerRadiu = _ref.activeInnerRadiusOffset,\n      activeInnerRadiusOffset = _ref$activeInnerRadiu === void 0 ? defaultProps.activeInnerRadiusOffset : _ref$activeInnerRadiu,\n      _ref$activeOuterRadiu = _ref.activeOuterRadiusOffset,\n      activeOuterRadiusOffset = _ref$activeOuterRadiu === void 0 ? defaultProps.activeOuterRadiusOffset : _ref$activeOuterRadiu,\n      width = _ref.width,\n      height = _ref.height,\n      partialMargin = _ref.margin,\n      _ref$pixelRatio = _ref.pixelRatio,\n      pixelRatio = _ref$pixelRatio === void 0 ? 1 : _ref$pixelRatio,\n      _ref$colors = _ref.colors,\n      colors = _ref$colors === void 0 ? defaultProps.colors : _ref$colors,\n      _ref$borderWidth = _ref.borderWidth,\n      borderWidth = _ref$borderWidth === void 0 ? defaultProps.borderWidth : _ref$borderWidth,\n      _ref$borderColor = _ref.borderColor,\n      borderColor = _ref$borderColor === void 0 ? defaultProps.borderColor : _ref$borderColor,\n      _ref$enableArcLabels = _ref.enableArcLabels,\n      enableArcLabels = _ref$enableArcLabels === void 0 ? defaultProps.enableArcLabels : _ref$enableArcLabels,\n      _ref$arcLabel = _ref.arcLabel,\n      arcLabel = _ref$arcLabel === void 0 ? defaultProps.arcLabel : _ref$arcLabel,\n      _ref$arcLabelsSkipAng = _ref.arcLabelsSkipAngle,\n      arcLabelsSkipAngle = _ref$arcLabelsSkipAng === void 0 ? defaultProps.arcLabelsSkipAngle : _ref$arcLabelsSkipAng,\n      _ref$arcLabelsTextCol = _ref.arcLabelsTextColor,\n      arcLabelsTextColor = _ref$arcLabelsTextCol === void 0 ? defaultProps.arcLabelsTextColor : _ref$arcLabelsTextCol,\n      _ref$arcLabelsRadiusO = _ref.arcLabelsRadiusOffset,\n      arcLabelsRadiusOffset = _ref$arcLabelsRadiusO === void 0 ? defaultProps.arcLabelsRadiusOffset : _ref$arcLabelsRadiusO,\n      _ref$enableArcLinkLab = _ref.enableArcLinkLabels,\n      enableArcLinkLabels = _ref$enableArcLinkLab === void 0 ? defaultProps.enableArcLinkLabels : _ref$enableArcLinkLab,\n      _ref$arcLinkLabel = _ref.arcLinkLabel,\n      arcLinkLabel = _ref$arcLinkLabel === void 0 ? defaultProps.arcLinkLabel : _ref$arcLinkLabel,\n      _ref$arcLinkLabelsSki = _ref.arcLinkLabelsSkipAngle,\n      arcLinkLabelsSkipAngle = _ref$arcLinkLabelsSki === void 0 ? defaultProps.arcLinkLabelsSkipAngle : _ref$arcLinkLabelsSki,\n      _ref$arcLinkLabelsOff = _ref.arcLinkLabelsOffset,\n      arcLinkLabelsOffset = _ref$arcLinkLabelsOff === void 0 ? defaultProps.arcLinkLabelsOffset : _ref$arcLinkLabelsOff,\n      _ref$arcLinkLabelsDia = _ref.arcLinkLabelsDiagonalLength,\n      arcLinkLabelsDiagonalLength = _ref$arcLinkLabelsDia === void 0 ? defaultProps.arcLinkLabelsDiagonalLength : _ref$arcLinkLabelsDia,\n      _ref$arcLinkLabelsStr = _ref.arcLinkLabelsStraightLength,\n      arcLinkLabelsStraightLength = _ref$arcLinkLabelsStr === void 0 ? defaultProps.arcLinkLabelsStraightLength : _ref$arcLinkLabelsStr,\n      _ref$arcLinkLabelsThi = _ref.arcLinkLabelsThickness,\n      arcLinkLabelsThickness = _ref$arcLinkLabelsThi === void 0 ? defaultProps.arcLinkLabelsThickness : _ref$arcLinkLabelsThi,\n      _ref$arcLinkLabelsTex = _ref.arcLinkLabelsTextOffset,\n      arcLinkLabelsTextOffset = _ref$arcLinkLabelsTex === void 0 ? defaultProps.arcLinkLabelsTextOffset : _ref$arcLinkLabelsTex,\n      _ref$arcLinkLabelsTex2 = _ref.arcLinkLabelsTextColor,\n      arcLinkLabelsTextColor = _ref$arcLinkLabelsTex2 === void 0 ? defaultProps.arcLinkLabelsTextColor : _ref$arcLinkLabelsTex2,\n      _ref$arcLinkLabelsCol = _ref.arcLinkLabelsColor,\n      arcLinkLabelsColor = _ref$arcLinkLabelsCol === void 0 ? defaultProps.arcLinkLabelsColor : _ref$arcLinkLabelsCol,\n      _ref$isInteractive = _ref.isInteractive,\n      isInteractive = _ref$isInteractive === void 0 ? defaultProps.isInteractive : _ref$isInteractive,\n      onClick = _ref.onClick,\n      onMouseMove = _ref.onMouseMove,\n      _ref$tooltip = _ref.tooltip,\n      tooltip = _ref$tooltip === void 0 ? defaultProps.tooltip : _ref$tooltip,\n      _ref$legends = _ref.legends,\n      legends = _ref$legends === void 0 ? defaultProps.legends : _ref$legends;\n  var canvasEl = useRef(null);\n  var theme = useTheme();\n\n  var _useDimensions = useDimensions(width, height, partialMargin),\n      margin = _useDimensions.margin,\n      innerWidth = _useDimensions.innerWidth,\n      innerHeight = _useDimensions.innerHeight,\n      outerWidth = _useDimensions.outerWidth,\n      outerHeight = _useDimensions.outerHeight;\n\n  var normalizedData = useNormalizedData({\n    data: data,\n    id: id,\n    value: value,\n    valueFormat: valueFormat,\n    colors: colors\n  });\n\n  var _usePieFromBox = usePieFromBox({\n    data: normalizedData,\n    width: innerWidth,\n    height: innerHeight,\n    fit: fit,\n    innerRadius: innerRadiusRatio,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    padAngle: padAngle,\n    sortByValue: sortByValue,\n    cornerRadius: cornerRadius,\n    activeInnerRadiusOffset: activeInnerRadiusOffset,\n    activeOuterRadiusOffset: activeOuterRadiusOffset\n  }),\n      dataWithArc = _usePieFromBox.dataWithArc,\n      arcGenerator = _usePieFromBox.arcGenerator,\n      centerX = _usePieFromBox.centerX,\n      centerY = _usePieFromBox.centerY,\n      radius = _usePieFromBox.radius,\n      innerRadius = _usePieFromBox.innerRadius,\n      setActiveId = _usePieFromBox.setActiveId;\n\n  var getBorderColor = useInheritedColor(borderColor, theme);\n  var arcLabels = useArcLabels({\n    data: dataWithArc,\n    label: arcLabel,\n    skipAngle: arcLabelsSkipAngle,\n    offset: arcLabelsRadiusOffset,\n    textColor: arcLabelsTextColor\n  });\n  var arcLinkLabels = useArcLinkLabels({\n    data: dataWithArc,\n    skipAngle: arcLinkLabelsSkipAngle,\n    offset: arcLinkLabelsOffset,\n    diagonalLength: arcLinkLabelsDiagonalLength,\n    straightLength: arcLinkLabelsStraightLength,\n    label: arcLinkLabel,\n    linkColor: arcLinkLabelsColor,\n    textOffset: arcLinkLabelsTextOffset,\n    textColor: arcLinkLabelsTextColor\n  });\n  useEffect(function () {\n    if (!canvasEl.current) return;\n    canvasEl.current.width = outerWidth * pixelRatio;\n    canvasEl.current.height = outerHeight * pixelRatio;\n    var ctx = canvasEl.current.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.fillStyle = theme.background;\n    ctx.fillRect(0, 0, outerWidth, outerHeight);\n    ctx.save();\n    ctx.translate(margin.left, margin.top);\n    arcGenerator.context(ctx);\n    ctx.save();\n    ctx.translate(centerX, centerY);\n    dataWithArc.forEach(function (arc) {\n      ctx.beginPath();\n      ctx.fillStyle = arc.color;\n      ctx.strokeStyle = getBorderColor(arc);\n      ctx.lineWidth = borderWidth;\n      arcGenerator(arc.arc);\n      ctx.fill();\n\n      if (borderWidth > 0) {\n        ctx.stroke();\n      }\n    });\n\n    if (enableArcLinkLabels === true) {\n      drawCanvasArcLinkLabels(ctx, arcLinkLabels, theme, arcLinkLabelsThickness);\n    }\n\n    if (enableArcLabels === true) {\n      drawCanvasArcLabels(ctx, arcLabels, theme);\n    }\n\n    ctx.restore();\n    legends.forEach(function (legend) {\n      renderLegendToCanvas(ctx, _objectSpread2(_objectSpread2({}, legend), {}, {\n        data: dataWithArc,\n        containerWidth: innerWidth,\n        containerHeight: innerHeight,\n        theme: theme\n      }));\n    });\n  }, [canvasEl, innerWidth, innerHeight, outerWidth, outerHeight, margin.top, margin.left, pixelRatio, centerX, centerY, arcGenerator, dataWithArc, getBorderColor, enableArcLabels, arcLabels, enableArcLinkLabels, arcLinkLabels, arcLinkLabelsThickness, legends, theme]);\n  var arcs = useMemo(function () {\n    return dataWithArc.map(function (datum) {\n      return _objectSpread2({\n        id: datum.id\n      }, datum.arc);\n    });\n  }, [dataWithArc]);\n\n  var getArcFromMouse = function getArcFromMouse(event) {\n    if (!canvasEl.current) return null;\n\n    var _getRelativeCursor = getRelativeCursor(canvasEl.current, event),\n        _getRelativeCursor2 = _slicedToArray(_getRelativeCursor, 2),\n        x = _getRelativeCursor2[0],\n        y = _getRelativeCursor2[1];\n\n    var hoveredArc = findArcUnderCursor(margin.left + centerX, margin.top + centerY, radius, innerRadius, arcs, x, y);\n    if (!hoveredArc) return null;\n    return dataWithArc.find(function (datum) {\n      return datum.id === hoveredArc.id;\n    });\n  };\n\n  var _useTooltip = useTooltip(),\n      showTooltipFromEvent = _useTooltip.showTooltipFromEvent,\n      hideTooltip = _useTooltip.hideTooltip;\n\n  var handleMouseHover = function handleMouseHover(event) {\n    var datum = getArcFromMouse(event);\n\n    if (datum) {\n      onMouseMove === null || onMouseMove === void 0 ? void 0 : onMouseMove(datum, event);\n      setActiveId(datum.id);\n      showTooltipFromEvent(createElement(tooltip, {\n        datum: datum\n      }), event);\n    } else {\n      setActiveId(null);\n      hideTooltip();\n    }\n  };\n\n  var handleMouseLeave = function handleMouseLeave() {\n    hideTooltip();\n  };\n\n  var handleClick = function handleClick(event) {\n    if (!onClick) return;\n    var arc = getArcFromMouse(event);\n\n    if (arc) {\n      onClick(arc, event);\n    }\n  };\n\n  return React.createElement(\"canvas\", {\n    ref: canvasEl,\n    width: outerWidth * pixelRatio,\n    height: outerHeight * pixelRatio,\n    style: {\n      width: outerWidth,\n      height: outerHeight,\n      cursor: isInteractive ? 'auto' : 'normal'\n    },\n    onMouseEnter: isInteractive ? handleMouseHover : undefined,\n    onMouseMove: isInteractive ? handleMouseHover : undefined,\n    onMouseLeave: isInteractive ? handleMouseLeave : undefined,\n    onClick: isInteractive ? handleClick : undefined\n  });\n};\n\nvar PieCanvas = function PieCanvas(_ref2) {\n  var _ref2$isInteractive = _ref2.isInteractive,\n      isInteractive = _ref2$isInteractive === void 0 ? defaultProps.isInteractive : _ref2$isInteractive,\n      theme = _ref2.theme,\n      renderWrapper = _ref2.renderWrapper,\n      otherProps = _objectWithoutProperties(_ref2, [\"isInteractive\", \"theme\", \"renderWrapper\"]);\n\n  return React.createElement(Container, {\n    isInteractive: isInteractive,\n    renderWrapper: renderWrapper,\n    theme: theme\n  }, React.createElement(InnerPieCanvas, Object.assign({\n    isInteractive: isInteractive\n  }, otherProps)));\n};\n\nvar ResponsivePieCanvas = function ResponsivePieCanvas(props) {\n  return React.createElement(ResponsiveWrapper, null, function (_ref) {\n    var width = _ref.width,\n        height = _ref.height;\n    return React.createElement(PieCanvas, Object.assign({\n      width: width,\n      height: height\n    }, props));\n  });\n};\n\nexport { Pie, PieCanvas, ResponsivePie, ResponsivePieCanvas, defaultProps, useNormalizedData, usePie, usePieArcs, usePieFromBox, usePieLayerContext };","map":{"version":3,"sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../src/PieLegends.tsx","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/PieTooltip.tsx","../src/props.ts","../src/hooks.ts","../src/Arcs.tsx","../src/Pie.tsx","../src/ResponsivePie.tsx","../src/PieCanvas.tsx","../src/ResponsivePieCanvas.tsx"],"names":["objectWithoutPropertiesLoose","PieLegends","width","height","legends","dataWithArc","i","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","defineProperty","PieTooltip","datum","color","defaultProps","id","value","sortByValue","innerRadius","padAngle","cornerRadius","layers","startAngle","endAngle","fit","activeInnerRadiusOffset","activeOuterRadiusOffset","borderWidth","borderColor","from","modifiers","enableArcLabels","arcLabel","arcLabelsSkipAngle","arcLabelsRadiusOffset","arcLabelsTextColor","theme","enableArcLinkLabels","arcLinkLabel","arcLinkLabelsSkipAngle","arcLinkLabelsOffset","arcLinkLabelsDiagonalLength","arcLinkLabelsStraightLength","arcLinkLabelsThickness","arcLinkLabelsTextOffset","arcLinkLabelsTextColor","arcLinkLabelsColor","colors","scheme","defs","fill","isInteractive","animate","motionConfig","transitionMode","tooltip","role","pixelRatio","window","useNormalizedData","data","valueFormat","getId","usePropertyAccessor","getValue","formatValue","useValueFormatter","getColor","useOrdinalColorScale","useMemo","datumId","datumValue","normalizedDatum","label","formattedValue","usePieArcs","outerRadius","activeId","pie","innerPie","d","degreesToRadians","angle","Math","arc","index","thickness","angleDeg","radiansToDegrees","usePie","radius","setActiveId","useState","arcGenerator","useArcGenerator","usePieFromBox","innerRadiusRatio","computedProps","centerX","centerY","points","box","computeArcBoundingBox","ratio","adjustedBox","boundingBox","debug","usePieLayerContext","Arcs","center","onClick","onMouseEnter","onMouseMove","onMouseLeave","showTooltipFromEvent","hideTooltip","useTooltip","handleClick","handleMouseEnter","createElement","handleMouseMove","handleMouseLeave","InnerPie","margin","partialMargin","arcLabelsComponent","arcLinkLabelComponent","outerWidth","outerHeight","innerWidth","innerHeight","useDimensions","normalizedData","boundDefs","bindDefs","layerById","arcLinkLabels","arcs","arcLabels","layerContext","Pie","renderWrapper","otherProps","ResponsivePie","InnerPieCanvas","canvasEl","useRef","useTheme","getBorderColor","useInheritedColor","useArcLabels","skipAngle","offset","textColor","useArcLinkLabels","diagonalLength","straightLength","linkColor","textOffset","useEffect","ctx","drawCanvasArcLinkLabels","drawCanvasArcLabels","renderLegendToCanvas","containerWidth","containerHeight","getArcFromMouse","x","y","getRelativeCursor","hoveredArc","findArcUnderCursor","handleMouseHover","cursor","undefined","PieCanvas","ResponsivePieCanvas"],"mappings":"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","sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import React from 'react'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { CompletePieSvgProps, ComputedDatum } from './types'\n\ninterface PieLegendsProps<RawDatum> {\n    width: number\n    height: number\n    legends: CompletePieSvgProps<RawDatum>['legends']\n    dataWithArc: ComputedDatum<RawDatum>[]\n}\n\nconst PieLegends = <RawDatum,>({\n    width,\n    height,\n    legends,\n    dataWithArc,\n}: PieLegendsProps<RawDatum>) => {\n    return (\n        <>\n            {legends.map((legend, i) => (\n                <BoxLegendSvg\n                    key={i}\n                    {...legend}\n                    containerWidth={width}\n                    containerHeight={height}\n                    data={dataWithArc}\n                />\n            ))}\n        </>\n    )\n}\n\nexport default PieLegends\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React from 'react'\nimport { BasicTooltip } from '@nivo/tooltip'\nimport { ComputedDatum } from './types'\n\nexport const PieTooltip = <RawDatum,>({ datum }: { datum: ComputedDatum<RawDatum> }) => (\n    <BasicTooltip\n        id={datum.id}\n        value={datum.formattedValue}\n        enableChip={true}\n        color={datum.color}\n    />\n)\n\nexport default PieTooltip\n","import { OrdinalColorScaleConfig } from '@nivo/colors'\nimport { ArcTransitionMode } from '@nivo/arcs'\nimport { PieTooltip } from './PieTooltip'\n\nexport const defaultProps = {\n    id: 'id',\n    value: 'value',\n    sortByValue: false,\n    innerRadius: 0,\n    padAngle: 0,\n    cornerRadius: 0,\n\n    layers: ['arcLinkLabels', 'arcs', 'arcLabels', 'legends'],\n\n    // layout\n    startAngle: 0,\n    endAngle: 360,\n    fit: true,\n    activeInnerRadiusOffset: 0,\n    activeOuterRadiusOffset: 0,\n\n    // border\n    borderWidth: 0,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 1]],\n    },\n\n    // arc labels\n    enableArcLabels: true,\n    arcLabel: 'formattedValue',\n    arcLabelsSkipAngle: 0,\n    arcLabelsRadiusOffset: 0.5,\n    arcLabelsTextColor: { theme: 'labels.text.fill' },\n\n    // arc link labels\n    enableArcLinkLabels: true,\n    arcLinkLabel: 'id',\n    arcLinkLabelsSkipAngle: 0,\n    arcLinkLabelsOffset: 0,\n    arcLinkLabelsDiagonalLength: 16,\n    arcLinkLabelsStraightLength: 24,\n    arcLinkLabelsThickness: 1,\n    arcLinkLabelsTextOffset: 6,\n    arcLinkLabelsTextColor: { theme: 'labels.text.fill' },\n    arcLinkLabelsColor: { theme: 'axis.ticks.line.stroke' },\n\n    colors: ({ scheme: 'nivo' } as unknown) as OrdinalColorScaleConfig,\n    defs: [],\n    fill: [],\n\n    isInteractive: true,\n\n    animate: true,\n    motionConfig: 'gentle',\n    transitionMode: 'innerRadius' as ArcTransitionMode,\n\n    tooltip: PieTooltip,\n\n    legends: [],\n\n    role: 'img',\n\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio ?? 1 : 1,\n}\n","import { useMemo, useState } from 'react'\nimport { pie as d3Pie } from 'd3-shape'\nimport { ArcGenerator, useArcGenerator, computeArcBoundingBox } from '@nivo/arcs'\nimport {\n    degreesToRadians,\n    radiansToDegrees,\n    useValueFormatter,\n    usePropertyAccessor,\n} from '@nivo/core'\nimport { OrdinalColorScaleConfig, useOrdinalColorScale } from '@nivo/colors'\nimport { defaultProps } from './props'\nimport { CompletePieSvgProps, ComputedDatum, DatumId, PieArc, PieCustomLayerProps } from './types'\n\ninterface MayHaveLabel {\n    label?: string | number\n}\n\n/**\n * Format data so that we get a consistent data structure.\n * It will also add the `formattedValue` and `color` property.\n */\nexport const useNormalizedData = <RawDatum extends MayHaveLabel>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    colors = defaultProps.colors as OrdinalColorScaleConfig<\n        Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'>\n    >,\n}: Pick<CompletePieSvgProps<RawDatum>, 'id' | 'value' | 'valueFormat' | 'colors'> & {\n    data: RawDatum[]\n}): Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[] => {\n    const getId = usePropertyAccessor<RawDatum, DatumId>(id)\n    const getValue = usePropertyAccessor<RawDatum, number>(value)\n    const formatValue = useValueFormatter<number>(valueFormat)\n\n    const getColor = useOrdinalColorScale<Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'>>(\n        colors,\n        'id'\n    )\n\n    return useMemo(\n        () =>\n            data.map(datum => {\n                const datumId = getId(datum)\n                const datumValue = getValue(datum)\n\n                const normalizedDatum: Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'> = {\n                    id: datumId,\n                    label: datum.label ?? datumId,\n                    value: datumValue,\n                    formattedValue: formatValue(datumValue),\n                    data: datum,\n                }\n\n                return {\n                    ...normalizedDatum,\n                    color: getColor(normalizedDatum),\n                }\n            }),\n        [data, getId, getValue, formatValue, getColor]\n    )\n}\n\n/**\n * Compute arcs, which don't depend yet on radius.\n */\nexport const usePieArcs = <RawDatum>({\n    data,\n    startAngle,\n    endAngle,\n    innerRadius,\n    outerRadius,\n    padAngle,\n    sortByValue,\n    activeId,\n    activeInnerRadiusOffset,\n    activeOuterRadiusOffset,\n}: {\n    data: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[]\n    // in degrees\n    startAngle: number\n    // in degrees\n    endAngle: number\n    // in pixels\n    innerRadius: number\n    // in pixels\n    outerRadius: number\n    padAngle: number\n    sortByValue: boolean\n    activeId: null | DatumId\n    activeInnerRadiusOffset: number\n    activeOuterRadiusOffset: number\n}): Omit<ComputedDatum<RawDatum>, 'fill'>[] => {\n    const pie = useMemo(() => {\n        const innerPie = d3Pie<Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>>()\n            .value(d => d.value)\n            .startAngle(degreesToRadians(startAngle))\n            .endAngle(degreesToRadians(endAngle))\n            .padAngle(degreesToRadians(padAngle))\n\n        if (!sortByValue) {\n            innerPie.sortValues(null)\n        }\n\n        return innerPie\n    }, [startAngle, endAngle, padAngle, sortByValue])\n\n    return useMemo(\n        () =>\n            pie(data).map(\n                (\n                    arc: Omit<\n                        PieArc,\n                        'angle' | 'angleDeg' | 'innerRadius' | 'outerRadius' | 'thickness'\n                    > & {\n                        data: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>\n                    }\n                ) => {\n                    const angle = Math.abs(arc.endAngle - arc.startAngle)\n\n                    return {\n                        ...arc.data,\n                        arc: {\n                            index: arc.index,\n                            startAngle: arc.startAngle,\n                            endAngle: arc.endAngle,\n                            innerRadius:\n                                activeId === arc.data.id\n                                    ? innerRadius - activeInnerRadiusOffset\n                                    : innerRadius,\n                            outerRadius:\n                                activeId === arc.data.id\n                                    ? outerRadius + activeOuterRadiusOffset\n                                    : outerRadius,\n                            thickness: outerRadius - innerRadius,\n                            padAngle: arc.padAngle,\n                            angle,\n                            angleDeg: radiansToDegrees(angle),\n                        },\n                    }\n                }\n            ),\n\n        [\n            pie,\n            data,\n            innerRadius,\n            outerRadius,\n            activeId,\n            activeInnerRadiusOffset,\n            activeInnerRadiusOffset,\n        ]\n    )\n}\n\n/**\n * Compute pie layout using explicit radius/innerRadius,\n * expressed in pixels.\n */\nexport const usePie = <RawDatum>({\n    data,\n    radius,\n    innerRadius,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n}: Pick<\n    CompletePieSvgProps<RawDatum>,\n    | 'startAngle'\n    | 'endAngle'\n    | 'padAngle'\n    | 'sortByValue'\n    | 'cornerRadius'\n    | 'activeInnerRadiusOffset'\n    | 'activeOuterRadiusOffset'\n> & {\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n    radius: number\n    innerRadius: number\n}) => {\n    const [activeId, setActiveId] = useState<DatumId | null>(null)\n    const dataWithArc = usePieArcs({\n        data,\n        startAngle,\n        endAngle,\n        innerRadius,\n        outerRadius: radius,\n        padAngle,\n        sortByValue,\n        activeId,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n    })\n\n    const arcGenerator = useArcGenerator({ cornerRadius, padAngle: degreesToRadians(padAngle) })\n\n    return { dataWithArc, arcGenerator, setActiveId }\n}\n\n/**\n * Compute pie layout using a box to find radius/innerRadius,\n * expressed in ratio (0~1), can optionally use the `fit`\n * attribute to find the most space efficient layout.\n *\n * It also returns `centerX`/`centerY` as those can be altered\n * if `fit` is `true`.\n */\nexport const usePieFromBox = <RawDatum>({\n    data,\n    width,\n    height,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n    cornerRadius = defaultProps.cornerRadius,\n    fit = defaultProps.fit,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n}: Pick<\n    CompletePieSvgProps<RawDatum>,\n    | 'width'\n    | 'height'\n    | 'innerRadius'\n    | 'startAngle'\n    | 'endAngle'\n    | 'padAngle'\n    | 'sortByValue'\n    | 'cornerRadius'\n    | 'fit'\n    | 'activeInnerRadiusOffset'\n    | 'activeOuterRadiusOffset'\n> & {\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n}) => {\n    const [activeId, setActiveId] = useState<string | number | null>(null)\n    const computedProps = useMemo(() => {\n        let radius = Math.min(width, height) / 2\n        let innerRadius = radius * Math.min(innerRadiusRatio, 1)\n\n        let centerX = width / 2\n        let centerY = height / 2\n\n        let boundingBox\n        if (fit) {\n            const { points, ...box } = computeArcBoundingBox(\n                centerX,\n                centerY,\n                radius,\n                startAngle - 90,\n                endAngle - 90\n            )\n            const ratio = Math.min(width / box.width, height / box.height)\n\n            const adjustedBox: {\n                width: number\n                height: number\n                x?: number\n                y?: number\n            } = {\n                width: box.width * ratio,\n                height: box.height * ratio,\n            }\n            adjustedBox.x = (width - adjustedBox.width) / 2\n            adjustedBox.y = (height - adjustedBox.height) / 2\n\n            centerX = ((centerX - box.x) / box.width) * box.width * ratio + adjustedBox.x\n            centerY = ((centerY - box.y) / box.height) * box.height * ratio + adjustedBox.y\n\n            boundingBox = { box, ratio, points }\n\n            radius = radius * ratio\n            innerRadius = innerRadius * ratio\n        }\n\n        return {\n            centerX,\n            centerY,\n            radius,\n            innerRadius,\n            debug: boundingBox,\n        }\n    }, [width, height, innerRadiusRatio, startAngle, endAngle, fit, cornerRadius])\n\n    const dataWithArc = usePieArcs({\n        data,\n        startAngle,\n        endAngle,\n        innerRadius: computedProps.innerRadius,\n        outerRadius: computedProps.radius,\n        padAngle,\n        sortByValue,\n        activeId,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n    })\n\n    const arcGenerator = useArcGenerator({\n        cornerRadius,\n        padAngle: degreesToRadians(padAngle),\n    })\n\n    return {\n        dataWithArc,\n        arcGenerator,\n        setActiveId,\n        ...computedProps,\n    }\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const usePieLayerContext = <RawDatum>({\n    dataWithArc,\n    arcGenerator,\n    centerX,\n    centerY,\n    radius,\n    innerRadius,\n}: {\n    dataWithArc: ComputedDatum<RawDatum>[]\n    arcGenerator: ArcGenerator\n    centerX: number\n    centerY: number\n    radius: number\n    innerRadius: number\n}): PieCustomLayerProps<RawDatum> =>\n    useMemo(\n        () => ({\n            dataWithArc,\n            arcGenerator,\n            centerX,\n            centerY,\n            radius,\n            innerRadius,\n        }),\n        [dataWithArc, arcGenerator, centerX, centerY, radius, innerRadius]\n    )\n","import React, { createElement, useMemo } from 'react'\nimport { ArcGenerator, ArcsLayer } from '@nivo/arcs'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ComputedDatum, CompletePieSvgProps } from './types'\n\ninterface ArcsProps<RawDatum> {\n    center: [number, number]\n    data: ComputedDatum<RawDatum>[]\n    arcGenerator: ArcGenerator\n    borderWidth: CompletePieSvgProps<RawDatum>['borderWidth']\n    borderColor: CompletePieSvgProps<RawDatum>['borderColor']\n    isInteractive: CompletePieSvgProps<RawDatum>['isInteractive']\n    onClick?: CompletePieSvgProps<RawDatum>['onClick']\n    onMouseEnter?: CompletePieSvgProps<RawDatum>['onMouseEnter']\n    onMouseMove?: CompletePieSvgProps<RawDatum>['onMouseMove']\n    onMouseLeave?: CompletePieSvgProps<RawDatum>['onMouseLeave']\n    setActiveId: (id: null | string | number) => void\n    tooltip: CompletePieSvgProps<RawDatum>['tooltip']\n    transitionMode: CompletePieSvgProps<RawDatum>['transitionMode']\n}\n\nexport const Arcs = <RawDatum,>({\n    center,\n    data,\n    arcGenerator,\n    borderWidth,\n    borderColor,\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    setActiveId,\n    tooltip,\n    transitionMode,\n}: ArcsProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleClick = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            onClick?.(datum, event)\n        }\n    }, [isInteractive, onClick])\n\n    const handleMouseEnter = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n            setActiveId(datum.id)\n            onMouseEnter?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, setActiveId, onMouseEnter])\n\n    const handleMouseMove = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n            onMouseMove?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, onMouseMove])\n\n    const handleMouseLeave = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            hideTooltip()\n            setActiveId(null)\n            onMouseLeave?.(datum, event)\n        }\n    }, [isInteractive, hideTooltip, setActiveId, onMouseLeave])\n\n    return (\n        <ArcsLayer<ComputedDatum<RawDatum>>\n            center={center}\n            data={data}\n            arcGenerator={arcGenerator}\n            borderWidth={borderWidth}\n            borderColor={borderColor}\n            transitionMode={transitionMode}\n            onClick={handleClick}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n        />\n    )\n}\n","import React, { ReactNode, Fragment, createElement } from 'react'\nimport {\n    // @ts-ignore\n    bindDefs,\n    useDimensions,\n    Container,\n    SvgWrapper,\n} from '@nivo/core'\nimport { ArcLabelsLayer, ArcLinkLabelsLayer } from '@nivo/arcs'\nimport { InheritedColorConfig } from '@nivo/colors'\nimport PieLegends from './PieLegends'\nimport { useNormalizedData, usePieFromBox, usePieLayerContext } from './hooks'\nimport { ComputedDatum, PieLayer, PieSvgProps, PieLayerId } from './types'\nimport { defaultProps } from './props'\nimport { Arcs } from './Arcs'\n\nconst InnerPie = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    sortByValue = defaultProps.sortByValue,\n\n    layers = defaultProps.layers as PieLayer<RawDatum>[],\n\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    fit = defaultProps.fit,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n\n    width,\n    height,\n    margin: partialMargin,\n\n    colors = defaultProps.colors,\n\n    // border\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n\n    // arc labels\n    enableArcLabels = defaultProps.enableArcLabels,\n    arcLabel = defaultProps.arcLabel,\n    arcLabelsSkipAngle = defaultProps.arcLabelsSkipAngle,\n    arcLabelsTextColor = defaultProps.arcLabelsTextColor,\n    arcLabelsRadiusOffset = defaultProps.arcLabelsRadiusOffset,\n    arcLabelsComponent,\n\n    // arc link labels\n    enableArcLinkLabels = defaultProps.enableArcLinkLabels,\n    arcLinkLabel = defaultProps.arcLinkLabel,\n    arcLinkLabelsSkipAngle = defaultProps.arcLinkLabelsSkipAngle,\n    arcLinkLabelsOffset = defaultProps.arcLinkLabelsOffset,\n    arcLinkLabelsDiagonalLength = defaultProps.arcLinkLabelsDiagonalLength,\n    arcLinkLabelsStraightLength = defaultProps.arcLinkLabelsStraightLength,\n    arcLinkLabelsThickness = defaultProps.arcLinkLabelsThickness,\n    arcLinkLabelsTextOffset = defaultProps.arcLinkLabelsTextOffset,\n    arcLinkLabelsTextColor = defaultProps.arcLinkLabelsTextColor,\n    arcLinkLabelsColor = defaultProps.arcLinkLabelsColor,\n    arcLinkLabelComponent,\n\n    // styling\n    defs = defaultProps.defs,\n    fill = defaultProps.fill,\n\n    // interactivity\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    tooltip = defaultProps.tooltip,\n\n    transitionMode = defaultProps.transitionMode,\n\n    legends = defaultProps.legends,\n    role = defaultProps.role,\n}: PieSvgProps<RawDatum>) => {\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const normalizedData = useNormalizedData<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        colors,\n    })\n\n    const {\n        dataWithArc,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n        innerRadius,\n        setActiveId,\n    } = usePieFromBox<RawDatum>({\n        data: normalizedData,\n        width: innerWidth,\n        height: innerHeight,\n        fit,\n        innerRadius: innerRadiusRatio,\n        startAngle,\n        endAngle,\n        padAngle,\n        sortByValue,\n        cornerRadius,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n    })\n\n    const boundDefs = bindDefs(defs, dataWithArc, fill)\n\n    const layerById: Record<PieLayerId, ReactNode> = {\n        arcLinkLabels: null,\n        arcs: null,\n        arcLabels: null,\n        legends: null,\n    }\n\n    if (enableArcLinkLabels && layers.includes('arcLinkLabels')) {\n        layerById.arcLinkLabels = (\n            <ArcLinkLabelsLayer<ComputedDatum<RawDatum>>\n                key=\"arcLinkLabels\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                label={arcLinkLabel}\n                skipAngle={arcLinkLabelsSkipAngle}\n                offset={arcLinkLabelsOffset}\n                diagonalLength={arcLinkLabelsDiagonalLength}\n                straightLength={arcLinkLabelsStraightLength}\n                strokeWidth={arcLinkLabelsThickness}\n                textOffset={arcLinkLabelsTextOffset}\n                textColor={arcLinkLabelsTextColor}\n                linkColor={arcLinkLabelsColor}\n                component={arcLinkLabelComponent}\n            />\n        )\n    }\n\n    if (layers.includes('arcs')) {\n        layerById.arcs = (\n            <Arcs<RawDatum>\n                key=\"arcs\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                arcGenerator={arcGenerator}\n                borderWidth={borderWidth}\n                borderColor={borderColor}\n                isInteractive={isInteractive}\n                onClick={onClick}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                setActiveId={setActiveId}\n                tooltip={tooltip}\n                transitionMode={transitionMode}\n            />\n        )\n    }\n\n    if (enableArcLabels && layers.includes('arcLabels')) {\n        layerById.arcLabels = (\n            <ArcLabelsLayer<ComputedDatum<RawDatum>>\n                key=\"arcLabels\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                label={arcLabel}\n                radiusOffset={arcLabelsRadiusOffset}\n                skipAngle={arcLabelsSkipAngle}\n                textColor={arcLabelsTextColor}\n                transitionMode={transitionMode}\n                component={arcLabelsComponent}\n            />\n        )\n    }\n\n    if (legends.length > 0 && layers.includes('legends')) {\n        layerById.legends = (\n            <PieLegends<RawDatum>\n                key=\"legends\"\n                width={innerWidth}\n                height={innerHeight}\n                dataWithArc={dataWithArc}\n                legends={legends}\n            />\n        )\n    }\n\n    const layerContext = usePieLayerContext<RawDatum>({\n        dataWithArc,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n        innerRadius,\n    })\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer as PieLayerId] !== undefined) {\n                    return layerById[layer as PieLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Pie = <RawDatum,>({\n    isInteractive = defaultProps.isInteractive,\n    animate = defaultProps.animate,\n    motionConfig = defaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: PieSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerPie<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport { Pie } from './Pie'\nimport { PieSvgProps } from './types'\n\nexport const ResponsivePie = <RawDatum,>(\n    props: Omit<PieSvgProps<RawDatum>, 'width' | 'height'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <Pie<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n","import React, { createElement, useEffect, useMemo, useRef } from 'react'\nimport { getRelativeCursor, useDimensions, useTheme, Container } from '@nivo/core'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useInheritedColor, InheritedColorConfig } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport {\n    Arc,\n    findArcUnderCursor,\n    useArcLabels,\n    drawCanvasArcLabels,\n    useArcLinkLabels,\n    drawCanvasArcLinkLabels,\n} from '@nivo/arcs'\nimport { useNormalizedData, usePieFromBox } from './hooks'\nimport { ComputedDatum, PieCanvasProps } from './types'\nimport { defaultProps } from './props'\n\nconst InnerPieCanvas = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    sortByValue = defaultProps.sortByValue,\n\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    fit = defaultProps.fit,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n\n    width,\n    height,\n    margin: partialMargin,\n    pixelRatio = 1,\n\n    colors = defaultProps.colors,\n\n    // border\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n\n    // arc labels\n    enableArcLabels = defaultProps.enableArcLabels,\n    arcLabel = defaultProps.arcLabel,\n    arcLabelsSkipAngle = defaultProps.arcLabelsSkipAngle,\n    arcLabelsTextColor = defaultProps.arcLabelsTextColor,\n    arcLabelsRadiusOffset = defaultProps.arcLabelsRadiusOffset,\n\n    // arc link labels\n    enableArcLinkLabels = defaultProps.enableArcLinkLabels,\n    arcLinkLabel = defaultProps.arcLinkLabel,\n    arcLinkLabelsSkipAngle = defaultProps.arcLinkLabelsSkipAngle,\n    arcLinkLabelsOffset = defaultProps.arcLinkLabelsOffset,\n    arcLinkLabelsDiagonalLength = defaultProps.arcLinkLabelsDiagonalLength,\n    arcLinkLabelsStraightLength = defaultProps.arcLinkLabelsStraightLength,\n    arcLinkLabelsThickness = defaultProps.arcLinkLabelsThickness,\n    arcLinkLabelsTextOffset = defaultProps.arcLinkLabelsTextOffset,\n    arcLinkLabelsTextColor = defaultProps.arcLinkLabelsTextColor,\n    arcLinkLabelsColor = defaultProps.arcLinkLabelsColor,\n\n    // interactivity\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseMove,\n    tooltip = defaultProps.tooltip,\n\n    legends = defaultProps.legends,\n}: PieCanvasProps<RawDatum>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n    const theme = useTheme()\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const normalizedData = useNormalizedData<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        colors,\n    })\n\n    const {\n        dataWithArc,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n        innerRadius,\n        setActiveId,\n    } = usePieFromBox<RawDatum>({\n        data: normalizedData,\n        width: innerWidth,\n        height: innerHeight,\n        fit,\n        innerRadius: innerRadiusRatio,\n        startAngle,\n        endAngle,\n        padAngle,\n        sortByValue,\n        cornerRadius,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n    })\n\n    const getBorderColor = useInheritedColor<ComputedDatum<RawDatum>>(borderColor, theme)\n\n    const arcLabels = useArcLabels<ComputedDatum<RawDatum>>({\n        data: dataWithArc,\n        label: arcLabel,\n        skipAngle: arcLabelsSkipAngle,\n        offset: arcLabelsRadiusOffset,\n        textColor: arcLabelsTextColor,\n    })\n\n    const arcLinkLabels = useArcLinkLabels<ComputedDatum<RawDatum>>({\n        data: dataWithArc,\n        skipAngle: arcLinkLabelsSkipAngle,\n        offset: arcLinkLabelsOffset,\n        diagonalLength: arcLinkLabelsDiagonalLength,\n        straightLength: arcLinkLabelsStraightLength,\n        label: arcLinkLabel,\n        linkColor: arcLinkLabelsColor,\n        textOffset: arcLinkLabelsTextOffset,\n        textColor: arcLinkLabelsTextColor,\n    })\n\n    useEffect(() => {\n        if (!canvasEl.current) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')!\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n\n        ctx.save()\n        ctx.translate(margin.left, margin.top)\n        arcGenerator.context(ctx)\n\n        ctx.save()\n        ctx.translate(centerX, centerY)\n\n        dataWithArc.forEach(arc => {\n            ctx.beginPath()\n            ctx.fillStyle = arc.color\n\n            ctx.strokeStyle = getBorderColor(arc)\n            ctx.lineWidth = borderWidth\n\n            arcGenerator(arc.arc)\n\n            ctx.fill()\n\n            if (borderWidth > 0) {\n                ctx.stroke()\n            }\n        })\n\n        if (enableArcLinkLabels === true) {\n            drawCanvasArcLinkLabels<ComputedDatum<RawDatum>>(\n                ctx,\n                arcLinkLabels,\n                theme,\n                arcLinkLabelsThickness\n            )\n        }\n\n        if (enableArcLabels === true) {\n            drawCanvasArcLabels<ComputedDatum<RawDatum>>(ctx, arcLabels, theme)\n        }\n\n        // legends assume a box rather than a center,\n        // that's why we restore previously saved position here.\n        ctx.restore()\n        legends.forEach(legend => {\n            renderLegendToCanvas(ctx, {\n                ...legend,\n                data: dataWithArc,\n                containerWidth: innerWidth,\n                containerHeight: innerHeight,\n                theme,\n            })\n        })\n    }, [\n        canvasEl,\n        innerWidth,\n        innerHeight,\n        outerWidth,\n        outerHeight,\n        margin.top,\n        margin.left,\n        pixelRatio,\n        centerX,\n        centerY,\n        arcGenerator,\n        dataWithArc,\n        getBorderColor,\n        enableArcLabels,\n        arcLabels,\n        enableArcLinkLabels,\n        arcLinkLabels,\n        arcLinkLabelsThickness,\n        legends,\n        theme,\n    ])\n\n    const arcs = useMemo(\n        () =>\n            dataWithArc.map(datum => ({\n                id: datum.id,\n                ...datum.arc,\n            })),\n        [dataWithArc]\n    )\n\n    const getArcFromMouse = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        if (!canvasEl.current) return null\n\n        const [x, y] = getRelativeCursor(canvasEl.current, event)\n\n        const hoveredArc = findArcUnderCursor<Arc & { id: string | number }>(\n            margin.left + centerX,\n            margin.top + centerY,\n            radius,\n            innerRadius,\n            arcs,\n            x,\n            y\n        )\n\n        if (!hoveredArc) return null\n\n        return dataWithArc.find(datum => datum.id === hoveredArc.id)\n    }\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        const datum = getArcFromMouse(event)\n        if (datum) {\n            onMouseMove?.(datum, event)\n            setActiveId(datum.id)\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n        } else {\n            setActiveId(null)\n            hideTooltip()\n        }\n    }\n\n    const handleMouseLeave = () => {\n        hideTooltip()\n    }\n\n    const handleClick = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        if (!onClick) return\n\n        const arc = getArcFromMouse(event)\n        if (arc) {\n            onClick(arc, event)\n        }\n    }\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nexport const PieCanvas = <RawDatum,>({\n    isInteractive = defaultProps.isInteractive,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: PieCanvasProps<RawDatum>) => (\n    <Container {...{ isInteractive, renderWrapper, theme }}>\n        <InnerPieCanvas<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport { PieCanvas } from './PieCanvas'\nimport { PieCanvasProps } from './types'\n\nexport const ResponsivePieCanvas = <RawDatum,>(\n    props: Omit<PieCanvasProps<RawDatum>, 'width' | 'height'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <PieCanvas<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n"]},"metadata":{},"sourceType":"module"}