{"ast":null,"code":"import { ClickAwayListener } from '@material-ui/core';\nimport axios from 'axios';\nimport { PRODUCT_SERVER, USER_SERVER, TAG_SERVER, POST_SERVER, STORY_SERVER } from '../components/ultils/mise';\nimport { GET_PRODUCTS_BY_SELL, GET_PRODUCTS_BY_ARRIVAL, GET_BRANDS, GET_WOODS, GET_PRODUCTS_TO_SHOP, ADD_PRODUCT, CLEAR_PRODUCT, ADD_BRAND, ADD_WOOD, GET_POST_DETAIL, CLEAR_POST_DETAIL, GET_TOP10_TAGS, LIKE_POST, COMMENT_POST, HIDE_POST, UPDATE_DETAIL, LIKE_DETAIL, LIKE_COMMENT, HIDE_POST_DETAIL, DELETE_COMMENT, DELETE_POST, REPORT_POST, GET_STORY, UPDATE_POST, UPDATE_POST_DETAIL, SAVE_DETAIL, SAVE_POST, VIEW_STORY, CREATE_STORY, DELETE_STORY, GET_RECOMMEND_POST, RESTRICTED, GET_NATIONALITY, FIND_LOCATION } from './types';\nexport function getPostDetail(id) {\n  const request = axios.get(`${POST_SERVER}/postDetail?id=${id}&type=single`).then(response => {\n    return response.data;\n  });\n  return {\n    type: GET_POST_DETAIL,\n    payload: request\n  };\n}\nexport function getProductsBySell() {\n  //articles?sortBy=sold&order=desc&limit=4\n  const request = axios.get(`${POST_SERVER}/articles?sortBy=sold&order=desc&limit=4`).then(response => response.data);\n  console.log(request);\n  return {\n    type: GET_PRODUCTS_BY_SELL,\n    payload: request\n  };\n}\nexport function getProductsByArrival() {\n  const request = axios.get(`${POST_SERVER}/articles?sortBy=createAt&order=desc&limit=4`).then(response => response.data);\n  console.log(request);\n  return {\n    type: GET_PRODUCTS_BY_ARRIVAL,\n    payload: request\n  };\n}\nexport function getProductsToShop(skip, limit, filters = [], previousState = []) {\n  const data = {\n    skip,\n    limit,\n    filters\n  };\n  const request = axios.post(`${USER_SERVER}/newfeed`, data).then(response => {\n    let newState = [...previousState, ...response.data.topNewFeed];\n    return {\n      size: response.data.size,\n      posts: newState\n    };\n  });\n  return {\n    type: GET_PRODUCTS_TO_SHOP,\n    payload: request\n  };\n}\nexport function getBrands() {\n  const request = axios.get(`${PRODUCT_SERVER}/brands`).then(response => response.data);\n  return {\n    type: GET_BRANDS,\n    payload: request\n  };\n}\nexport function getWoods() {\n  const request = axios.get(`${PRODUCT_SERVER}/woods`).then(response => response.data);\n  console.log(request);\n  return {\n    type: GET_WOODS,\n    payload: request\n  };\n}\nexport function createPost(dataToSubmit) {\n  const request = axios.post(`${POST_SERVER}/create_post`, dataToSubmit).then(response => {\n    if (response.data.restricted) {\n      return {\n        type: RESTRICTED,\n        payload: response.data\n      };\n    } else {\n      return {\n        type: ADD_PRODUCT,\n        payload: response.data\n      };\n    }\n  });\n  return request;\n}\nexport function updatePost(dataToSubmit, Actiontype) {\n  const request = axios.post(`${POST_SERVER}/update_post`, dataToSubmit).then(response => {\n    return response.data;\n  });\n  return {\n    type: Actiontype == \"detail\" ? UPDATE_POST_DETAIL : UPDATE_POST,\n    payload: request\n  };\n}\nexport function clearProduct() {\n  return {\n    type: CLEAR_PRODUCT,\n    payload: ''\n  };\n}\nexport function addBrands(dataToSubmit, existingBrands) {\n  const request = axios.post(`${PRODUCT_SERVER}/brand`, dataToSubmit).then(response => {\n    let brands = [...existingBrands, response.data.brand];\n    return {\n      success: response.data.success,\n      brands\n    };\n  });\n  return {\n    type: ADD_BRAND,\n    payload: request\n  };\n}\nexport function addWoods(dataToSubmit, existingWoods) {\n  const request = axios.post(`${PRODUCT_SERVER}/wood`, dataToSubmit).then(response => {\n    let woods = [...existingWoods, response.data.wood];\n    return {\n      success: response.data.success,\n      woods\n    };\n  });\n  return {\n    type: ADD_WOOD,\n    payload: request\n  };\n}\nexport function getTopTenTags(skip, limit, previousState = []) {\n  const data = {\n    skip,\n    limit\n  };\n  console.log(skip, limit);\n  const request = axios.post(`${TAG_SERVER}/getTop10Tags`, data).then(response => {\n    let topTenTags = [...previousState, ...response.data.topTenTags];\n    console.log(response.data.topTenTags);\n    return {\n      topTenTags,\n      size: response.data.size\n    };\n  });\n  return {\n    type: GET_TOP10_TAGS,\n    payload: request\n  };\n}\nexport function savePost(postId) {\n  const data = {\n    postId\n  };\n  const request = axios.put(`${POST_SERVER}/save`, data).then(response => {\n    if (response.data.restricted) {\n      return {\n        type: RESTRICTED,\n        payload: response.data\n      };\n    } else {\n      return {\n        type: SAVE_POST,\n        payload: response.data.user\n      };\n    }\n  });\n  return request;\n}\nexport function unSavePost(postId) {\n  const data = {\n    postId\n  };\n  let type = SAVE_POST;\n  const request = axios.put(`${POST_SERVER}/unSave`, data).then(response => {\n    console.log(response.data);\n\n    if (response.data.restricted) {\n      type = RESTRICTED;\n      return response.data;\n    } else {\n      console.log(response.data);\n      return response.data.user;\n    }\n  });\n  return {\n    type: type,\n    payload: request\n  };\n}\nexport function likePost(postId, ActionType) {\n  const data = {\n    postId\n  };\n  let type = ActionType == \"detail\" ? LIKE_DETAIL : LIKE_POST;\n  const request = axios.put(`${POST_SERVER}/like`, data).then(response => {\n    console.log(response.data);\n\n    if (response.data.restricted) {\n      type = RESTRICTED;\n      return response.data;\n    } else {\n      return response.data[0];\n    }\n  });\n  return {\n    type: type,\n    payload: request\n  };\n}\nexport function unlikePost(postId, ActionType) {\n  const data = {\n    postId\n  };\n  let type = ActionType == \"detail\" ? LIKE_DETAIL : LIKE_POST;\n  console.log(type);\n  const request = axios.put(`${POST_SERVER}/unlike`, data).then(response => {\n    console.log(response.data);\n\n    if (response.data.restricted) {\n      type = RESTRICTED;\n      return response.data;\n    } else {\n      return response.data[0];\n    }\n  });\n  return {\n    type: type,\n    payload: request\n  };\n} // export function unlikePost(postId, ActionType) {\n//     const data ={\n//         postId\n//     }\n//     let type = ActionType == \"detail\" ? LIKE_DETAIL : LIKE_POST;\n//     const request = axios.put(`${POST_SERVER}/unlike`,data)\n//     .then( response =>{\n//         console.log(response.data)\n//         if(response.data.restricted){\n//             type = RESTRICTED\n//             return response.data\n//         }else{\n//             return response.data[0]\n//         }\n//     })\n//     return {\n//         type: type,\n//         payload: request\n//     }\n// }\n\nexport function makeComment(postId, content, Actiontype) {\n  const data = {\n    postId,\n    content\n  };\n  const request = axios.post(`${POST_SERVER}/comment`, data).then(response => {\n    if (response.data.restricted) {\n      return {\n        type: RESTRICTED,\n        payload: response.data\n      };\n    } else {\n      let action = {\n        type: Actiontype == \"detail\" ? UPDATE_DETAIL : COMMENT_POST,\n        payload: response.data[0]\n      };\n      return action;\n    }\n  });\n  return request;\n}\nexport function likeComment(postId, commentId, ActionType) {\n  const data = {\n    commentId,\n    postId\n  };\n  const request = axios.put(`${POST_SERVER}/likeComment`, data).then(response => {\n    if (response.data.restricted) {\n      return {\n        type: RESTRICTED,\n        payload: response.data\n      };\n    } else {\n      return {\n        type: LIKE_COMMENT,\n        payload: response.data[0]\n      };\n    }\n  });\n  return request;\n}\nexport function unLikeComment(postId, commentId, ActionType) {\n  const data = {\n    commentId,\n    postId\n  };\n  const request = axios.put(`${POST_SERVER}/unLikeComment`, data).then(response => {\n    if (response.data.restricted) {\n      return {\n        type: RESTRICTED,\n        payload: response.data\n      };\n    } else {\n      return {\n        type: LIKE_COMMENT,\n        payload: response.data[0]\n      };\n    }\n  });\n  return request;\n}\nexport function hidePost(postId, ActionType) {\n  const data = {\n    postId\n  };\n  const request = axios.put(`${POST_SERVER}/hidePost`, data).then(response => {\n    return response.data;\n  });\n  console.log(request);\n  return {\n    type: ActionType == \"detail\" ? HIDE_POST_DETAIL : HIDE_POST,\n    payload: request\n  };\n}\nexport function deleteComment(postId, commentId) {\n  console.log(postId, commentId);\n  const data = {\n    postId,\n    commentId\n  };\n  const request = axios.put(`${POST_SERVER}/deleteComment`, data).then(response => {\n    return response.data[0];\n  });\n  console.log(request);\n  return {\n    type: DELETE_COMMENT,\n    payload: request\n  };\n}\nexport function deletePost(id) {\n  const data = {\n    id\n  };\n  const request = axios.post(`${POST_SERVER}/delete_post`, data).then(response => {\n    console.log(response.data);\n    return response.data;\n  });\n  console.log(request);\n  return {\n    type: DELETE_POST,\n    payload: request\n  };\n}\nexport function report(reportData, reportPolicy) {\n  console.log(reportData);\n  let data = {};\n\n  switch (reportData.reportType) {\n    case \"post\":\n      data = {\n        reportType: reportData.reportType,\n        reportAbout: reportPolicy,\n        post: reportData.post\n      };\n      break;\n\n    case \"comment\":\n      data = {\n        reportType: reportData.reportType,\n        reportAbout: reportPolicy,\n        comment: reportData.comment,\n        post: reportData.post\n      };\n      break;\n\n    case \"user\":\n      data = {\n        reportType: reportData.reportType,\n        reportAbout: reportPolicy,\n        userId: reportData.userId\n      };\n      break;\n  }\n\n  const request = axios.post(`${POST_SERVER}/report`, data).then(response => {\n    console.log(response);\n    return response.data;\n  });\n  return {\n    type: REPORT_POST,\n    payload: request\n  };\n}\nexport function getStory(id) {\n  const request = axios.get(`${STORY_SERVER}/getAll`).then(response => {\n    console.log(response.data);\n    return sortStory(response.data, id); //return response.data;\n  });\n  return {\n    type: GET_STORY,\n    payload: request\n  };\n}\nexport function viewStory(id) {\n  let data = {\n    id\n  };\n  console.log(id);\n  const request = axios.put(`${STORY_SERVER}/view`, data).then(response => {\n    console.log(response.data);\n    return response.data;\n  });\n  return {\n    type: VIEW_STORY,\n    payload: request\n  };\n}\nexport function deleteStory(storyId) {\n  console.log(\"idddddddddddđ\", storyId);\n  let data = {\n    storyId\n  };\n  const request = axios.post(`/api/story/delete`, data).then(response => {\n    console.log(\"delete story\", response.data);\n    return response.data;\n  });\n  return {\n    type: DELETE_STORY,\n    payload: request\n  };\n}\nexport async function createStory(uri, id) {\n  try {\n    const request = await fetch('/api/story/create', {\n      method: 'POST',\n      body: JSON.stringify({\n        uri: uri\n      }),\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      console.log('Success:', data);\n      return data;\n    });\n    return {\n      type: CREATE_STORY,\n      payload: {\n        success: request.success,\n        stories: sortStory(request.stories, id)\n      }\n    };\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction isViewed(item, id) {\n  let res = false;\n\n  for (let i = 0; i < item.stories.length; i++) {\n    if (item.stories[i].viewedBy.length == 0) {\n      console.log(\"Empty\", id);\n      res = false;\n      break;\n    } else {\n      if (item.stories[i].viewedBy.includes(id)) {\n        res = true;\n      }\n    }\n  }\n\n  console.log(item._id, res);\n  return res;\n}\n\nfunction sortStory(stories, id) {\n  stories.sort((x, y) => {\n    return isViewed(x, id) === isViewed(y, id) ? 0 : isViewed(x, id) ? 1 : -1;\n  });\n  return stories;\n}\n\nexport function findLocation(name) {\n  const request = axios.get(`${POST_SERVER}/location/${name}`).then(response => response.data);\n  return {\n    type: FIND_LOCATION,\n    payload: request\n  };\n}","map":{"version":3,"sources":["D:/Kltn/test/social-media/client/src/actions/product_actions.js"],"names":["ClickAwayListener","axios","PRODUCT_SERVER","USER_SERVER","TAG_SERVER","POST_SERVER","STORY_SERVER","GET_PRODUCTS_BY_SELL","GET_PRODUCTS_BY_ARRIVAL","GET_BRANDS","GET_WOODS","GET_PRODUCTS_TO_SHOP","ADD_PRODUCT","CLEAR_PRODUCT","ADD_BRAND","ADD_WOOD","GET_POST_DETAIL","CLEAR_POST_DETAIL","GET_TOP10_TAGS","LIKE_POST","COMMENT_POST","HIDE_POST","UPDATE_DETAIL","LIKE_DETAIL","LIKE_COMMENT","HIDE_POST_DETAIL","DELETE_COMMENT","DELETE_POST","REPORT_POST","GET_STORY","UPDATE_POST","UPDATE_POST_DETAIL","SAVE_DETAIL","SAVE_POST","VIEW_STORY","CREATE_STORY","DELETE_STORY","GET_RECOMMEND_POST","RESTRICTED","GET_NATIONALITY","FIND_LOCATION","getPostDetail","id","request","get","then","response","data","type","payload","getProductsBySell","console","log","getProductsByArrival","getProductsToShop","skip","limit","filters","previousState","post","newState","topNewFeed","size","posts","getBrands","getWoods","createPost","dataToSubmit","restricted","updatePost","Actiontype","clearProduct","addBrands","existingBrands","brands","brand","success","addWoods","existingWoods","woods","wood","getTopTenTags","topTenTags","savePost","postId","put","user","unSavePost","likePost","ActionType","unlikePost","makeComment","content","action","likeComment","commentId","unLikeComment","hidePost","deleteComment","deletePost","report","reportData","reportPolicy","reportType","reportAbout","comment","userId","getStory","sortStory","viewStory","deleteStory","storyId","createStory","uri","fetch","method","body","JSON","stringify","headers","json","stories","error","isViewed","item","res","i","length","viewedBy","includes","_id","sort","x","y","findLocation","name"],"mappings":"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","sourcesContent":["import { ClickAwayListener } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport { PRODUCT_SERVER, USER_SERVER, TAG_SERVER, POST_SERVER, STORY_SERVER } from '../components/ultils/mise';\r\n\r\nimport {\r\n    GET_PRODUCTS_BY_SELL,\r\n    GET_PRODUCTS_BY_ARRIVAL,\r\n    GET_BRANDS,\r\n    GET_WOODS,\r\n    GET_PRODUCTS_TO_SHOP,\r\n    ADD_PRODUCT,\r\n    CLEAR_PRODUCT,\r\n    ADD_BRAND,\r\n    ADD_WOOD,\r\n    GET_POST_DETAIL,\r\n    CLEAR_POST_DETAIL,\r\n    GET_TOP10_TAGS,\r\n    LIKE_POST,\r\n    COMMENT_POST,\r\n    HIDE_POST,\r\n    UPDATE_DETAIL,\r\n    LIKE_DETAIL,\r\n    LIKE_COMMENT,\r\n    HIDE_POST_DETAIL,\r\n    DELETE_COMMENT,\r\n    DELETE_POST,\r\n    REPORT_POST,\r\n    GET_STORY,\r\n    UPDATE_POST,\r\n    UPDATE_POST_DETAIL,\r\n    SAVE_DETAIL,\r\n    SAVE_POST,\r\n    VIEW_STORY,\r\n    CREATE_STORY,\r\n    DELETE_STORY,\r\n    GET_RECOMMEND_POST,\r\n    RESTRICTED,\r\n    GET_NATIONALITY,\r\n    FIND_LOCATION\r\n} from './types';\r\n\r\nexport function getPostDetail(id){\r\n    const request = axios.get(`${POST_SERVER}/postDetail?id=${id}&type=single`)\r\n    .then(response=>{\r\n       return response.data\r\n    })\r\n    return {\r\n        type: GET_POST_DETAIL,\r\n        payload: request,\r\n    }\r\n}\r\n\r\nexport function getProductsBySell(){\r\n    \r\n    //articles?sortBy=sold&order=desc&limit=4\r\n    const request = axios.get(`${POST_SERVER}/articles?sortBy=sold&order=desc&limit=4`)\r\n        .then(response => response.data);\r\n    console.log(request)\r\n    return {\r\n        type: GET_PRODUCTS_BY_SELL,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function getProductsByArrival(){\r\n    const request = axios.get(`${POST_SERVER}/articles?sortBy=createAt&order=desc&limit=4`)\r\n        .then(response => response.data);\r\n    console.log(request)\r\n    return {\r\n        type: GET_PRODUCTS_BY_ARRIVAL,\r\n        payload: request\r\n    }\r\n\r\n}\r\n\r\nexport function getProductsToShop(skip, limit, filters =[],previousState = []){\r\n    const data = {\r\n        skip,\r\n        limit,\r\n        filters\r\n    }\r\n    const request = axios.post(`${USER_SERVER}/newfeed`,data)\r\n    .then(response =>{\r\n        let newState = [\r\n            ...previousState,\r\n            ...response.data.topNewFeed\r\n        ]\r\n        return {\r\n            size: response.data.size,\r\n            posts: newState\r\n        }\r\n    })\r\n    return {\r\n        type: GET_PRODUCTS_TO_SHOP,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function getBrands(){\r\n    const request = axios.get(`${PRODUCT_SERVER}/brands`)\r\n        .then(response => response.data);\r\n    return {\r\n        type: GET_BRANDS,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function getWoods() {\r\n    const request = axios.get(`${PRODUCT_SERVER}/woods`)\r\n        .then(response => response.data);\r\n    console.log(request)\r\n    return {\r\n        type: GET_WOODS,\r\n        payload: request,\r\n    }\r\n}\r\n\r\nexport function createPost(dataToSubmit){\r\n\r\n    const request = axios.post(`${POST_SERVER}/create_post`,dataToSubmit)\r\n    .then(response => {\r\n        if(response.data.restricted){\r\n            return {\r\n                type: RESTRICTED,\r\n                payload:  response.data\r\n            }\r\n        }else{\r\n            return{\r\n                type: ADD_PRODUCT,\r\n                payload: response.data\r\n            }\r\n        }\r\n    });\r\n\r\n    return request; \r\n}\r\n\r\nexport function updatePost(dataToSubmit,Actiontype) {\r\n    const request = axios.post(`${POST_SERVER}/update_post`, dataToSubmit)\r\n        .then(response => {\r\n            return  response.data\r\n        });\r\n    return {\r\n        type: Actiontype == \"detail\" ? UPDATE_POST_DETAIL : UPDATE_POST,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function clearProduct(){\r\n    return{\r\n        type: CLEAR_PRODUCT,\r\n        payload: ''\r\n    }\r\n}\r\n\r\nexport function addBrands(dataToSubmit, existingBrands){\r\n    const request = axios.post(`${PRODUCT_SERVER}/brand`,dataToSubmit)\r\n    .then(response=>{\r\n      let brands = [\r\n          ...existingBrands,\r\n          response.data.brand\r\n      ];\r\n      return{\r\n          success: response.data.success,\r\n          brands\r\n      }  \r\n    });\r\n\r\n    return {\r\n        type: ADD_BRAND,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function addWoods(dataToSubmit, existingWoods) {\r\n    const request = axios.post(`${PRODUCT_SERVER}/wood`, dataToSubmit)\r\n        .then(response => {\r\n            let woods = [\r\n                ...existingWoods,\r\n                response.data.wood\r\n            ];\r\n            return {\r\n                success: response.data.success,\r\n                woods\r\n            }\r\n        });\r\n\r\n    return {\r\n        type: ADD_WOOD,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function getTopTenTags(skip, limit, previousState = []) {\r\n    const data = {\r\n        skip,\r\n        limit\r\n    };\r\n    console.log(skip,limit)\r\n    const request = axios.post(`${TAG_SERVER}/getTop10Tags`, data)\r\n    .then(response => {\r\n        let topTenTags = [\r\n            ...previousState,\r\n            ...response.data.topTenTags\r\n        ]\r\n        console.log(response.data.topTenTags)\r\n        return {\r\n            topTenTags,\r\n            size: response.data.size\r\n        };\r\n    })\r\n    return {\r\n        type: GET_TOP10_TAGS,\r\n        payload: request,\r\n    }\r\n}\r\n\r\nexport function savePost(postId) {\r\n    const data = {\r\n        postId\r\n    }\r\n    const request = axios.put(`${POST_SERVER}/save`, data)\r\n        .then(response => {\r\n            if(response.data.restricted){\r\n                return {\r\n                    type: RESTRICTED,\r\n                    payload: response.data\r\n                }\r\n            }else{\r\n                return {\r\n                    type: SAVE_POST,\r\n                    payload: response.data.user\r\n                }\r\n            }\r\n        })\r\n        \r\n    return request\r\n}\r\n\r\nexport function unSavePost(postId) {\r\n    const data = {\r\n        postId\r\n    }\r\n\r\n    let type = SAVE_POST;\r\n    const request = axios.put(`${POST_SERVER}/unSave`, data)\r\n        .then(response => {\r\n            console.log(response.data)\r\n            if(response.data.restricted){\r\n                type = RESTRICTED\r\n                return response.data\r\n            }else{\r\n                console.log(response.data)\r\n                return response.data.user\r\n            }\r\n        })\r\n\r\n    return {\r\n        type: type,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function likePost(postId, ActionType){\r\n    const data ={\r\n        postId\r\n    }\r\n    let type = ActionType == \"detail\" ? LIKE_DETAIL : LIKE_POST;\r\n    const request = axios.put(`${POST_SERVER}/like`,data)\r\n    .then( response =>{\r\n        console.log(response.data)\r\n        if(response.data.restricted){\r\n            type = RESTRICTED\r\n            return response.data\r\n        }else{\r\n            return response.data[0]\r\n        }\r\n    })\r\n\r\n    return {\r\n        type: type,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function unlikePost(postId, ActionType){\r\n    const data ={\r\n        postId\r\n    }\r\n    let type = ActionType == \"detail\" ? LIKE_DETAIL : LIKE_POST;\r\n    console.log(type)\r\n    const request = axios.put(`${POST_SERVER}/unlike`,data)\r\n    .then( response =>{\r\n        console.log(response.data)\r\n        if(response.data.restricted){\r\n            type = RESTRICTED\r\n            return response.data\r\n        }else{\r\n            return response.data[0]\r\n        }\r\n    })\r\n\r\n    return {\r\n        type: type,\r\n        payload: request\r\n    }\r\n}\r\n\r\n// export function unlikePost(postId, ActionType) {\r\n\r\n//     const data ={\r\n//         postId\r\n//     }\r\n//     let type = ActionType == \"detail\" ? LIKE_DETAIL : LIKE_POST;\r\n//     const request = axios.put(`${POST_SERVER}/unlike`,data)\r\n//     .then( response =>{\r\n//         console.log(response.data)\r\n//         if(response.data.restricted){\r\n//             type = RESTRICTED\r\n//             return response.data\r\n//         }else{\r\n//             return response.data[0]\r\n//         }\r\n//     })\r\n\r\n//     return {\r\n//         type: type,\r\n//         payload: request\r\n//     }\r\n// }\r\n\r\nexport function makeComment(postId, content, Actiontype) {\r\n\r\n    const data = {\r\n        postId,\r\n        content\r\n    }\r\n\r\n    const request = axios.post(`${POST_SERVER}/comment`, data)\r\n        .then(response => {\r\n            if(response.data.restricted){\r\n                return {\r\n                    type: RESTRICTED,\r\n                    payload: response.data\r\n                }\r\n            }else{\r\n                 let action =  {\r\n                    type: Actiontype == \"detail\" ? UPDATE_DETAIL : COMMENT_POST,\r\n                    payload: response.data[0],\r\n                }\r\n                return action;\r\n            }\r\n        })\r\n\r\n    return request;\r\n}\r\n\r\nexport function likeComment(postId,commentId,ActionType) {\r\n    const data = {\r\n        commentId,\r\n        postId\r\n    }\r\n    const request = axios.put(`${POST_SERVER}/likeComment`, data)\r\n        .then(response => {\r\n            if(response.data.restricted){\r\n                \r\n                return {\r\n                    type: RESTRICTED,\r\n                    payload: response.data\r\n                }\r\n            }else{\r\n                return {\r\n                    type: LIKE_COMMENT,\r\n                    payload: response.data[0],\r\n                }\r\n            }\r\n        })\r\n    return request\r\n}\r\n\r\nexport function unLikeComment(postId, commentId, ActionType) {\r\n    const data = {\r\n        commentId,\r\n        postId\r\n    }\r\n    const request = axios.put(`${POST_SERVER}/unLikeComment`, data)\r\n        .then(response => {\r\n            if(response.data.restricted){\r\n                return {\r\n                    type: RESTRICTED,\r\n                    payload: response.data\r\n                }\r\n            }else{\r\n                return {\r\n                    type: LIKE_COMMENT,\r\n                    payload: response.data[0]\r\n                }\r\n            }\r\n        })\r\n    \r\n    return request\r\n}\r\n\r\nexport function hidePost(postId, ActionType){\r\n    const data = {\r\n        postId,\r\n    }\r\n    const request = axios.put(`${POST_SERVER}/hidePost`, data)\r\n    .then(response => {\r\n        return response.data;\r\n    })\r\n    console.log(request)\r\n    return {\r\n        type: ActionType == \"detail\" ? HIDE_POST_DETAIL : HIDE_POST,\r\n        payload: request,\r\n    }\r\n}\r\n\r\nexport function deleteComment(postId, commentId) {\r\n    console.log(postId,commentId);\r\n    const data = {\r\n        postId,\r\n        commentId\r\n    }\r\n    const request = axios.put(`${POST_SERVER}/deleteComment`, data)\r\n    .then(response => {\r\n        return response.data[0];\r\n    })\r\n    console.log(request)\r\n    return {\r\n        type: DELETE_COMMENT,\r\n        payload: request,\r\n    }\r\n}\r\n\r\nexport function deletePost(id) {\r\n    const data = {\r\n        id\r\n    }\r\n    const request = axios.post(`${POST_SERVER}/delete_post`, data)\r\n    .then(response => {\r\n        console.log(response.data)\r\n        return response.data;\r\n    })\r\n    console.log(request)\r\n    return {\r\n        type: DELETE_POST,\r\n        payload: request,\r\n    }\r\n}\r\n\r\nexport function report(reportData, reportPolicy) {\r\n   \r\n    console.log(reportData);\r\n    let data = {}\r\n\r\n    switch  (reportData.reportType){\r\n        case \"post\":\r\n            data = {\r\n                reportType: reportData.reportType,\r\n                reportAbout: reportPolicy,\r\n                post: reportData.post \r\n            }\r\n            break;\r\n        case \"comment\":\r\n            data = {\r\n                reportType: reportData.reportType,\r\n                reportAbout: reportPolicy,\r\n                comment: reportData.comment,\r\n                post: reportData.post \r\n            }\r\n            break;\r\n        case \"user\":\r\n            data = {\r\n                reportType: reportData.reportType,\r\n                reportAbout: reportPolicy,\r\n                userId:  reportData.userId,\r\n            }\r\n            break;\r\n    }\r\n\r\n    const request = axios.post(`${POST_SERVER}/report`,data)\r\n    .then(response =>{\r\n        console.log(response)\r\n        return response.data\r\n        \r\n    })\r\n    \r\n    return {\r\n        type: REPORT_POST,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function getStory(id){\r\n    const request = axios.get(`${STORY_SERVER}/getAll`)\r\n        .then(response => {\r\n            console.log(response.data);\r\n            return sortStory(response.data,id);\r\n            //return response.data;\r\n        })\r\n    return {\r\n        type: GET_STORY,\r\n        payload: request,\r\n    }\r\n}\r\n\r\nexport function viewStory(id){\r\n    let data={id}\r\n    console.log(id)\r\n    const request = axios.put(`${STORY_SERVER}/view`,data)\r\n        .then(response => {\r\n            console.log(response.data);\r\n            return response.data\r\n        })\r\n    return {\r\n        type: VIEW_STORY,\r\n        payload: request,\r\n    }\r\n}\r\n\r\nexport function deleteStory(storyId){\r\n    console.log(\"idddddddddddđ\",storyId)\r\n    let data={storyId}\r\n    const request = axios.post(`/api/story/delete`, data)\r\n    .then(response => {\r\n        console.log(\"delete story\",response.data)\r\n        return response.data\r\n    });\r\n    return {\r\n        type: DELETE_STORY,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport async function createStory(uri,id){\r\n    try{\r\n        const request = await fetch('/api/story/create',{\r\n            method: 'POST',\r\n            body: JSON.stringify({uri: uri}),\r\n            headers: {'Content-type': 'application/json'}\r\n        }).then(response => response.json())\r\n        .then(data => {\r\n            console.log('Success:', data);\r\n            return data\r\n        })\r\n        return {\r\n            type: CREATE_STORY,\r\n            payload: {\r\n                success: request.success,\r\n                stories: sortStory(request.stories,id)\r\n            }\r\n        }\r\n    }catch (error){\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n\r\nfunction isViewed(item,id){\r\n    let res = false;   \r\n    for(let i=0;i<item.stories.length;i++){\r\n        if(item.stories[i].viewedBy.length == 0){\r\n            console.log(\"Empty\", id);\r\n            res = false;\r\n            break;\r\n        }\r\n        else {\r\n            if(item.stories[i].viewedBy.includes(id)){\r\n                res = true;\r\n            }\r\n        }\r\n    }\r\n    console.log(item._id,res);\r\n    return res;\r\n}\r\n\r\nfunction sortStory(stories,id){\r\n    stories.sort((x, y) => {\r\n        return (isViewed(x,id) === isViewed(y,id)) ? 0 : isViewed(x,id) ? 1 : -1;\r\n    })\r\n    return stories;\r\n}\r\n\r\nexport function findLocation(name){\r\n    const request = axios.get(`${POST_SERVER}/location/${name}`)\r\n    .then(response => response.data)\r\n    return {\r\n        type: FIND_LOCATION,\r\n        payload: request\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}