{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kltn\\\\test\\\\social-media\\\\client\\\\src\\\\components\\\\SearchLocationInput\\\\SearchLocationInput.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport './SearchLocationInput.scss';\n\nrequire('dotenv').config();\n\nlet autoComplete;\n\nconst loadScript = (url, callback) => {\n  let script = document.createElement(\"script\");\n  script.type = \"text/javascript\";\n\n  if (script.readyState) {\n    script.onreadystatechange = function () {\n      if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\n        script.onreadystatechange = null;\n        callback();\n      }\n    };\n  } else {\n    script.onload = () => callback();\n  }\n\n  script.src = url;\n  document.getElementsByTagName(\"head\")[0].appendChild(script);\n};\n\nfunction handleScriptLoad(updateQuery, autoCompleteRef) {\n  autoComplete = new window.google.maps.places.Autocomplete(autoCompleteRef.current, {\n    types: [\"(cities)\"],\n    componentRestrictions: {\n      country: \"vn\"\n    }\n  });\n  autoComplete.setFields([\"address_components\", \"formatted_address\"]);\n  autoComplete.addListener(\"place_changed\", () => handlePlaceSelect(updateQuery));\n}\n\nasync function handlePlaceSelect(updateQuery) {\n  const addressObject = autoComplete.getPlace();\n  const query = addressObject.formatted_address;\n  updateQuery(query);\n  console.log(addressObject);\n}\n\nfunction SearchLocationInput() {\n  const [query, setQuery] = useState(\"\");\n  const autoCompleteRef = useRef(null);\n  useEffect(() => {\n    loadScript(`https://maps.googleapis.com/maps/api/js?key=AIzaSyD3r44u0kUzRPhog5wOz3GDC02pOuAzrDA&libraries=places,`, () => handleScriptLoad(setQuery, autoCompleteRef));\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-location-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"input_value\",\n    ref: autoCompleteRef,\n    onChange: event => setQuery(event.target.value),\n    placeholder: \"Enter a City\",\n    value: query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default SearchLocationInput;","map":{"version":3,"sources":["D:/Kltn/test/social-media/client/src/components/SearchLocationInput/SearchLocationInput.js"],"names":["React","useState","useEffect","useRef","require","config","autoComplete","loadScript","url","callback","script","document","createElement","type","readyState","onreadystatechange","onload","src","getElementsByTagName","appendChild","handleScriptLoad","updateQuery","autoCompleteRef","window","google","maps","places","Autocomplete","current","types","componentRestrictions","country","setFields","addListener","handlePlaceSelect","addressObject","getPlace","query","formatted_address","console","log","SearchLocationInput","setQuery","event","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAO,4BAAP;;AACAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,IAAIC,YAAJ;;AAEA,MAAMC,UAAU,GAAG,CAACC,GAAD,EAAMC,QAAN,KAAmB;AAClC,MAAIC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACAF,EAAAA,MAAM,CAACG,IAAP,GAAc,iBAAd;;AAEA,MAAIH,MAAM,CAACI,UAAX,EAAuB;AACnBJ,IAAAA,MAAM,CAACK,kBAAP,GAA4B,YAAY;AACpC,UAAIL,MAAM,CAACI,UAAP,KAAsB,QAAtB,IAAkCJ,MAAM,CAACI,UAAP,KAAsB,UAA5D,EAAwE;AACpEJ,QAAAA,MAAM,CAACK,kBAAP,GAA4B,IAA5B;AACAN,QAAAA,QAAQ;AACX;AACJ,KALD;AAMH,GAPD,MAOO;AACHC,IAAAA,MAAM,CAACM,MAAP,GAAgB,MAAMP,QAAQ,EAA9B;AACH;;AAEDC,EAAAA,MAAM,CAACO,GAAP,GAAaT,GAAb;AACAG,EAAAA,QAAQ,CAACO,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,WAAzC,CAAqDT,MAArD;AACH,CAjBD;;AAmBA,SAASU,gBAAT,CAA0BC,WAA1B,EAAuCC,eAAvC,EAAwD;AACpDhB,EAAAA,YAAY,GAAG,IAAIiB,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,MAAnB,CAA0BC,YAA9B,CACXL,eAAe,CAACM,OADL,EAEX;AAAEC,IAAAA,KAAK,EAAE,CAAC,UAAD,CAAT;AAAuBC,IAAAA,qBAAqB,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX;AAA9C,GAFW,CAAf;AAIAzB,EAAAA,YAAY,CAAC0B,SAAb,CAAuB,CAAC,oBAAD,EAAuB,mBAAvB,CAAvB;AACA1B,EAAAA,YAAY,CAAC2B,WAAb,CAAyB,eAAzB,EAA0C,MACtCC,iBAAiB,CAACb,WAAD,CADrB;AAGH;;AAED,eAAea,iBAAf,CAAiCb,WAAjC,EAA8C;AAC1C,QAAMc,aAAa,GAAG7B,YAAY,CAAC8B,QAAb,EAAtB;AACA,QAAMC,KAAK,GAAGF,aAAa,CAACG,iBAA5B;AACAjB,EAAAA,WAAW,CAACgB,KAAD,CAAX;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYL,aAAZ;AACH;;AAED,SAASM,mBAAT,GAA+B;AAC3B,QAAM,CAACJ,KAAD,EAAQK,QAAR,IAAoBzC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMqB,eAAe,GAAGnB,MAAM,CAAC,IAAD,CAA9B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,UAAU,CACL,uGADK,EAEN,MACAa,gBAAgB,CAACsB,QAAD,EAAWpB,eAAX,CAHV,CAAV;AAKH,GANQ,EAMP,EANO,CAAT;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,EAAE,EAAC,aADP;AAEI,IAAA,GAAG,EAAEA,eAFT;AAGI,IAAA,QAAQ,EAAEqB,KAAK,IAAID,QAAQ,CAACC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAH/B;AAII,IAAA,WAAW,EAAC,cAJhB;AAKI,IAAA,KAAK,EAAER,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAWH;;AAED,eAAeI,mBAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport './SearchLocationInput.scss';\r\nrequire('dotenv').config();\r\nlet autoComplete;\r\n\r\nconst loadScript = (url, callback) => {\r\n    let script = document.createElement(\"script\");\r\n    script.type = \"text/javascript\";\r\n\r\n    if (script.readyState) {\r\n        script.onreadystatechange = function () {\r\n            if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\r\n                script.onreadystatechange = null;\r\n                callback();\r\n            }\r\n        };\r\n    } else {\r\n        script.onload = () => callback();\r\n    }\r\n\r\n    script.src = url;\r\n    document.getElementsByTagName(\"head\")[0].appendChild(script);\r\n};\r\n\r\nfunction handleScriptLoad(updateQuery, autoCompleteRef) {\r\n    autoComplete = new window.google.maps.places.Autocomplete(\r\n        autoCompleteRef.current,\r\n        { types: [\"(cities)\"], componentRestrictions: { country: \"vn\" } }\r\n    );\r\n    autoComplete.setFields([\"address_components\", \"formatted_address\"]);\r\n    autoComplete.addListener(\"place_changed\", () =>\r\n        handlePlaceSelect(updateQuery)\r\n    );\r\n}\r\n\r\nasync function handlePlaceSelect(updateQuery) {\r\n    const addressObject = autoComplete.getPlace();\r\n    const query = addressObject.formatted_address;\r\n    updateQuery(query);\r\n    console.log(addressObject);\r\n}\r\n\r\nfunction SearchLocationInput() {\r\n    const [query, setQuery] = useState(\"\");\r\n    const autoCompleteRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        loadScript(\r\n            `https://maps.googleapis.com/maps/api/js?key=AIzaSyD3r44u0kUzRPhog5wOz3GDC02pOuAzrDA&libraries=places,`,\r\n            () => \r\n            handleScriptLoad(setQuery, autoCompleteRef)\r\n        );\r\n    },[]);\r\n\r\n    return (\r\n        <div className=\"search-location-input\">\r\n            <input\r\n                id=\"input_value\"\r\n                ref={autoCompleteRef}\r\n                onChange={event => setQuery(event.target.value)}\r\n                placeholder=\"Enter a City\"\r\n                value={query}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchLocationInput;"]},"metadata":{},"sourceType":"module"}