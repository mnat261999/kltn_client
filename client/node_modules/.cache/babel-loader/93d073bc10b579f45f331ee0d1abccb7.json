{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kltn\\\\test\\\\social-media\\\\client\\\\src\\\\hoc\\\\auth.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { auth } from '../actions/user_action';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function (ComposedClass, reload) {\n  let adminRoute = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  class AuthenicationCheck extends Component {\n    constructor() {\n      super(...arguments);\n      this.state = {\n        loading: true\n      };\n    }\n\n    //Sau khi render\n    componentDidMount() {\n      //gọi hàm auth trong user_action gửi request đến sever lấy dữ liệu về đưa vào payload\n      //hàm auth trả về action -> dispatch action đến userreducer này để cập nhật lại store\n      this.props.dispatch(auth()).then(respond => {\n        //Lấy userData từ trong props của class AuthenicationCheck\n        let user = this.props.user.userData; // console.log(this.props.user);\n        //Kiểm tra nếu isAuth false là thì trở lại trang đăng nhập\n\n        if (!user.isAuth) {\n          if (reload) {\n            if (adminRoute) {\n              this.props.history.push(adminRoute);\n            } else {\n              this.props.history.push('/register_login');\n            }\n          }\n        } //nếu isAuth true là thì dẫn vào trang newfeed\n        else {\n          //Là trang của admin\n          if (adminRoute != null) {\n            //ng dùng k phải admin chuyển qua trang đăng nhập của admin\n            if (!user.isAdmin) {\n              if (reload === true) {\n                this.props.history.push(\"/Newfeed\");\n              }\n            }\n\n            if (reload === false) {\n              this.props.history.push('/Admin/Dashboard');\n            }\n          } else {\n            if (user.isAdmin) {\n              this.props.history.push('/Admin/Dashboard');\n            }\n\n            if (reload === false) {\n              this.props.history.push('/Newfeed');\n            }\n          }\n        }\n\n        this.setState({\n          loading: false\n        });\n      });\n    }\n\n    render() {\n      if (this.state.loading) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main_loader\",\n          style: {\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)'\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n            style: {\n              color: '#5477D5'\n            },\n            thickness: 7\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this);\n      } else {\n        //this.props.user là prop của class AuthenticationCheck\n        //{...this.props} để copy luôn các state loading của class AuthenticationCheck\n        return /*#__PURE__*/_jsxDEV(ComposedClass, { ...this.props,\n          user: this.props.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 23\n        }, this);\n      }\n    }\n\n  } //state trong hàm này là state trong store của redux\n  //Hàm này lấy state của reducer user trong store đưa vào làm prop của class AuthenicationCheck\n\n\n  function mapStateToProps(state) {\n    return {\n      user: state.user\n    };\n  }\n\n  return connect(mapStateToProps)(AuthenicationCheck);\n}","map":{"version":3,"names":["React","Component","connect","auth","CircularProgress","ComposedClass","reload","adminRoute","AuthenicationCheck","state","loading","componentDidMount","props","dispatch","then","respond","user","userData","isAuth","history","push","isAdmin","setState","render","position","top","left","transform","color","mapStateToProps"],"sources":["D:/Kltn/test/social-media/client/src/hoc/auth.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {auth} from '../actions/user_action';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nexport default function(ComposedClass,reload,adminRoute = null){\r\n    \r\n    class AuthenicationCheck extends Component {\r\n        \r\n        state={\r\n            loading: true,\r\n        }\r\n        \r\n        //Sau khi render\r\n        componentDidMount(){\r\n            //gọi hàm auth trong user_action gửi request đến sever lấy dữ liệu về đưa vào payload\r\n            //hàm auth trả về action -> dispatch action đến userreducer này để cập nhật lại store\r\n            this.props.dispatch(auth()).then(respond =>{\r\n\r\n                //Lấy userData từ trong props của class AuthenicationCheck\r\n                let user = this.props.user.userData;\r\n               // console.log(this.props.user);\r\n               //Kiểm tra nếu isAuth false là thì trở lại trang đăng nhập\r\n                if(!user.isAuth){\r\n                    if(reload){\r\n                        if(adminRoute){\r\n                            this.props.history.push(adminRoute);    \r\n                        }else{\r\n                            this.props.history.push('/register_login');\r\n                        }\r\n                    }\r\n                }\r\n                //nếu isAuth true là thì dẫn vào trang newfeed\r\n                else\r\n                {\r\n                    //Là trang của admin\r\n                    if(adminRoute != null){\r\n                        //ng dùng k phải admin chuyển qua trang đăng nhập của admin\r\n                        if(!user.isAdmin){\r\n                            if (reload === true) {\r\n                                this.props.history.push(\"/Newfeed\");\r\n                            }\r\n                        }\r\n                        if (reload === false) {\r\n                            this.props.history.push('/Admin/Dashboard');\r\n                        }\r\n                    }else{\r\n                        if (user.isAdmin) {\r\n                            this.props.history.push('/Admin/Dashboard');\r\n                        }\r\n                        if(reload === false){\r\n                            this.props.history.push('/Newfeed');\r\n                        }\r\n                    }\r\n                }\r\n               this.setState({loading:false});\r\n            })\r\n        }\r\n\r\n        render() {\r\n            if(this.state.loading){\r\n                return (\r\n                    <div className=\"main_loader\" style={{\r\n                        position: 'absolute',\r\n                        top: '50%',\r\n                        left: '50%',\r\n                        transform: 'translate(-50%, -50%)'\r\n                    }}>\r\n                        <CircularProgress style={{ color: '#5477D5' }} thickness={7} />\r\n                    </div>\r\n                );\r\n            }else{\r\n                //this.props.user là prop của class AuthenticationCheck\r\n                //{...this.props} để copy luôn các state loading của class AuthenticationCheck\r\n               return <ComposedClass {...this.props} user={this.props.user}/>\r\n            }\r\n        }\r\n    }\r\n\r\n    //state trong hàm này là state trong store của redux\r\n    //Hàm này lấy state của reducer user trong store đưa vào làm prop của class AuthenicationCheck\r\n    function mapStateToProps(state){\r\n        return {\r\n            user: state.user,\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(AuthenicationCheck);\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,IAAR,QAAmB,wBAAnB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;;AAGA,eAAe,UAASC,aAAT,EAAuBC,MAAvB,EAAgD;EAAA,IAAlBC,UAAkB,uEAAL,IAAK;;EAE3D,MAAMC,kBAAN,SAAiCP,SAAjC,CAA2C;IAAA;MAAA;MAAA,KAEvCQ,KAFuC,GAEjC;QACFC,OAAO,EAAE;MADP,CAFiC;IAAA;;IAMvC;IACAC,iBAAiB,GAAE;MACf;MACA;MACA,KAAKC,KAAL,CAAWC,QAAX,CAAoBV,IAAI,EAAxB,EAA4BW,IAA5B,CAAiCC,OAAO,IAAG;QAEvC;QACA,IAAIC,IAAI,GAAG,KAAKJ,KAAL,CAAWI,IAAX,CAAgBC,QAA3B,CAHuC,CAIxC;QACA;;QACC,IAAG,CAACD,IAAI,CAACE,MAAT,EAAgB;UACZ,IAAGZ,MAAH,EAAU;YACN,IAAGC,UAAH,EAAc;cACV,KAAKK,KAAL,CAAWO,OAAX,CAAmBC,IAAnB,CAAwBb,UAAxB;YACH,CAFD,MAEK;cACD,KAAKK,KAAL,CAAWO,OAAX,CAAmBC,IAAnB,CAAwB,iBAAxB;YACH;UACJ;QACJ,CARD,CASA;QATA,KAWA;UACI;UACA,IAAGb,UAAU,IAAI,IAAjB,EAAsB;YAClB;YACA,IAAG,CAACS,IAAI,CAACK,OAAT,EAAiB;cACb,IAAIf,MAAM,KAAK,IAAf,EAAqB;gBACjB,KAAKM,KAAL,CAAWO,OAAX,CAAmBC,IAAnB,CAAwB,UAAxB;cACH;YACJ;;YACD,IAAId,MAAM,KAAK,KAAf,EAAsB;cAClB,KAAKM,KAAL,CAAWO,OAAX,CAAmBC,IAAnB,CAAwB,kBAAxB;YACH;UACJ,CAVD,MAUK;YACD,IAAIJ,IAAI,CAACK,OAAT,EAAkB;cACd,KAAKT,KAAL,CAAWO,OAAX,CAAmBC,IAAnB,CAAwB,kBAAxB;YACH;;YACD,IAAGd,MAAM,KAAK,KAAd,EAAoB;cAChB,KAAKM,KAAL,CAAWO,OAAX,CAAmBC,IAAnB,CAAwB,UAAxB;YACH;UACJ;QACJ;;QACF,KAAKE,QAAL,CAAc;UAACZ,OAAO,EAAC;QAAT,CAAd;MACF,CAvCD;IAwCH;;IAEDa,MAAM,GAAG;MACL,IAAG,KAAKd,KAAL,CAAWC,OAAd,EAAsB;QAClB,oBACI;UAAK,SAAS,EAAC,aAAf;UAA6B,KAAK,EAAE;YAChCc,QAAQ,EAAE,UADsB;YAEhCC,GAAG,EAAE,KAF2B;YAGhCC,IAAI,EAAE,KAH0B;YAIhCC,SAAS,EAAE;UAJqB,CAApC;UAAA,uBAMI,QAAC,gBAAD;YAAkB,KAAK,EAAE;cAAEC,KAAK,EAAE;YAAT,CAAzB;YAA+C,SAAS,EAAE;UAA1D;YAAA;YAAA;YAAA;UAAA;QANJ;UAAA;UAAA;UAAA;QAAA,QADJ;MAUH,CAXD,MAWK;QACD;QACA;QACD,oBAAO,QAAC,aAAD,OAAmB,KAAKhB,KAAxB;UAA+B,IAAI,EAAE,KAAKA,KAAL,CAAWI;QAAhD;UAAA;UAAA;UAAA;QAAA,QAAP;MACF;IACJ;;EArEsC,CAFgB,CA0E3D;EACA;;;EACA,SAASa,eAAT,CAAyBpB,KAAzB,EAA+B;IAC3B,OAAO;MACHO,IAAI,EAAEP,KAAK,CAACO;IADT,CAAP;EAGH;;EAED,OAAOd,OAAO,CAAC2B,eAAD,CAAP,CAAyBrB,kBAAzB,CAAP;AACH"},"metadata":{},"sourceType":"module"}