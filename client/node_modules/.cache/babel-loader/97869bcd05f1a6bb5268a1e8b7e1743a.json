{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kltn\\\\test\\\\social-media\\\\client\\\\src\\\\components\\\\Message\\\\group.js\";\nimport React, { Component, useEffect, useState } from 'react';\nimport Layout from '../../hoc/layout';\nimport { connect } from 'react-redux';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Portal from '@material-ui/core/Portal';\nimport { getMessage, getConversation, sendMessage, seenMessage, sendimg } from '../../../src/actions/message_action';\nimport './Message.scss';\nimport { update, generateData } from '../ultils/Form/FormActions';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Settings, Dots, Heart, Pencil, Search, Photo, Sticker, Send, Ghost, Edit, Circle, CircleCheck, User, Users, Point } from 'tabler-icons-react';\nimport SearchBar from './SearchBar/index';\nimport Pusher from 'pusher-js';\nimport { Button, Dialog, LinearProgress, Checkbox, Avatar } from '@material-ui/core';\nimport { AvatarGroup } from '@material-ui/lab';\nimport moment from 'moment';\n\nclass Group extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message_box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, this.props.messages ? this.props.messages.grouplist ? this.props.messages.grouplist.map(con => {\n      return con.disabledBy.includes(this.props.yourProfile._id) ? '' : /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => {\n          this.props.seenGroupMess(con._id);\n          console.log('clicked');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        className: \"link\",\n        to: `/message/inbox/${con._id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: con.seenBy.includes(this.props.yourProfile._id) ? \"row no-gutters message_contain\" : \"row no-gutters message_contain unseen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-xl-2 col-lg-3 col-md-3 col-sm-3 col-12 avt\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 53\n        }\n      }, con.type == 'personal' ? con.user.map(users => {\n        return users._id == this.props.yourProfile._id ? '' : /*#__PURE__*/React.createElement(\"div\", {\n          className: \"avatar-circle-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 120\n          }\n        }, \" \", /*#__PURE__*/React.createElement(\"img\", {\n          src: users.avt,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 158\n          }\n        }));\n      }) : con.groupimg ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"avatar-circle-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 81\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"img\", {\n        src: con.groupimg,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 119\n        }\n      })) : /*#__PURE__*/React.createElement(\"div\", {\n        class: \"avatar-circle-group avatar-circle-group-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 69\n        }\n      }, con.user.slice(0, 1).map(users => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 85\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          class: \"avatar avatar-md avatar-1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 89\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: users.avt,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 93\n          }\n        })));\n      }), con.user.slice(1, 2).map(users => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 85\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          class: \"avatar avatar-md avatar-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 89\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: users.avt,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 93\n          }\n        })));\n      }), con.user.slice(2, 3).map(users => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 85\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          class: \"avatar avatar-md avatar-3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 89\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: users.avt,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 93\n          }\n        })));\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-xl-10 col-lg-9 col-md-9 col-sm-9 col-12 message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 53\n        }\n      }, con.type == 'personal' ? con.user.map(users => {\n        return users._id == this.props.yourProfile._id ? '' : /*#__PURE__*/React.createElement(\"div\", {\n          className: \"titlegroup\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 120\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 77\n          }\n        }, users.userName), /*#__PURE__*/React.createElement(Point, {\n          className: \"seen_dot\",\n          visibility: con.seenBy.includes(this.props.yourProfile._id) ? \"hidden\" : \"\",\n          size: 28,\n          strokeWidth: 0,\n          fill: \"#7166F9\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 77\n          }\n        }));\n      }) : con.title ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"titlegroup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 73\n        }\n      }, con.title), /*#__PURE__*/React.createElement(Point, {\n        className: \"seen_dot\",\n        visibility: con.seenBy.includes(this.props.yourProfile._id) ? \"hidden\" : \"\",\n        size: 28,\n        strokeWidth: 0,\n        fill: \"#7166F9\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 73\n        }\n      })) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"titlegroup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 73\n        }\n      }, con.user.slice(0, 3).map(users => {\n        return users.userName;\n      }), \",...\"), /*#__PURE__*/React.createElement(Point, {\n        className: \"seen_dot\",\n        visibility: con.seenBy.includes(this.props.yourProfile._id) ? \"hidden\" : \"\",\n        size: 24,\n        strokeWidth: 0,\n        fill: \"#7166F9\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 73\n        }\n      })), /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 57\n        }\n      }, \" \", con.lastMess ? con.lastMess.type == 'event' ? '' : con.lastMess.sentBy._id == this.props.yourProfile._id ? 'Bạn: ' : con.lastMess.sentBy.userName + ': ' : '', con.lastMess ? con.lastMess.type == 'img' ? 'Đã gửi một hình ảnh' : con.lastMess.type == 'sticker' ? 'Đã gửi một nhãn dán' : con.lastMess.type == 'replyWithReaction' ? 'Đã phản hồi câu chuyện' : con.lastMess.content : ''), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 57\n        }\n      }, moment(con.lastMess ? con.lastMess.createdAt : '').fromNow(), \" \")))));\n    }) : '' : '');\n  }\n\n}\n\nexport default Group;","map":{"version":3,"sources":["D:/Kltn/test/social-media/client/src/components/Message/group.js"],"names":["React","Component","useEffect","useState","Layout","connect","Skeleton","Portal","getMessage","getConversation","sendMessage","seenMessage","sendimg","update","generateData","Link","withRouter","Settings","Dots","Heart","Pencil","Search","Photo","Sticker","Send","Ghost","Edit","Circle","CircleCheck","User","Users","Point","SearchBar","Pusher","Button","Dialog","LinearProgress","Checkbox","Avatar","AvatarGroup","moment","Group","render","props","messages","grouplist","map","con","disabledBy","includes","yourProfile","_id","seenGroupMess","console","log","seenBy","type","user","users","avt","groupimg","slice","userName","title","lastMess","sentBy","content","createdAt","fromNow"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\r\nimport Layout from '../../hoc/layout';\r\nimport { connect } from 'react-redux';\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\nimport Portal from '@material-ui/core/Portal';\r\nimport { getMessage, getConversation, sendMessage, seenMessage, sendimg } from '../../../src/actions/message_action'\r\nimport './Message.scss';\r\nimport { update, generateData } from '../ultils/Form/FormActions';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Settings, Dots, Heart, Pencil, Search, Photo, Sticker, Send, Ghost, Edit, Circle, CircleCheck, User, Users, Point } from 'tabler-icons-react';\r\nimport SearchBar from './SearchBar/index'\r\nimport Pusher from 'pusher-js'\r\nimport { Button, Dialog, LinearProgress, Checkbox, Avatar } from '@material-ui/core';\r\nimport { AvatarGroup } from '@material-ui/lab';\r\n\r\nimport moment from 'moment';\r\n\r\nclass Group extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"message_box\">\r\n\r\n                {\r\n                    this.props.messages ?\r\n                        this.props.messages.grouplist ?\r\n                            this.props.messages.grouplist.map(con => {\r\n                                return (\r\n                                    con.disabledBy.includes(this.props.yourProfile._id)?'':\r\n                                    <div onClick={() => { this.props.seenGroupMess(con._id); console.log('clicked') }}>\r\n                                        {\r\n                                            <Link className=\"link\" to={`/message/inbox/${con._id}`}>\r\n\r\n                                                <div className={con.seenBy.includes(this.props.yourProfile._id) ? \"row no-gutters message_contain\" : \"row no-gutters message_contain unseen\"}>\r\n                                                    <div className=\"col-xl-2 col-lg-3 col-md-3 col-sm-3 col-12 avt\">\r\n                                                        {\r\n                                                            con.type == 'personal' ?\r\n                                                                con.user.map(users => {\r\n                                                                    return (\r\n                                                                        users._id == this.props.yourProfile._id ? '' : <div className=\"avatar-circle-group\"> <img src={users.avt}></img></div>\r\n                                                                    )\r\n\r\n                                                                }) :\r\n                                                                (con.groupimg ? <div className=\"avatar-circle-group\"> <img src={con.groupimg}></img></div> :\r\n                                                                    <div class=\"avatar-circle-group avatar-circle-group-3\">\r\n                                                                        {\r\n                                                                            con.user.slice(0, 1).map(users => {\r\n                                                                                return (\r\n                                                                                    <div>\r\n                                                                                        <div class=\"avatar avatar-md avatar-1\">\r\n                                                                                            <img src={users.avt} />\r\n                                                                                        </div>\r\n\r\n\r\n                                                                                    </div>\r\n\r\n\r\n                                                                                )\r\n                                                                            })\r\n                                                                        }\r\n                                                                        {\r\n                                                                            con.user.slice(1, 2).map(users => {\r\n                                                                                return (\r\n                                                                                    <div>\r\n\r\n\r\n                                                                                        <div class=\"avatar avatar-md avatar-2\">\r\n                                                                                            <img src={users.avt} />\r\n                                                                                        </div>\r\n\r\n                                                                                    </div>\r\n\r\n\r\n                                                                                )\r\n                                                                            })\r\n                                                                        }\r\n                                                                        {\r\n                                                                            con.user.slice(2, 3).map(users => {\r\n                                                                                return (\r\n                                                                                    <div>\r\n\r\n\r\n                                                                                        <div class=\"avatar avatar-md avatar-3\">\r\n                                                                                            <img src={users.avt} />\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n\r\n\r\n                                                                                )\r\n                                                                            })\r\n                                                                        }\r\n                                                                    </div>)\r\n                                                        }\r\n\r\n                                                    </div>\r\n                                                    <div className=\"col-xl-10 col-lg-9 col-md-9 col-sm-9 col-12 message\">\r\n\r\n                                                        {\r\n                                                            con.type == 'personal' ?\r\n                                                                con.user.map(users => {\r\n                                                                    return (\r\n                                                                        users._id == this.props.yourProfile._id ? '' : <div className=\"titlegroup\">\r\n\r\n                                                                            <h2>{users.userName}</h2>\r\n                                                                            <Point className=\"seen_dot\" visibility={con.seenBy.includes(this.props.yourProfile._id) ? \"hidden\" : \"\"} size={28} strokeWidth={0} fill=\"#7166F9\"></Point>\r\n                                                                        </div>\r\n                                                                    )\r\n\r\n                                                                }) :\r\n                                                                con.title ?\r\n                                                                    <div className=\"titlegroup\">\r\n\r\n                                                                        <h2>{con.title}</h2>\r\n                                                                        <Point className=\"seen_dot\" visibility={con.seenBy.includes(this.props.yourProfile._id) ? \"hidden\" : \"\"} size={28} strokeWidth={0} fill=\"#7166F9\"></Point>\r\n                                                                    </div>\r\n                                                                    :\r\n                                                                    <div className=\"titlegroup\">\r\n                                                                        <h2>\r\n                                                                            {\r\n                                                                                con.user.slice(0, 3).map(users => {\r\n                                                                                    return (\r\n\r\n                                                                                        users.userName\r\n\r\n                                                                                    )\r\n                                                                                }\r\n\r\n                                                                                )\r\n\r\n                                                                            },...\r\n                                                                </h2>\r\n                                                                        <Point className=\"seen_dot\" visibility={con.seenBy.includes(this.props.yourProfile._id) ? \"hidden\" : \"\"} size={24} strokeWidth={0} fill=\"#7166F9\"></Point>\r\n                                                                    </div>\r\n                                                        }\r\n                                                        {/* <div className=\"col-xl-3 col-sm-3 col-3  info\">\r\n                                                                                    <h6><Point visibility=\"hidden\" size={24} strokeWidth={0} fill=\"#7166F9\"></Point></h6>\r\n                                                                                \r\n                                                                                    \r\n                                                                                   \r\n                                                                                </div> */}\r\n\r\n                                                        <h6> {con.lastMess ? (con.lastMess.type == 'event' ? '' : \r\n                                                        con.lastMess.sentBy._id == this.props.yourProfile._id ? 'Bạn: ' : \r\n                                                        con.lastMess.sentBy.userName + ': ') : ''}   \r\n                                                        {con.lastMess ? con.lastMess.type == 'img' ? 'Đã gửi một hình ảnh' : \r\n                                                        con.lastMess.type == 'sticker' ? 'Đã gửi một nhãn dán' :\r\n                                                        con.lastMess.type == 'replyWithReaction' ? 'Đã phản hồi câu chuyện' :  \r\n                                                        con.lastMess.content : ''}</h6>\r\n                                                        <h5>{moment(con.lastMess ? con.lastMess.createdAt : '').fromNow()} </h5>\r\n                                                    </div>\r\n                                                  \r\n                                                 \r\n                                                </div>\r\n                                               \r\n                                            </Link>\r\n\r\n\r\n\r\n                                        }\r\n                                      \r\n                                    </div>\r\n                                    \r\n                                    )\r\n                            }) : ''\r\n                        : ''\r\n                }\r\n                \r\n            </div >\r\n\r\n        )\r\n    }\r\n}\r\nexport default Group"]},"metadata":{},"sourceType":"module"}