{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kltn\\\\test\\\\social-media\\\\client\\\\src\\\\components\\\\Profile\\\\index.js\";\nimport React, { Component } from 'react';\nimport Layout from '../../hoc/layout';\nimport { connect } from 'react-redux';\nimport { findProfile, follow, unfollow, findTagged, findPosted, findSaved, auth, blockUser, requestfollow, undorequestfollow } from '../../../src/actions/user_action';\nimport { findPersonal } from '../../../src/actions/message_action';\nimport { getHighLightStory, getAllStories, createHighLightStory } from '../../actions/user_action';\nimport './profile.scss';\nimport { GridDots, Tag, Dots, CircleX, Heart, Message2, Bookmark } from 'tabler-icons-react';\nimport HighLightStory from './HighLightStory';\nimport StoryDisplay from './StoryDisplay';\nimport { Button, withTheme, Snackbar, SnackbarMessage, Dialog } from '@material-ui/core';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { Link, withRouter } from 'react-router-dom';\nimport FormField from '../ultils/Form/FormField';\nimport { populateOptionFields, update, ifFormValid, generateData, resetFields } from '../ultils/Form/FormActions';\nimport Slide from '@material-ui/core/Slide';\nimport Report from '../Report/Report';\nimport PostRow from './post';\nimport { getPolicy } from '../../actions/policy_actions';\nimport moment from 'moment';\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }\n  }));\n});\n\nclass Profile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      setfollowerDiaglog: false,\n      setfollowingDiaglog: false,\n      setSnackfollow: false,\n      setSnack: false,\n      setDialog: false,\n      setType: 'posted',\n      setMessage: '',\n      severity: '',\n      followerslist: [],\n      followings: [],\n      storyDialog: false,\n      storyIndex: -1,\n      storyUploading: false,\n      createHighlightStoryDiaglog: false,\n      highLightStory: [],\n      formSuccess: false,\n      formMessage: \"\",\n      formData: {\n        name: {\n          element: 'input',\n          value: '',\n          config: {\n            placeholder: 'Tên',\n            label: 'Tên',\n            name: 'name',\n            options: []\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        }\n      },\n      setSnack: false,\n      addStorySuccess: false,\n      addStoryStatus: false,\n      reportStatus: false,\n      reportSuccess: false,\n      SnackMess: \"\",\n      isReportFormShow: false,\n      reportData: {},\n      setfollowerDiaglog: false,\n      alertFunctionIsRestricted: false,\n      restrictedFunction: {}\n    };\n\n    this.handleSnackBar = (mess, res) => {\n      console.log(mess, res);\n      this.setState({\n        reportStatus: true,\n        SnackMess: mess,\n        reportSuccess: res\n      });\n    };\n\n    this.closeReportForm = () => {\n      this.setState({\n        isReportFormShow: false,\n        reportData: {}\n      });\n    };\n\n    this.handleClickfollow = async user => {\n      if (user.privateMode === true) {\n        await this.props.dispatch(requestfollow(user._id)).then(response => {\n          this.setState({\n            setSnackfollow: true,\n            setMessage: 'Đã gửi yêu cầu',\n            severity: 'success'\n          });\n          this.props.dispatch(findProfile(this.props.match.params.id));\n        });\n      } else {\n        await this.props.dispatch(follow(user._id)).then(response => {\n          if (response.payload.restricted) {\n            console.log(response.payload);\n            this.setState({\n              alertFunctionIsRestricted: true,\n              restrictedFunction: response.payload.restrictedFunction\n            });\n          } else {\n            this.props.dispatch(findProfile(this.props.match.params.id));\n            this.props.dispatch(auth());\n            this.setState({\n              setSnackfollow: true,\n              setMessage: 'Đã theo dõi',\n              severity: 'success'\n            });\n          }\n        });\n      }\n    };\n\n    this.handleClickunfollow = async user => {\n      if (user.request.includes(this.props.user.userData ? this.props.user.userData._id : '')) {\n        await this.props.dispatch(undorequestfollow(user._id)).then(response => {\n          this.setState({\n            setSnack: true,\n            setMessage: 'Đã hủy yêu cầu theo dõi',\n            severity: 'warning'\n          });\n          this.props.dispatch(findProfile(this.props.match.params.id));\n        });\n      } else {\n        await this.props.dispatch(unfollow(user._id)).then(response => {\n          if (response.payload.restricted) {\n            console.log(response.payload);\n            this.setState({\n              alertFunctionIsRestricted: true,\n              restrictedFunction: response.payload.restrictedFunction\n            });\n          } else {\n            this.props.dispatch(findProfile(this.props.match.params.id));\n            this.props.dispatch(auth());\n            this.setState({\n              setSnackfollow: true,\n              setMessage: 'Đã bỏ theo dõi',\n              severity: 'success'\n            });\n          }\n        });\n      }\n    };\n\n    this.setDisplayIndex = index => {\n      this.setState({\n        currentDisplay: index,\n        isStoryPageShow: true\n      });\n    };\n\n    this.openCreateHighlightStoryDiaglog = () => {\n      this.setState({\n        createHighlightStoryDiaglog: true\n      });\n    };\n\n    this.openEditor = () => {};\n\n    this.handleType = type => {\n      if (type == 'tagged') {\n        this.setState({\n          setType: type\n        });\n        this.props.dispatch(findTagged(this.props.user.userProfile ? this.props.user.userProfile._id : 0));\n      }\n\n      if (type == 'posted') {\n        this.setState({\n          setType: type\n        });\n        this.props.dispatch(findPosted(this.props.user.userProfile ? this.props.user.userProfile._id : 0));\n      }\n\n      if (type == 'saved') {\n        this.setState({\n          setType: type\n        });\n        this.props.dispatch(findSaved(this.props.user.userProfile ? this.props.user.userProfile._id : 0));\n      }\n    };\n\n    this.showDialog = () => {\n      this.setState({\n        setDialog: true\n      });\n    };\n\n    this.countNumberOfPost = () => {\n      const postlist = this.props.user.postlist;\n      let cnt = 0;\n      postlist.forEach(item => {\n        if (item.hidden == false) cnt += 1;\n      });\n      return cnt;\n    };\n\n    this.displayStory = () => {\n      this.setState({\n        storyDialog: true\n      });\n    };\n\n    this.setIndex = index => {\n      this.setState({\n        storyIndex: index\n      });\n    };\n\n    this.openDialog = () => {\n      this.setState({\n        storyDialog: true\n      });\n    };\n\n    this.updateForm = element => {\n      const newFormdata = update(element, this.state.formData, 'story_name');\n\n      if (newFormdata.name.value.trim() != \"\") {\n        this.setState({\n          formSuccess: true,\n          formData: newFormdata\n        });\n      } else {\n        this.setState({\n          formSuccess: false,\n          formData: newFormdata\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    const userID = this.props.match.params.id;\n    this.props.dispatch(findProfile(userID)).then(response => {\n      console.log(response);\n\n      if (response.payload.NotFound) {\n        this.props.history.push('/notfound');\n      }\n    });\n    this.props.dispatch(findPosted(userID));\n    this.props.dispatch(getHighLightStory(userID));\n    this.props.dispatch(getAllStories());\n    this.props.dispatch(getPolicy());\n  }\n\n  showReportForm(type) {\n    return /*#__PURE__*/React.createElement(Report, {\n      isReportFormShow: this.state.isReportFormShow,\n      reportData: this.state.reportData,\n      handleSnackBar: (mess, res) => {\n        this.handleSnackBar(mess, res);\n      },\n      list: this.props.policies.policyList,\n      closeReportForm: () => this.closeReportForm(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 16\n      }\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.location.key !== this.props.location.key) {\n      const userID = this.props.match.params.id;\n      console.log(userID);\n      this.props.dispatch(findProfile(userID)).then(response => {\n        console.log(response);\n\n        if (response.payload.NotFound) {\n          this.props.history.push('/notfound');\n        }\n      });\n      this.props.dispatch(findPosted(userID));\n      this.props.dispatch(getHighLightStory(userID));\n      this.setState({\n        setfollowerDiaglog: false,\n        setType: 'posted',\n        setfollowingDiaglog: false\n      });\n    }\n  }\n\n  pullStory(item) {\n    let newhighLightStory = [...this.state.highLightStory];\n    newhighLightStory.splice(this.state.highLightStory.indexOf(item), 1);\n    console.log(newhighLightStory);\n    this.setState({\n      highLightStory: newhighLightStory\n    });\n  }\n\n  pushStory(item) {\n    let newhighLightStory = [...this.state.highLightStory];\n    newhighLightStory.push(item);\n    console.log(newhighLightStory);\n    this.setState({\n      highLightStory: newhighLightStory\n    });\n  }\n\n  render() {\n    const postlist = this.props.user.postlist;\n    const typelist = this.props.user.typelist;\n    const userProfile = this.props.user.userProfile;\n    const yourProfile = this.props.user.userData;\n    const storyList = this.props.user.storyList;\n    return /*#__PURE__*/React.createElement(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile_wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row pro_header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-sm-3 col-3 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 33\n      }\n    }, userProfile ? /*#__PURE__*/React.createElement(\"img\", {\n      src: userProfile.avt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 41\n      }\n    }) : /*#__PURE__*/React.createElement(Skeleton, {\n      variant: \"circle\",\n      width: 160,\n      height: 160,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-1 col-lg-1 col-md-1 col-sm-1 col-sm-1 col-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-8 col-lg-8 col-md-8 col-sm-8 col-sm-8 col-8 action_contain\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"prolile_header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 37\n      }\n    }, userProfile ? userProfile.userName : /*#__PURE__*/React.createElement(Skeleton, {\n      variant: \"rect\",\n      width: 100,\n      height: 36,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 97\n      }\n    })), yourProfile ? yourProfile._id == this.props.match.params.id ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"follow_options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/profilesettings`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 80\n      }\n    }, \"Ch\\u1EC9nh s\\u1EEDa th\\xF4ng tin c\\xE1 nh\\xE2n\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"follow_options\",\n      onClick: async () => {\n        await this.props.dispatch(findPersonal(this.props.match.params.id));\n        await this.props.history.push(`/message/inbox/${this.props.messages.conversationinfo._id}`);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 50\n      }\n    }, \"Nh\\u1EAFn tin\"), userProfile ? userProfile.request.includes(yourProfile._id) ? /*#__PURE__*/React.createElement(Button, {\n      className: \"follow_options\",\n      onClick: () => this.handleClickunfollow(userProfile),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 57\n      }\n    }, \"\\u0110\\xE3 g\\u1EEDi y\\xEAu c\\u1EA7u\") : yourProfile ? yourProfile.followings ? yourProfile.followings.includes(userProfile._id) ? /*#__PURE__*/React.createElement(Button, {\n      className: \"secondary_btn\",\n      onClick: () => this.handleClickunfollow(userProfile),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 57\n      }\n    }, \"\\u0110ang Theo d\\xF5i\") : /*#__PURE__*/React.createElement(Button, {\n      className: \"follow_options\",\n      onClick: () => this.handleClickfollow(userProfile),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 57\n      }\n    }, \"Theo d\\xF5i\") : /*#__PURE__*/React.createElement(Skeleton, {\n      variant: \"rect\",\n      width: 195,\n      height: 40,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 59\n      }\n    }) : /*#__PURE__*/React.createElement(Skeleton, {\n      variant: \"rect\",\n      width: 195,\n      height: 40,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 59\n      }\n    }) : /*#__PURE__*/React.createElement(Skeleton, {\n      variant: \"rect\",\n      width: 195,\n      height: 40,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 58\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.showDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Dots, {\n      size: 24,\n      strokeWidth: 1,\n      color: '#7166F9',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 83\n      }\n    }))) : '', /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      open: this.state.setSnackfollow,\n      onClose: () => this.setState({\n        setSnackfollow: false\n      }),\n      autoHideDuration: 1000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(MuiAlert, {\n      elevation: 6,\n      variant: \"filled\",\n      severity: this.state.severity,\n      message: this.state.setMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 37\n      }\n    }, this.state.setMessage)), /*#__PURE__*/React.createElement(Dialog, {\n      className: \"dialog_wrapper\",\n      onClose: () => this.setState({\n        setDialog: false\n      }),\n      open: this.state.setDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        this.props.dispatch(blockUser(userProfile._id)).then(response => {\n          if (response.payload.success) {\n            this.props.history.push(\"/newfeed\");\n          } else {\n            console.log(\"failllllllllllllll\");\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 41\n      }\n    }, \" Ch\\u1EB7n \"), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        this.setState({\n          isReportFormShow: true,\n          setDialog: false,\n          reportData: {\n            reportType: \"user\",\n            userId: this.props.match.params.id\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 41\n      }\n    }, \" B\\xE1o c\\xE1o \"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile_number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"number_holder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 41\n      }\n    }, postlist ? this.countNumberOfPost() : /*#__PURE__*/React.createElement(Skeleton, {\n      variant: \"rect\",\n      width: 50,\n      height: 30,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 104\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 41\n      }\n    }, \"B\\xE0i vi\\u1EBFt\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"number_holder\",\n      onClick: () => {\n        this.setState({\n          setfollowerDiaglog: true\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 41\n      }\n    }, userProfile ? userProfile.followers ? userProfile.followers.length : 0 : /*#__PURE__*/React.createElement(Skeleton, {\n      variant: \"rect\",\n      width: 50,\n      height: 30,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 141\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 41\n      }\n    }, \"Ng\\u01B0\\u1EDDi theo d\\xF5i\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"number_holder\",\n      onClick: () => {\n        this.setState({\n          setfollowingDiaglog: true\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 41\n      }\n    }, userProfile ? userProfile.followings ? userProfile.followings.length : 0 : /*#__PURE__*/React.createElement(Skeleton, {\n      variant: \"rect\",\n      width: 50,\n      height: 30,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 143\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 41\n      }\n    }, \"\\u0110ang theo d\\xF5i\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 33\n      }\n    }, userProfile ? userProfile.bio : /*#__PURE__*/React.createElement(Skeleton, {\n      variant: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 70\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row highlight-story\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(HighLightStory, {\n      open: this.openEditor,\n      list: this.props.user.highlightStory,\n      storyList: this.props.user.storylist,\n      setIndex: index => {\n        this.setIndex(index);\n      },\n      openDialog: this.openDialog,\n      openCreateHighlightStoryDiaglog: this.openCreateHighlightStoryDiaglog,\n      createButton: yourProfile._id == this.props.match.params.id ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 29\n      }\n    }), this.props.user.highlightStory ? /*#__PURE__*/React.createElement(Dialog, {\n      className: \"story-display-wrapper\",\n      onClose: () => this.setState({\n        storyDialog: false\n      }),\n      open: this.state.storyDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(StoryDisplay, {\n      story: this.props.user.highlightStory[this.state.storyIndex],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 37\n      }\n    })) : this.state.storyIndex), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row divide_type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 33\n      }\n    }, this.state.setType == 'posted' ? /*#__PURE__*/React.createElement(Button, {\n      className: \"photo_type\",\n      onClick: () => this.handleType('posted'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(GridDots, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 49\n      }\n    }, \"\\u0110\\xC3 \\u0110\\u0102NG\")) : /*#__PURE__*/React.createElement(Button, {\n      className: \"photo_type diselected\",\n      onClick: () => this.handleType('posted'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(GridDots, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 49\n      }\n    }, \"\\u0110\\xC3 \\u0110\\u0102NG\"))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 33\n      }\n    }, this.state.setType == 'tagged' ? /*#__PURE__*/React.createElement(Button, {\n      className: \"photo_type\",\n      onClick: () => this.handleType('tagged'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Tag, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 49\n      }\n    }, \"\\u0110\\u01AF\\u1EE2C G\\u1EAEN TH\\u1EBA\")) : /*#__PURE__*/React.createElement(Button, {\n      className: \"photo_type diselected\",\n      onClick: () => this.handleType('tagged'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Tag, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 49\n      }\n    }, \"\\u0110\\u01AF\\u1EE2C G\\u1EAEN TH\\u1EBA\"))), yourProfile ? yourProfile._id == this.props.match.params.id ? /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 37\n      }\n    }, this.state.setType == 'saved' ? /*#__PURE__*/React.createElement(Button, {\n      className: \"photo_type\",\n      onClick: () => this.handleType('saved'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Bookmark, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 53\n      }\n    }, \"\\u0110\\xC3 L\\u01AFU\")) : /*#__PURE__*/React.createElement(Button, {\n      className: \"photo_type diselected\",\n      onClick: () => this.handleType('saved'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Bookmark, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 53\n      }\n    }, \"\\u0110\\xC3 L\\u01AFU\"))) : '' : '')), yourProfile ? yourProfile._id !== this.props.match.params.id ? this.props.user.userProfile ? this.props.user.userProfile.privateMode === true ? yourProfile.followings.includes(this.props.match.params.id) === false ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-4 col-lg-4 col-md-6 col-sm-6 col-12 image_contain\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-4 col-lg-4 col-md-6 col-sm-6 col-12 image_contain\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 33\n      }\n    }, \"T\\xE0i kho\\u1EA3n ri\\xEAng t\\u01B0 theo d\\xF5i \\u0111\\u1EC3 th\\u1EA5y b\\xE0i vi\\u1EBFt\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-4 col-lg-4 col-md-6 col-sm-6 col-12 image_contain\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 33\n      }\n    })) : /*#__PURE__*/React.createElement(PostRow, {\n      history: this.props.history,\n      typelist: typelist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 25\n      }\n    }) : /*#__PURE__*/React.createElement(PostRow, {\n      history: this.props.history,\n      typelist: typelist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 25\n      }\n    }) : /*#__PURE__*/React.createElement(PostRow, {\n      history: this.props.history,\n      typelist: typelist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 25\n      }\n    }) : /*#__PURE__*/React.createElement(PostRow, {\n      history: this.props.history,\n      typelist: typelist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 25\n      }\n    }) : /*#__PURE__*/React.createElement(PostRow, {\n      history: this.props.history,\n      typelist: typelist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(Dialog, {\n      className: \"dialog_cont\",\n      onClose: () => {\n        this.setState({\n          setfollowerDiaglog: false\n        });\n        this.props.dispatch(findProfile(this.props.match.params.id));\n      },\n      open: this.state.setfollowerDiaglog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dialog_header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 25\n      }\n    }, \"Danh s\\xE1ch theo d\\xF5i\")), userProfile ? userProfile.followers ? userProfile.followers.map(follower => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"follow_list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"list_info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: follower.avt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(Link, {\n        to: `/user/${follower._id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 41\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 77\n        }\n      }, follower.userName))), yourProfile ? yourProfile._id == follower._id ? /*#__PURE__*/React.createElement(Button, {\n        className: \"minibtn\",\n        onClick: () => this.props.history.push(`/user/yourProfile._id`),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 94\n        }\n      }, \" Trang c\\xE1 nh\\xE2n\") : follower.request.includes(yourProfile._id) ? /*#__PURE__*/React.createElement(Button, {\n        className: \"minibtn\",\n        onClick: () => this.handleClickunfollow(follower),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 45\n        }\n      }, \"\\u0110\\xE3 g\\u1EEDi y\\xEAu c\\u1EA7u\") : yourProfile ? yourProfile.followings.includes(follower._id) ? /*#__PURE__*/React.createElement(Button, {\n        className: \"minibtn\",\n        onClick: () => this.handleClickunfollow(follower),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 49\n        }\n      }, \" \\u0110ang theo d\\xF5i\") : /*#__PURE__*/React.createElement(Button, {\n        className: \"minibtn\",\n        onClick: () => this.handleClickfollow(follower),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 49\n        }\n      }, \"Theo d\\xF5i\") : null : null);\n    }) : '' : ''), /*#__PURE__*/React.createElement(Dialog, {\n      className: \"dialog_cont\",\n      onClose: () => {\n        this.setState({\n          setfollowingDiaglog: false\n        });\n        this.props.dispatch(findProfile(this.props.match.params.id));\n      },\n      open: this.state.setfollowingDiaglog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dialog_header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 25\n      }\n    }, \"Danh s\\xE1ch \\u0111ang theo d\\xF5i\")), userProfile ? userProfile.followings ? userProfile.followings.map(following => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"follow_list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"list_info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: following.avt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(Link, {\n        to: `/user/${following._id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 41\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 78\n        }\n      }, following.userName))), yourProfile ? yourProfile._id == following._id ? /*#__PURE__*/React.createElement(Button, {\n        className: \"minibtn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 91\n        }\n      }, \" Trang c\\xE1 nh\\xE2n\") : following.request.includes(yourProfile._id) ? /*#__PURE__*/React.createElement(Button, {\n        className: \"minibtn\",\n        onClick: () => this.handleClickunfollow(following),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 45\n        }\n      }, \"\\u0110\\xE3 g\\u1EEDi y\\xEAu c\\u1EA7u\") : yourProfile ? yourProfile.followings.includes(following._id) ? /*#__PURE__*/React.createElement(Button, {\n        className: \"minibtn\",\n        onClick: () => this.handleClickunfollow(following),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 49\n        }\n      }, \" \\u0110ang theo d\\xF5i\") : /*#__PURE__*/React.createElement(Button, {\n        className: \"minibtn\",\n        onClick: () => this.handleClickfollow(following),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 49\n        }\n      }, \"Theo d\\xF5i\") : null : null);\n    }) : '' : ''), this.props.user.storylist ? /*#__PURE__*/React.createElement(Dialog, {\n      fullWidth: true,\n      maxWidth: \"lg\",\n      className: \"createHighLightStoryForm\",\n      onClose: () => {\n        this.setState({\n          createHighlightStoryDiaglog: false\n        });\n      },\n      open: this.state.createHighlightStoryDiaglog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-3 col-lg-3 no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row no-gutters form-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 37\n      }\n    }, \"Tin n\\u1ED5i b\\u1EADt\"), /*#__PURE__*/React.createElement(FormField, {\n      id: 'name',\n      formData: this.state.formData.name,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-feature\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-cancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 41\n      }\n    }, \"H\\u1EE7y\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: () => {\n        //console.log(this.state.formSuccess,this.state.highLightStory)\n        if (this.state.formSuccess && this.state.highLightStory.length != 0) {\n          let dataToSubmit = {\n            name: this.state.formData.name.value,\n            storyList: [...this.state.highLightStory]\n          };\n          console.log(\"data\", dataToSubmit);\n          this.props.dispatch(createHighLightStory(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              this.setState({\n                addStorySuccess: true,\n                formMessage: \"Thêm thành công\",\n                createHighlightStoryDiaglog: false,\n                addStoryStatus: true\n              });\n            } else {\n              this.setState({\n                addStorySuccess: false,\n                formMessage: \"Lỗi! Vui lòng thử lại :(\",\n                addStoryStatus: true\n              });\n            }\n          });\n        } else {\n          console.log(this.state.formError, this.state.highlightStory);\n          this.setState({\n            addStorySuccess: false,\n            formMessage: \"Vui lòng kiểm tra thông lại thông tin :(\",\n            addStoryStatus: true\n          });\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 41\n      }\n    }, \"Th\\xEAm m\\u1EDBi\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-9 col-lg-9 no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row no-gutters form-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 37\n      }\n    }, this.props.user.storylist.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => {\n          this.state.highLightStory.includes(item._id) ? this.pullStory(item._id) : this.pushStory(item._id);\n        },\n        className: `col-lg-3 no-gutters image-wrapper`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 52\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: `story-item ${this.state.highLightStory.includes(item._id) ? \"story_selected\" : \"unselected_story\"}`,\n        src: item.image.url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 49\n        }\n      }));\n    })))))) : \"loading\", /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      open: this.state.addStoryStatus,\n      onClose: () => this.setState({\n        addStoryStatus: false\n      }),\n      autoHideDuration: 1000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MuiAlert, {\n      elevation: 6,\n      variant: \"filled\",\n      severity: `${this.state.addStorySuccess ? \"success\" : \"warning\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 21\n      }\n    }, this.state.formMessage)), /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      open: this.state.reportStatus,\n      onClose: () => this.setState({\n        reportStatus: false\n      }),\n      autoHideDuration: 3000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(MuiAlert, {\n      elevation: 6,\n      variant: \"filled\",\n      severity: this.state.reportSuccess ? \"success\" : \"warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 21\n      }\n    }, this.state.SnackMess)), this.showReportForm(), /*#__PURE__*/React.createElement(Dialog, {\n      className: \"dialog_cont\",\n      onClose: () => {\n        this.setState({\n          alertFunctionIsRestricted: false\n        });\n      },\n      open: this.state.alertFunctionIsRestricted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dialog_header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 25\n      }\n    }, \"Ba\\u0323n \\u0111a\\u0303 bi\\u0323 ha\\u0323n ch\\xEA\\u0301 ch\\u01B0\\u0301c n\\u0103ng na\\u0300y cho \\u0111\\xEA\\u0301n \", moment(this.state.restrictedFunction.amountOfTime).format(\"L\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    products: state.products,\n    policies: state.policies,\n    messages: state.messages\n  };\n};\n\nexport default connect(mapStateToProps)(withRouter(Profile));","map":{"version":3,"sources":["D:/Kltn/test/social-media/client/src/components/Profile/index.js"],"names":["React","Component","Layout","connect","findProfile","follow","unfollow","findTagged","findPosted","findSaved","auth","blockUser","requestfollow","undorequestfollow","findPersonal","getHighLightStory","getAllStories","createHighLightStory","GridDots","Tag","Dots","CircleX","Heart","Message2","Bookmark","HighLightStory","StoryDisplay","Button","withTheme","Snackbar","SnackbarMessage","Dialog","Skeleton","MuiAlert","Link","withRouter","FormField","populateOptionFields","update","ifFormValid","generateData","resetFields","Slide","Report","PostRow","getPolicy","moment","Transition","forwardRef","props","ref","Profile","state","setfollowerDiaglog","setfollowingDiaglog","setSnackfollow","setSnack","setDialog","setType","setMessage","severity","followerslist","followings","storyDialog","storyIndex","storyUploading","createHighlightStoryDiaglog","highLightStory","formSuccess","formMessage","formData","name","element","value","config","placeholder","label","options","validation","required","valid","touched","validationMessage","showlabel","addStorySuccess","addStoryStatus","reportStatus","reportSuccess","SnackMess","isReportFormShow","reportData","alertFunctionIsRestricted","restrictedFunction","handleSnackBar","mess","res","console","log","setState","closeReportForm","handleClickfollow","user","privateMode","dispatch","_id","then","response","match","params","id","payload","restricted","handleClickunfollow","request","includes","userData","setDisplayIndex","index","currentDisplay","isStoryPageShow","openCreateHighlightStoryDiaglog","openEditor","handleType","type","userProfile","showDialog","countNumberOfPost","postlist","cnt","forEach","item","hidden","displayStory","setIndex","openDialog","updateForm","newFormdata","trim","componentDidMount","userID","NotFound","history","push","showReportForm","policies","policyList","componentDidUpdate","prevProps","location","key","pullStory","newhighLightStory","splice","indexOf","pushStory","render","typelist","yourProfile","storyList","avt","userName","messages","conversationinfo","vertical","horizontal","success","reportType","userId","followers","length","bio","highlightStory","storylist","map","follower","following","dataToSubmit","formError","image","url","amountOfTime","format","mapStateToProps","products"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from '../../hoc/layout';\r\nimport { connect } from 'react-redux';\r\nimport { findProfile, follow, unfollow, findTagged, findPosted, findSaved ,auth, blockUser,requestfollow,undorequestfollow } from '../../../src/actions/user_action'\r\nimport {findPersonal} from '../../../src/actions/message_action'\r\nimport {getHighLightStory,getAllStories,createHighLightStory} from '../../actions/user_action';\r\nimport './profile.scss';\r\nimport { GridDots, Tag, Dots, CircleX, Heart, Message2,Bookmark } from 'tabler-icons-react'\r\nimport HighLightStory from './HighLightStory';\r\nimport StoryDisplay from './StoryDisplay';\r\nimport { Button, withTheme, Snackbar, SnackbarMessage, Dialog } from '@material-ui/core';\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport FormField from '../ultils/Form/FormField';\r\nimport { populateOptionFields, update, ifFormValid, generateData, resetFields } from '../ultils/Form/FormActions';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Report from '../Report/Report';\r\nimport PostRow from './post';\r\nimport { getPolicy } from '../../actions/policy_actions';\r\nimport moment from 'moment';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nclass Profile extends Component {\r\n    state = {\r\n        setfollowerDiaglog: false,\r\n        setfollowingDiaglog: false,\r\n        setSnackfollow:false,\r\n        setSnack: false,\r\n        setDialog: false,\r\n        setType: 'posted',\r\n        setMessage: '',\r\n        severity: '',\r\n        followerslist: [],\r\n        followings: [],\r\n\r\n        storyDialog: false,\r\n        storyIndex: -1,\r\n        storyUploading: false,\r\n\r\n        createHighlightStoryDiaglog: false,\r\n        highLightStory: [],\r\n        \r\n        formSuccess: false,\r\n        formMessage: \"\",\r\n        formData: {\r\n            name: {\r\n                element: 'input',\r\n                value: '',\r\n                config: {\r\n                    placeholder: 'Tên',\r\n                    label: 'Tên',\r\n                    name: 'name',\r\n                    options: [],\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false\r\n            },\r\n        },\r\n\r\n        setSnack: false,\r\n        addStorySuccess: false,\r\n        addStoryStatus: false,\r\n\r\n        reportStatus: false,\r\n        reportSuccess: false,\r\n        SnackMess: \"\",\r\n\r\n        isReportFormShow: false,\r\n        reportData: {},\r\n\r\n        setfollowerDiaglog: false,\r\n        alertFunctionIsRestricted: false,\r\n\r\n        restrictedFunction: {}\r\n    }\r\n    \r\n    componentDidMount() {\r\n        const userID = this.props.match.params.id\r\n        this.props.dispatch(findProfile(userID)).then((response)=>{\r\n            console.log(response)\r\n            if(response.payload.NotFound){\r\n                this.props.history.push('/notfound');\r\n            }\r\n        });\r\n        this.props.dispatch(findPosted(userID))\r\n        this.props.dispatch(getHighLightStory(userID))\r\n        this.props.dispatch(getAllStories());\r\n        this.props.dispatch(getPolicy());\r\n    }\r\n\r\n    showReportForm(type){\r\n        return <Report \r\n            isReportFormShow={this.state.isReportFormShow}\r\n            reportData = {this.state.reportData}\r\n            handleSnackBar={(mess,res) => { this.handleSnackBar(mess,res) }}\r\n            list={this.props.policies.policyList}\r\n            closeReportForm = {()=>this.closeReportForm()}\r\n        />\r\n    }\r\n\r\n    handleSnackBar = (mess,res) => {\r\n        console.log(mess,res);\r\n        this.setState({ reportStatus: true, SnackMess: mess, reportSuccess: res})\r\n    }\r\n\r\n    closeReportForm = () =>{\r\n        this.setState({\r\n            isReportFormShow: false,\r\n            reportData: {},\r\n        }) \r\n    }\r\n\r\n    componentDidUpdate (prevProps) {\r\n        if (prevProps.location.key !== this.props.location.key) {\r\n            const userID = this.props.match.params.id\r\n            console.log(userID)\r\n            this.props.dispatch(findProfile(userID)).then((response)=>{\r\n                console.log(response)\r\n                \r\n                if(response.payload.NotFound){\r\n                    this.props.history.push('/notfound');\r\n                }\r\n            });\r\n            this.props.dispatch(findPosted(userID))\r\n            this.props.dispatch(getHighLightStory(userID));\r\n      \r\n            this.setState({setfollowerDiaglog:false,  setType: 'posted',setfollowingDiaglog:false});\r\n        }\r\n    }\r\n    handleClickfollow = async (user) => {\r\n        if(user.privateMode===true)\r\n        {\r\n            await this.props.dispatch(requestfollow(user._id)).then(response=>{\r\n                this.setState({ setSnackfollow: true, setMessage: 'Đã gửi yêu cầu', severity: 'success' })\r\n                this.props.dispatch(findProfile(this.props.match.params.id))\r\n            })\r\n        }\r\n        else{\r\n            await this.props.dispatch(follow(user._id)).then(response=>{\r\n                if(response.payload.restricted){\r\n                    console.log(response.payload);\r\n                    this.setState({alertFunctionIsRestricted: true, restrictedFunction: response.payload.restrictedFunction})\r\n                }else{\r\n                    this.props.dispatch(findProfile(this.props.match.params.id))\r\n                    this.props.dispatch(auth());\r\n                    this.setState({ setSnackfollow: true, setMessage: 'Đã theo dõi', severity: 'success' })\r\n                }\r\n            })\r\n        }\r\n    \r\n    }\r\n    \r\n    handleClickunfollow = async (user) => {\r\n        if(user.request.includes(this.props.user.userData?this.props.user.userData._id:'')){\r\n            await this.props.dispatch(undorequestfollow(user._id)).then(response=>{\r\n                this.setState({ setSnack: true, setMessage: 'Đã hủy yêu cầu theo dõi', severity: 'warning' })\r\n                this.props.dispatch(findProfile(this.props.match.params.id))\r\n            })\r\n        }\r\n        else{\r\n            await this.props.dispatch(unfollow(user._id)).then(response=>\r\n                {\r\n                    if(response.payload.restricted){\r\n                        console.log(response.payload);\r\n                        this.setState({alertFunctionIsRestricted: true, restrictedFunction: response.payload.restrictedFunction})\r\n                    }else{\r\n                        this.props.dispatch(findProfile(this.props.match.params.id))\r\n                        this.props.dispatch(auth());\r\n                        this.setState({ setSnackfollow: true, setMessage: 'Đã bỏ theo dõi', severity: 'success' })\r\n                    }\r\n                })\r\n        }  \r\n    }\r\n\r\n    setDisplayIndex = (index) => {\r\n        this.setState({\r\n            currentDisplay: index,\r\n            isStoryPageShow: true,\r\n        })\r\n    }\r\n\r\n    openCreateHighlightStoryDiaglog = () =>{\r\n        this.setState({createHighlightStoryDiaglog: true})\r\n    }\r\n\r\n    openEditor = () => {\r\n    }\r\n\r\n    handleType = (type) => {\r\n        if (type == 'tagged') {\r\n            this.setState({ setType: type })\r\n            this.props.dispatch(findTagged(this.props.user.userProfile ? this.props.user.userProfile._id : 0))\r\n        }\r\n        if (type == 'posted') {\r\n            this.setState({ setType: type })\r\n            this.props.dispatch(findPosted(this.props.user.userProfile ? this.props.user.userProfile._id : 0))\r\n        }\r\n        if(type=='saved'){\r\n            this.setState({ setType: type })\r\n            this.props.dispatch(findSaved(this.props.user.userProfile ? this.props.user.userProfile._id : 0))\r\n        }\r\n    }\r\n\r\n    showDialog = () => {\r\n        this.setState({ setDialog: true })\r\n    }\r\n\r\n    countNumberOfPost = () => {\r\n        const postlist = this.props.user.postlist;\r\n        let cnt = 0;\r\n        postlist.forEach(item => {\r\n            if(item.hidden==false) cnt+=1;\r\n        })\r\n        return cnt;\r\n    }\r\n\r\n    displayStory = () =>{\r\n        this.setState({\r\n            storyDialog: true,\r\n        })\r\n    }\r\n\r\n    setIndex = (index) =>{\r\n        this.setState({\r\n            storyIndex: index,\r\n        })\r\n    }\r\n    \r\n    openDialog = () =>{\r\n        this.setState({ storyDialog: true })\r\n    }\r\n\r\n    pullStory(item){\r\n        let newhighLightStory = [...this.state.highLightStory]\r\n        newhighLightStory.splice(this.state.highLightStory.indexOf(item), 1);\r\n        console.log(newhighLightStory);\r\n        this.setState({ highLightStory: newhighLightStory })\r\n    }\r\n\r\n    pushStory(item){\r\n        let newhighLightStory = [...this.state.highLightStory]\r\n        newhighLightStory.push(item);\r\n        console.log(newhighLightStory);\r\n        this.setState({ highLightStory: newhighLightStory })\r\n    }\r\n\r\n    updateForm = (element) => {\r\n        const newFormdata = update(element, this.state.formData, 'story_name');\r\n        if(newFormdata.name.value.trim() != \"\"){\r\n            this.setState({\r\n                formSuccess: true,\r\n                formData: newFormdata\r\n            });\r\n        }else{\r\n            this.setState({\r\n                formSuccess: false,\r\n                formData: newFormdata\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const postlist = this.props.user.postlist\r\n        const typelist = this.props.user.typelist\r\n        const userProfile = this.props.user.userProfile\r\n        const yourProfile = this.props.user.userData\r\n        const storyList = this.props.user.storyList\r\n        \r\n        return (\r\n            <Layout>\r\n                <div className=\"Profile\">\r\n                <div className=\"profile_container\">\r\n                    <div className=\"profile_wrapper\">\r\n                        <div className=\"row pro_header\">\r\n                            <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-sm-3 col-3 \">\r\n                                <div className=\"profile-img\">\r\n                                    {\r\n                                        userProfile ?\r\n                                        <img src={userProfile.avt}></img>:\r\n                                        <Skeleton variant=\"circle\" width={160} height={160} />\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-xl-1 col-lg-1 col-md-1 col-sm-1 col-sm-1 col-1\"></div>\r\n                            <div className=\"col-xl-8 col-lg-8 col-md-8 col-sm-8 col-sm-8 col-8 action_contain\">\r\n                                <div className=\"prolile_header\">\r\n                                    <div className=\"name\">{userProfile ? userProfile.userName : <Skeleton variant=\"rect\" width={100} height={36} /> }</div>\r\n                                    {\r\n                                        yourProfile ? (yourProfile._id == this.props.match.params.id ?\r\n                                            <div>\r\n                                            <Button className=\"follow_options\"><Link to={`/profilesettings`}>Chỉnh sửa thông tin cá nhân</Link></Button>\r\n                                            </div>\r\n                                        :\r\n                                            <div>\r\n                                                 <Button className=\"follow_options\" onClick={async()=>{await this.props.dispatch(findPersonal(this.props.match.params.id)); await this.props.history.push(`/message/inbox/${this.props.messages.conversationinfo._id}`) }}>Nhắn tin</Button>\r\n                                                {\r\n                                                    \r\n                                                        userProfile?userProfile.request.includes(yourProfile._id)?\r\n                                                        <Button className=\"follow_options\" onClick={() => this.handleClickunfollow(userProfile)}>Đã gửi yêu cầu</Button>\r\n                                                        :\r\n                                                        yourProfile ? yourProfile.followings ? yourProfile.followings.includes(userProfile._id) ?\r\n                                                        <Button className=\"secondary_btn\" onClick={() => this.handleClickunfollow(userProfile)}>Đang Theo dõi</Button>\r\n                                                        :\r\n                                                        <Button className=\"follow_options\" onClick={() => this.handleClickfollow(userProfile)}>Theo dõi</Button>\r\n                                                        : <Skeleton variant=\"rect\" width={195} height={40} />\r\n                                                        : <Skeleton variant=\"rect\" width={195} height={40} />\r\n                                                        :<Skeleton variant=\"rect\" width={195} height={40} />\r\n                                                        \r\n                                                }\r\n                                                <Button onClick={this.showDialog}><Dots size={24} strokeWidth={1} color={'#7166F9'}/></Button>\r\n                                            </div>\r\n                                        ):''\r\n                                    }\r\n                                    \r\n                                    <Snackbar\r\n                                        anchorOrigin={{\r\n                                            vertical: 'bottom',\r\n                                            horizontal: 'center'\r\n                                        }}\r\n                                        open={this.state.setSnackfollow}\r\n                                        onClose={() => this.setState({ setSnackfollow: false })}\r\n                                        autoHideDuration={1000}\r\n                                    >\r\n                                    <MuiAlert elevation={6} variant=\"filled\" severity={this.state.severity} message={this.state.setMessage}>{this.state.setMessage}</MuiAlert>\r\n                                    </Snackbar>\r\n                                    <Dialog className=\"dialog_wrapper\" onClose={() => this.setState({ setDialog: false })} open={this.state.setDialog} >\r\n                                        <Button onClick={()=>{\r\n                                            this.props.dispatch(blockUser(userProfile._id)).then(response =>{\r\n                                                if(response.payload.success){\r\n                                                    this.props.history.push(\"/newfeed\");\r\n                                                }else{\r\n                                                    console.log(\"failllllllllllllll\");\r\n                                                }\r\n                                            })\r\n                                        }}> Chặn </Button>\r\n                                        <Button onClick={()=>{this.setState({isReportFormShow: true,\r\n                                                setDialog: false, \r\n                                                reportData: {\r\n                                                    reportType: \"user\",\r\n                                                    userId: this.props.match.params.id,\r\n                                                }\r\n                                            })}}> Báo cáo </Button>\r\n                                    </Dialog>\r\n                                </div>\r\n                                <div className=\"profile_number\">\r\n                                    <div className=\"number_holder\">\r\n                                        <div className=\"number\">{postlist ? this.countNumberOfPost() : <Skeleton variant=\"rect\" width={50} height={30} />}</div>\r\n                                        <div className=\"type\">Bài viết</div>\r\n                                    </div>\r\n                                    <div className=\"number_holder\" onClick={() => { this.setState({ setfollowerDiaglog: true }) }}>\r\n                                        <div className=\"number\">{userProfile ? (userProfile.followers ? userProfile.followers.length : 0) : <Skeleton variant=\"rect\" width={50} height={30} />}</div>\r\n                                        <div className=\"type\">Người theo dõi</div>\r\n                                    </div>\r\n                                    <div className=\"number_holder\" onClick={() => { this.setState({ setfollowingDiaglog: true }) }}>\r\n                                        <div className=\"number\">{userProfile ? (userProfile.followings ? userProfile.followings.length : 0) : <Skeleton variant=\"rect\" width={50} height={30} />}</div>\r\n                                        <div className=\"type\" >Đang theo dõi</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"bio\">\r\n                                    {userProfile ? userProfile.bio : <Skeleton variant=\"text\" />}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row highlight-story\">\r\n                            <HighLightStory \r\n                                open={this.openEditor}\r\n                                list={this.props.user.highlightStory}\r\n                                storyList={this.props.user.storylist}\r\n                                setIndex={(index)=>{this.setIndex(index)}}\r\n                                openDialog={this.openDialog}\r\n                                openCreateHighlightStoryDiaglog={this.openCreateHighlightStoryDiaglog}\r\n                                createButton={ yourProfile._id == this.props.match.params.id ? true : false}\r\n                            />\r\n                            { \r\n                                this.props.user.highlightStory ?\r\n                                <Dialog \r\n                                    className=\"story-display-wrapper\" \r\n                                    onClose={() => this.setState({ storyDialog: false })} \r\n                                    open={this.state.storyDialog} \r\n                                >\r\n                                    <StoryDisplay story={this.props.user.highlightStory[this.state.storyIndex]}/>\r\n                                </Dialog>                                  \r\n                                : this.state.storyIndex \r\n                            }\r\n                        </div>\r\n                        <div className=\"row divide_type\">\r\n                            <ul>\r\n                                <li>\r\n                                    {\r\n                                        this.state.setType == 'posted' ?\r\n                                            <Button className=\"photo_type\" onClick={() => this.handleType('posted')}>\r\n                                                <GridDots size={20} strokeWidth={1} color=\"black\"></GridDots>\r\n                                                <h2>ĐÃ ĐĂNG</h2>\r\n                                            </Button> :\r\n                                            <Button className=\"photo_type diselected\" onClick={() => this.handleType('posted')}>\r\n                                                <GridDots size={20} strokeWidth={1} color=\"black\"></GridDots>\r\n                                                <h2>ĐÃ ĐĂNG</h2>\r\n                                            </Button>\r\n\r\n                                    }\r\n                                </li>\r\n                                <li>\r\n                                    {\r\n                                        this.state.setType == 'tagged' ?\r\n                                            <Button className=\"photo_type\" onClick={() => this.handleType('tagged')}>\r\n                                                <Tag size={20} strokeWidth={1} color=\"black\"></Tag>\r\n                                                <h2>ĐƯỢC GẮN THẺ</h2>\r\n                                            </Button>\r\n                                            :\r\n                                            <Button className=\"photo_type diselected\" onClick={() => this.handleType('tagged')}>\r\n                                                <Tag size={20} strokeWidth={1} color=\"black\"></Tag>\r\n                                                <h2>ĐƯỢC GẮN THẺ</h2>\r\n                                            </Button>\r\n                                    }\r\n                                </li>\r\n                                {\r\n                                        yourProfile ? (yourProfile._id == this.props.match.params.id ?\r\n                                    <li>\r\n                                        {\r\n                                            this.state.setType == 'saved' ?\r\n                                                <Button className=\"photo_type\" onClick={() => this.handleType('saved')}>\r\n                                                    <Bookmark size={20} strokeWidth={1} color=\"black\"></Bookmark>\r\n                                                    <h2>ĐÃ LƯU</h2>\r\n                                                </Button>\r\n                                                :\r\n                                                <Button className=\"photo_type diselected\" onClick={() => this.handleType('saved')}>\r\n                                                    <Bookmark size={20} strokeWidth={1} color=\"black\"></Bookmark>\r\n                                                    <h2>ĐÃ LƯU</h2>\r\n                                                </Button>\r\n                                        }\r\n                                    </li>:''):''\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                        {\r\n                        yourProfile ? \r\n                        yourProfile._id !== this.props.match.params.id ? \r\n                        this.props.user.userProfile?this.props.user.userProfile.privateMode===true ? \r\n                        yourProfile.followings.includes(this.props.match.params.id)===false?\r\n                            <div className=\"row body\">\r\n                                <div className=\"col-xl-4 col-lg-4 col-md-6 col-sm-6 col-12 image_contain\"></div>\r\n                                <div className=\"col-xl-4 col-lg-4 col-md-6 col-sm-6 col-12 image_contain\">\r\n                                <h6>Tài khoản riêng tư theo dõi để thấy bài viết</h6>\r\n                                </div>\r\n                                <div className=\"col-xl-4 col-lg-4 col-md-6 col-sm-6 col-12 image_contain\"></div>\r\n                            </div>\r\n                        :\r\n                        <PostRow history={this.props.history} typelist={typelist}></PostRow>\r\n                        :\r\n                        <PostRow history={this.props.history}  typelist={typelist}></PostRow>\r\n                        :\r\n                        <PostRow  history={this.props.history}  typelist={typelist}></PostRow>\r\n                        :\r\n                        <PostRow history={this.props.history}  typelist={typelist}></PostRow>\r\n                        :\r\n                        <PostRow history={this.props.history}  typelist={typelist}></PostRow>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <Dialog className=\"dialog_cont\"  onClose={() => {this.setState({ setfollowerDiaglog: false }); this.props.dispatch(findProfile(this.props.match.params.id))}} open={this.state.setfollowerDiaglog} >\r\n                    <div className=\"dialog_header\">\r\n                        <h5>Danh sách theo dõi</h5>\r\n               \r\n                    </div>\r\n                    {\r\n                        userProfile ? (userProfile.followers ? userProfile.followers.map(follower => {\r\n                            return (\r\n                                <div className=\"follow_list\">\r\n                                    <div className=\"list_info\">\r\n                                        <img src={follower.avt}></img>        \r\n                                        <Link to={`/user/${follower._id}`}> <h2>{follower.userName}</h2></Link>\r\n                                    </div>\r\n                                    {\r\n                                            yourProfile ? (yourProfile._id == follower._id ? <Button className=\"minibtn\" onClick={()=>this.props.history.push(`/user/yourProfile._id`)}> Trang cá nhân</Button>\r\n                                            :\r\n                                            follower.request.includes(yourProfile._id)?\r\n                                            <Button className=\"minibtn\" onClick={() => this.handleClickunfollow(follower)}>Đã gửi yêu cầu</Button>\r\n                                            :\r\n                                            yourProfile ? yourProfile.followings.includes(follower._id) ?\r\n                                                <Button className=\"minibtn\" onClick={() => this.handleClickunfollow(follower)} > Đang theo dõi</Button>\r\n                                                :\r\n                                                <Button className=\"minibtn\" onClick={() => this.handleClickfollow(follower)}>Theo dõi</Button>\r\n                                                : null)\r\n                                            : null\r\n                            }\r\n                                </div>\r\n\r\n                            )\r\n                        }) : '') : ''\r\n                    }\r\n                </Dialog>\r\n                <Dialog className=\"dialog_cont\"  onClose={() => {this.setState({ setfollowingDiaglog: false }); this.props.dispatch(findProfile(this.props.match.params.id))}} open={this.state.setfollowingDiaglog} >\r\n                    <div className=\"dialog_header\">\r\n                        <h5>Danh sách đang theo dõi</h5>\r\n                   \r\n                    </div>\r\n                    {\r\n                        userProfile ? (userProfile.followings ? userProfile.followings.map(following => {\r\n                            return (\r\n                                <div className=\"follow_list\">\r\n                                    <div className=\"list_info\">\r\n                                        <img src={following.avt}></img>\r\n                                        <Link to={`/user/${following._id}`}> <h2>{following.userName}</h2></Link>\r\n                                    </div>\r\n                                    {\r\n                                        yourProfile ? (yourProfile._id == following._id ? <Button className=\"minibtn\"> Trang cá nhân</Button>\r\n                                            :\r\n                                            following.request.includes(yourProfile._id)?\r\n                                            <Button className=\"minibtn\" onClick={() => this.handleClickunfollow(following)}>Đã gửi yêu cầu</Button>\r\n                                            :\r\n                                            yourProfile ? yourProfile.followings.includes(following._id) ?\r\n                                                <Button className=\"minibtn\" onClick={() => this.handleClickunfollow(following)} > Đang theo dõi</Button>\r\n                                                :\r\n                                                <Button className=\"minibtn\" onClick={() => this.handleClickfollow(following)}>Theo dõi</Button>\r\n                                                : null)\r\n                                            : null\r\n                                    }\r\n\r\n                                </div>\r\n\r\n                            )\r\n                        }) : '') : ''\r\n                    }\r\n                </Dialog>\r\n                {/* Thêm story */}\r\n                {\r\n                    this.props.user.storylist?\r\n                        <Dialog\r\n                            fullWidth={true}\r\n                            maxWidth=\"lg\"  \r\n                            className=\"createHighLightStoryForm\"  \r\n                            onClose={() => {this.setState({ createHighlightStoryDiaglog: false })}} \r\n                            open={this.state.createHighlightStoryDiaglog}\r\n                        >\r\n                        <div className=\"wrapper\">\r\n                            <div className=\"row no-gutters\">\r\n                                <div className=\"col-xl-3 col-lg-3 no-gutters\">\r\n                                    <div className=\"row no-gutters form-header\">\r\n                                    <h5>Tin nổi bật</h5>\r\n                                    <FormField\r\n                                        id={'name'}\r\n                                        formData={this.state.formData.name}\r\n                                        change={(element) => this.updateForm(element)}\r\n                                    />\r\n                                    <div className=\"header-feature\">\r\n                                        <button className=\"btn btn-cancel\">Hủy</button>\r\n                                        <button className=\"btn\" \r\n                                            onClick={()=>{\r\n                                                //console.log(this.state.formSuccess,this.state.highLightStory)\r\n                                                if(this.state.formSuccess && this.state.highLightStory.length != 0)\r\n                                                {\r\n                                                    let dataToSubmit = {\r\n                                                        name: this.state.formData.name.value,\r\n                                                        storyList: [...this.state.highLightStory]\r\n                                                    }\r\n                                                    console.log(\"data\",dataToSubmit);\r\n                                                    this.props.dispatch(createHighLightStory(dataToSubmit)).then(response=>{\r\n                                                        if(response.payload.success){\r\n                                                            this.setState({addStorySuccess: true,formMessage:\"Thêm thành công\",createHighlightStoryDiaglog: false,addStoryStatus: true, })\r\n                                                        }else{\r\n                                                            this.setState({addStorySuccess: false,formMessage:\"Lỗi! Vui lòng thử lại :(\",addStoryStatus: true})\r\n                                                        }\r\n                                                    })\r\n                                                }else{\r\n                                                    console.log(this.state.formError,this.state.highlightStory)\r\n                                                    this.setState({addStorySuccess: false,formMessage:\"Vui lòng kiểm tra thông lại thông tin :(\",addStoryStatus: true})\r\n                                                }\r\n                                        }}>Thêm mới</button>      \r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                                <div className=\"col-xl-9 col-lg-9 no-gutters\">\r\n                                    <div className=\"row no-gutters form-content\">\r\n                                    {\r\n                                        this.props.user.storylist.map((item,index)=>{\r\n                                            return <div \r\n                                            onClick={()=>{\r\n                                                this.state.highLightStory.includes(item._id) ?\r\n                                                    this.pullStory(item._id) : this.pushStory(item._id)\r\n                                            }} \r\n                                            className={`col-lg-3 no-gutters image-wrapper` }>\r\n                                                <img className={`story-item ${this.state.highLightStory.includes(item._id) ? \"story_selected\":\"unselected_story\"}`} \r\n                                                    src={item.image.url}/>\r\n                                            </div>\r\n                                        })\r\n                                    }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div> \r\n                    </Dialog>\r\n                    :\"loading\"\r\n                }\r\n                {/* Thông báo chỉnh sửa story nổi bật thành công */}\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    open={this.state.addStoryStatus}\r\n                    onClose={() => this.setState({ addStoryStatus: false })}\r\n                    autoHideDuration={1000}\r\n                >\r\n                    <MuiAlert elevation={6} variant=\"filled\" severity={`${this.state.addStorySuccess?\"success\":\"warning\"}`} >{this.state.formMessage}</MuiAlert>\r\n                </Snackbar>\r\n                {/* Thông báo báo cáo tài khoản thành công */}\r\n               <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    open={this.state.reportStatus}\r\n                    onClose={() => this.setState({ reportStatus: false })}\r\n                    autoHideDuration={3000}>\r\n                    <MuiAlert elevation={6} variant=\"filled\" severity={this.state.reportSuccess?\"success\":\"warning\"} >{this.state.SnackMess}</MuiAlert>\r\n                </Snackbar>\r\n                {\r\n                    this.showReportForm()\r\n                }\r\n                <Dialog className=\"dialog_cont\" \r\n                    onClose={() => { this.setState({ alertFunctionIsRestricted: false })}} \r\n                    open={this.state.alertFunctionIsRestricted} >\r\n                    <div className=\"dialog_header\">\r\n                        <h5>Bạn đã bị hạn chế chức năng này cho đến {moment(this.state.restrictedFunction.amountOfTime).format(\"L\")}</h5>\r\n                    </div>\r\n                </Dialog>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        products: state.products,\r\n        policies: state.policies,\r\n        messages: state.messages\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(withRouter(Profile));"]},"metadata":{},"sourceType":"module"}