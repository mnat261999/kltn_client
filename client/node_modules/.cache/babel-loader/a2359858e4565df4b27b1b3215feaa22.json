{"ast":null,"code":"import { LOGIN_USER, REGISTER_USER, AUTH_USER, LOGOUT_USER, ADD_TO_CART, STORE_REGISTER_INFO, GET_POST, GET_TYPE, UPDATE_IMG, UPDATE_PRO, FOLLOW_USER, CHANGE_PRO, CHANGE_IMG, SAVE_DETAIL, SAVE_POST, GET_HIGHLIGHT_STORY, GET_ALL_STORY, CREATE_HIGHLIGHT_STORY, DELETE_HIGHLIGHT_STORY, EDIT_HIGHLIGHT_STORY, GET_RECOMMEND_POST, GET_BLOCKED_USERS, UNBLOCKED_USERS, BLOCK_USER, RESTRICTED, CHANGE_PRIVATE, REQUEST_FOLLOW, ACCEPT_FOLLOW } from \"../actions/types\";\nexport default function (state = {}, action) {\n  switch (action.type) {\n    case LOGIN_USER:\n      {\n        return { ...state,\n          loginSuccess: action.payload\n        };\n      }\n\n    case REGISTER_USER:\n      {\n        return { ...state,\n          registerSuccess: action.payload\n        };\n      }\n\n    case AUTH_USER:\n      {\n        return { ...state,\n          userData: action.payload\n        };\n      }\n\n    case LOGOUT_USER:\n      {\n        return { ...state\n        };\n      }\n\n    case ADD_TO_CART:\n      {\n        return { ...state,\n          userData: { ...state.userData,\n            cart: action.payload\n          }\n        };\n      }\n\n    case STORE_REGISTER_INFO:\n      {\n        return { ...state,\n          RegisterInfo: { ...action.payload\n          }\n        };\n      }\n\n    case GET_POST:\n      {\n        return { ...state,\n          postlist: action.payload.posts,\n          userProfile: action.payload.userProfile\n        };\n      }\n\n    case GET_TYPE:\n      {\n        return { ...state,\n          typelist: action.payload\n        };\n      }\n\n    case UPDATE_IMG:\n      {\n        return { ...state,\n          img: action.payload\n        };\n      }\n\n    case UPDATE_PRO:\n      {\n        return { ...state,\n          userData: action.payload\n        };\n      }\n\n    case FOLLOW_USER:\n      {\n        return { ...state,\n          userData: { ...state.userData,\n            followings: action.payload\n          }\n        };\n      }\n\n    case CHANGE_PRO:\n      {\n        return { ...state,\n          updateInfo: action.payload\n        };\n      }\n\n    case SAVE_POST:\n      {\n        return { ...state,\n          userData: { ...state.userData,\n            saved: action.payload.saved\n          }\n        };\n      }\n\n    case CHANGE_IMG:\n      {\n        return { ...state,\n          updateimginfo: action.payload\n        };\n      }\n\n    case GET_HIGHLIGHT_STORY:\n      {\n        return { ...state,\n          highlightStory: action.payload\n        };\n      }\n\n    case GET_ALL_STORY:\n      {\n        return { ...state,\n          storylist: action.payload\n        };\n      }\n\n    case CREATE_HIGHLIGHT_STORY:\n      {\n        if (action.payload.success) {\n          return { ...state,\n            highlightStory: [...state.highlightStory, action.payload.highlightStory[0]]\n          };\n        } else {\n          return state;\n        }\n      }\n\n    case DELETE_HIGHLIGHT_STORY:\n      {\n        let updatedHighlightStory = [...state.highlightStory];\n        updatedHighlightStory = updatedHighlightStory.filter(item => item._id !== action.payload.storyId);\n        console.log(\"data\", updatedHighlightStory);\n        return { ...state,\n          highlightStory: updatedHighlightStory\n        };\n      }\n\n    case EDIT_HIGHLIGHT_STORY:\n      {\n        let updatedHighlightStory = [...state.highlightStory];\n        updatedHighlightStory = updatedHighlightStory.map(item => {\n          if (item._id == action.payload.highlightStory[0]._id) {\n            return action.payload.highlightStory[0];\n          } else {\n            return item;\n          }\n        });\n        return { ...state,\n          highlightStory: updatedHighlightStory\n        };\n      }\n\n    case GET_RECOMMEND_POST:\n      {\n        return { ...state,\n          recommendedPost: action.payload.posts,\n          recommendedPostSize: action.payload.size\n        };\n      }\n\n    case GET_BLOCKED_USERS:\n      {\n        return { ...state,\n          blockedUsers: action.payload\n        };\n      }\n\n    case BLOCK_USER:\n      {\n        let updatedBlockedUsers = [...state.userData.blockedUsers, action.payload.userId];\n        return { ...state,\n          userData: { ...state.userData,\n            blockedUsers: updatedBlockedUsers\n          }\n        };\n      }\n\n    case UNBLOCKED_USERS:\n      {\n        let updatedBlockedUsers = [...state.userData.blockedUsers];\n        console.log(\"data\", updatedBlockedUsers);\n        console.log(\"data\", action.payload);\n        updatedBlockedUsers = updatedBlockedUsers.filter(item => item != action.payload.userId);\n        console.log(\"data\", updatedBlockedUsers);\n        return { ...state,\n          userData: { ...state.userData,\n            blockedUsers: updatedBlockedUsers\n          }\n        };\n      }\n\n    case RESTRICTED:\n      {\n        return { ...state,\n          restricted: true\n        };\n      }\n\n    case REQUEST_FOLLOW:\n      {\n        let newuserProfile = { ...state.userProfile\n        };\n        newuserProfile.request = action.payload.request;\n        return { ...state,\n          userProfile: newuserProfile\n        };\n      }\n\n    case ACCEPT_FOLLOW:\n      {\n        return { ...state,\n          accept: action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/Kltn/test/social-media/client/src/reducers/user_reducer.js"],"names":["LOGIN_USER","REGISTER_USER","AUTH_USER","LOGOUT_USER","ADD_TO_CART","STORE_REGISTER_INFO","GET_POST","GET_TYPE","UPDATE_IMG","UPDATE_PRO","FOLLOW_USER","CHANGE_PRO","CHANGE_IMG","SAVE_DETAIL","SAVE_POST","GET_HIGHLIGHT_STORY","GET_ALL_STORY","CREATE_HIGHLIGHT_STORY","DELETE_HIGHLIGHT_STORY","EDIT_HIGHLIGHT_STORY","GET_RECOMMEND_POST","GET_BLOCKED_USERS","UNBLOCKED_USERS","BLOCK_USER","RESTRICTED","CHANGE_PRIVATE","REQUEST_FOLLOW","ACCEPT_FOLLOW","state","action","type","loginSuccess","payload","registerSuccess","userData","cart","RegisterInfo","postlist","posts","userProfile","typelist","img","followings","updateInfo","saved","updateimginfo","highlightStory","storylist","success","updatedHighlightStory","filter","item","_id","storyId","console","log","map","recommendedPost","recommendedPostSize","size","blockedUsers","updatedBlockedUsers","userId","restricted","newuserProfile","request","accept"],"mappings":"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","sourcesContent":["import {\n  LOGIN_USER,\n  REGISTER_USER,\n  AUTH_USER,\n  LOGOUT_USER,\n  ADD_TO_CART,\n  STORE_REGISTER_INFO,\n  GET_POST,\n  GET_TYPE,\n  UPDATE_IMG,\n  UPDATE_PRO,\n  FOLLOW_USER,\n  CHANGE_PRO,\n  CHANGE_IMG,\n  SAVE_DETAIL,\n  SAVE_POST,\n  GET_HIGHLIGHT_STORY,\n  GET_ALL_STORY,\n  CREATE_HIGHLIGHT_STORY,\n  DELETE_HIGHLIGHT_STORY,\n  EDIT_HIGHLIGHT_STORY,\n  GET_RECOMMEND_POST,\n  GET_BLOCKED_USERS,\n  UNBLOCKED_USERS,\n  BLOCK_USER,\n  RESTRICTED,\n  CHANGE_PRIVATE,\n  REQUEST_FOLLOW,\n  ACCEPT_FOLLOW,\n} from \"../actions/types\";\n\nexport default function (state = {}, action) {\n  switch (action.type) {\n    case LOGIN_USER: {\n      return { ...state, loginSuccess: action.payload };\n    }\n    case REGISTER_USER: {\n      return { ...state, registerSuccess: action.payload };\n    }\n    case AUTH_USER: {\n      return { ...state, userData: action.payload };\n    }\n    case LOGOUT_USER: {\n      return { ...state };\n    }\n    case ADD_TO_CART: {\n      return {\n        ...state,\n        userData: {\n          ...state.userData,\n          cart: action.payload,\n        },\n      };\n    }\n    case STORE_REGISTER_INFO: {\n      return {\n        ...state,\n        RegisterInfo: {\n          ...action.payload,\n        },\n      };\n    }\n    case GET_POST: {\n      return {\n        ...state,\n        postlist: action.payload.posts,\n        userProfile: action.payload.userProfile,\n      };\n    }\n    case GET_TYPE: {\n      return {\n        ...state,\n        typelist: action.payload,\n      };\n    }\n    case UPDATE_IMG: {\n      return {\n        ...state,\n        img: action.payload,\n      };\n    }\n    case UPDATE_PRO: {\n      return {\n        ...state,\n        userData: action.payload,\n      };\n    }\n    case FOLLOW_USER: {\n      return {\n        ...state,\n        userData: {\n          ...state.userData,\n          followings: action.payload,\n        },\n      };\n    }\n    case CHANGE_PRO: {\n      return {\n        ...state,\n        updateInfo: action.payload,\n      };\n    }\n    case SAVE_POST: {\n      return {\n        ...state,\n        userData: {\n          ...state.userData,\n          saved: action.payload.saved,\n        },\n      };\n    }\n    case CHANGE_IMG: {\n      return {\n        ...state,\n        updateimginfo: action.payload,\n      };\n    }\n    case GET_HIGHLIGHT_STORY: {\n      return {\n        ...state,\n        highlightStory: action.payload,\n      };\n    }\n    case GET_ALL_STORY: {\n      return {\n        ...state,\n        storylist: action.payload,\n      };\n    }\n    case CREATE_HIGHLIGHT_STORY: {\n      if (action.payload.success) {\n        return {\n          ...state,\n          highlightStory: [\n            ...state.highlightStory,\n            action.payload.highlightStory[0],\n          ],\n        };\n      } else {\n        return state;\n      }\n    }\n    case DELETE_HIGHLIGHT_STORY: {\n      let updatedHighlightStory = [...state.highlightStory];\n\n      updatedHighlightStory = updatedHighlightStory.filter(\n        (item) => item._id !== action.payload.storyId\n      );\n      console.log(\"data\", updatedHighlightStory);\n      return {\n        ...state,\n        highlightStory: updatedHighlightStory,\n      };\n    }\n    case EDIT_HIGHLIGHT_STORY: {\n      let updatedHighlightStory = [...state.highlightStory];\n      updatedHighlightStory = updatedHighlightStory.map((item) => {\n        if (item._id == action.payload.highlightStory[0]._id) {\n          return action.payload.highlightStory[0];\n        } else {\n          return item;\n        }\n      });\n      return {\n        ...state,\n        highlightStory: updatedHighlightStory,\n      };\n    }\n    case GET_RECOMMEND_POST: {\n      return {\n        ...state,\n        recommendedPost: action.payload.posts,\n        recommendedPostSize: action.payload.size,\n      };\n    }\n    case GET_BLOCKED_USERS: {\n      return { ...state, blockedUsers: action.payload };\n    }\n    case BLOCK_USER: {\n      let updatedBlockedUsers = [\n        ...state.userData.blockedUsers,\n        action.payload.userId,\n      ];\n\n      return {\n        ...state,\n        userData: {\n          ...state.userData,\n          blockedUsers: updatedBlockedUsers,\n        },\n      };\n    }\n    case UNBLOCKED_USERS: {\n      let updatedBlockedUsers = [...state.userData.blockedUsers];\n      console.log(\"data\", updatedBlockedUsers);\n      console.log(\"data\", action.payload);\n      updatedBlockedUsers = updatedBlockedUsers.filter(\n        (item) => item != action.payload.userId\n      );\n      console.log(\"data\", updatedBlockedUsers);\n      return {\n        ...state,\n        userData: {\n          ...state.userData,\n          blockedUsers: updatedBlockedUsers,\n        },\n      };\n    }\n    case RESTRICTED: {\n      return {\n        ...state,\n        restricted: true,\n      };\n    }\n    case REQUEST_FOLLOW: {\n      let newuserProfile = { ...state.userProfile };\n      newuserProfile.request = action.payload.request;\n      return {\n        ...state,\n        userProfile: newuserProfile,\n      };\n    }\n    case ACCEPT_FOLLOW: {\n      return {\n        ...state,\n        accept: action.payload,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}