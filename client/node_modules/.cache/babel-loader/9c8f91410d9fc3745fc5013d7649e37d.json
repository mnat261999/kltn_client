{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kltn\\\\test\\\\social-media\\\\client\\\\src\\\\components\\\\ultils\\\\FileUpload.js\";\nimport React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport faImages from '@fortawesome/fontawesome-free-solid/faImages';\nimport faTimesCircle from '@fortawesome/fontawesome-free-solid/faTimesCircle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nclass FileUpload extends Component {\n  constructor() {\n    super();\n\n    this.updateImageList = image => {\n      console.log(image);\n      this.setState({\n        uploadedImages: [...this.state.uploadedImages, image]\n      }, () => {\n        this.props.imagesHandler(this.state.uploadedImages);\n      });\n    };\n\n    this.onDrop = async files => {\n      console.log('files', files);\n      this.setState({\n        uploading: true\n      });\n      let formData = new FormData();\n      const config = {\n        header: {\n          'content-type': 'multipart/form-data'\n        }\n      };\n      formData.append(\"file\", files[0]);\n      this.setState({\n        uploading: false,\n        uploadedFiles: [...this.state.uploadedFiles, URL.createObjectURL(files[0])]\n      });\n      this.readFile(files[0], image => this.updateImageList(image));\n    };\n\n    this.onRemove = id => {\n      this.setState({\n        uploading: true\n      });\n      axios.get(`/api/users/removeimage?public_id=${id}`).then(response => {\n        let images = this.state.uploadedFiles.filter(item => {\n          return item.public_id !== id;\n        });\n        this.setState({\n          uploading: false,\n          uploadedFiles: images\n        }, () => {\n          this.props.imagesHandler(images);\n        });\n      });\n    };\n\n    this.showUploadImages = () => this.state.uploadedFiles.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropzone_UploadedImg_wrapper\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: \"delete_image_icon\",\n      onClick: () => this.onRemove(item.public_id),\n      icon: faTimesCircle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploaded_img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"uploaded_img\",\n      src: item,\n      alt: \"photo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }))));\n\n    this.state = {\n      uploadedFiles: [],\n      uploadedImages: [],\n      uploading: false,\n      imageTest: \"\"\n    };\n  }\n\n  readFile(file, callback) {\n    var reader = new FileReader();\n    var baseString;\n\n    reader.onloadend = function () {\n      baseString = reader.result;\n      callback(baseString);\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  static getDirevedStateFromProps(props, state) {\n    if (props.reset) {\n      return state = {\n        uploadedFiles: []\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropzone clear\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropzone_wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Dropzone, {\n      onDrop: e => this.onDrop(e),\n      multiple: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, ({\n      getRootProps,\n      getInputProps\n    }) => /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n      className: \"dropzone_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps, {\n      className: \"dropzone_Add_button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faImages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 33\n      }\n    }))))), this.state.uploading ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"process_bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(LinearProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    })) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploaded_image_display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, this.showUploadImages()));\n  }\n\n}\n\nexport default FileUpload;","map":{"version":3,"sources":["D:/Kltn/test/social-media/client/src/components/ultils/FileUpload.js"],"names":["React","Component","Dropzone","axios","FontAwesomeIcon","faImages","faTimesCircle","CircularProgress","LinearProgress","FileUpload","constructor","updateImageList","image","console","log","setState","uploadedImages","state","props","imagesHandler","onDrop","files","uploading","formData","FormData","config","header","append","uploadedFiles","URL","createObjectURL","readFile","onRemove","id","get","then","response","images","filter","item","public_id","showUploadImages","map","index","imageTest","file","callback","reader","FileReader","baseString","onloadend","result","readAsDataURL","getDirevedStateFromProps","reset","render","e","getRootProps","getInputProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport axios from 'axios';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport faImages from '@fortawesome/fontawesome-free-solid/faImages';\r\nimport faTimesCircle from '@fortawesome/fontawesome-free-solid/faTimesCircle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nclass FileUpload extends Component {\r\n    \r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            uploadedFiles:[],\r\n            uploadedImages: [],\r\n            uploading: false,\r\n            imageTest: \"\",   \r\n        }\r\n    }\r\n\r\n    updateImageList = (image) => {\r\n        console.log(image)\r\n        this.setState({\r\n            uploadedImages: [\r\n                ...this.state.uploadedImages,\r\n                image\r\n            ]\r\n        },()=>{\r\n            this.props.imagesHandler(this.state.uploadedImages)\r\n        })\r\n    }\r\n\r\n    readFile(file, callback) {\r\n        var reader = new FileReader();\r\n        var baseString;\r\n        reader.onloadend = function () {\r\n            baseString = reader.result;\r\n            callback(baseString);\r\n        };\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n    onDrop = async (files) =>{\r\n        console.log('files',files)\r\n        this.setState({uploading: true});\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: {'content-type':'multipart/form-data'}\r\n        }\r\n        formData.append(\"file\",files[0]);\r\n        this.setState({\r\n            uploading: false,\r\n            uploadedFiles: [\r\n                ...this.state.uploadedFiles,\r\n                URL.createObjectURL(files[0])\r\n            ]\r\n        })\r\n        \r\n        this.readFile(files[0],(image)=>this.updateImageList(image))\r\n    }\r\n\r\n    onRemove = (id) =>{\r\n        this.setState({ uploading: true });\r\n        axios.get(`/api/users/removeimage?public_id=${id}`)\r\n        .then(response =>{\r\n            let images = this.state.uploadedFiles.filter(item => {\r\n                return item.public_id !== id;\r\n            });\r\n            this.setState({\r\n                uploading: false,\r\n                uploadedFiles: images\r\n            },()=>{\r\n                this.props.imagesHandler(images)\r\n            })\r\n        })\r\n    }\r\n\r\n    showUploadImages = () => (\r\n        this.state.uploadedFiles.map((item,index) => (\r\n            <div className='dropzone_UploadedImg_wrapper'\r\n                key={index} >\r\n                <FontAwesomeIcon className=\"delete_image_icon\" onClick={() => this.onRemove(item.public_id)}\r\n                    icon={faTimesCircle} />\r\n                <div className='uploaded_img'>\r\n                    <img className=\"uploaded_img\" src={item} alt=\"photo\"/>\r\n                </div>\r\n            </div>\r\n        ))\r\n    )\r\n\r\n    static getDirevedStateFromProps(props,state){\r\n        if(props.reset){\r\n            return state = { uploadedFiles: []}\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='dropzone clear'>\r\n            <div className=\"dropzone_wrapper\">\r\n            \r\n                <Dropzone \r\n                onDrop={(e) => this.onDrop(e)}\r\n                multiple={false}>\r\n                    {({ getRootProps, getInputProps }) => (\r\n                    <section>\r\n                        <div {...getRootProps()} className=\"dropzone_container\">\r\n                            <input {...getInputProps()} />\r\n                            <div {...getRootProps} className='dropzone_Add_button'>\r\n                                <FontAwesomeIcon\r\n                                    icon={faImages} />\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                )}\r\n                </Dropzone>\r\n                {\r\n                this.state.uploading ?\r\n                    <div className='process_bar'>\r\n                        <LinearProgress />\r\n                    </div>\r\n                : null\r\n                }\r\n           \r\n            </div>\r\n                <div className=\"uploaded_image_display\">\r\n                {\r\n                    this.showUploadImages()\r\n                } \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FileUpload;"]},"metadata":{},"sourceType":"module"}