{"ast":null,"code":"import React, { useMemo, Fragment, createElement, useRef, useState, useCallback } from 'react';\nimport { Container, useDimensions, SvgWrapper, ResponsiveWrapper, getRelativeCursor } from '@nivo/core';\nimport { scaleLinear } from 'd3-scale';\nimport { Delaunay } from 'd3-delaunay';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar defaultVoronoiProps = {\n  xDomain: [0, 1],\n  yDomain: [0, 1],\n  layers: ['links', 'cells', 'points', 'bounds'],\n  enableLinks: false,\n  linkLineWidth: 1,\n  linkLineColor: '#bbbbbb',\n  enableCells: true,\n  cellLineWidth: 2,\n  cellLineColor: '#000000',\n  enablePoints: true,\n  pointSize: 4,\n  pointColor: '#666666',\n  role: 'img'\n};\n\nvar getAccessor = function getAccessor(directive) {\n  return typeof directive === 'function' ? directive : function (datum) {\n    return datum[directive];\n  };\n};\n\nvar computeMeshPoints = function computeMeshPoints(_ref) {\n  var points = _ref.points,\n      _ref$x = _ref.x,\n      x = _ref$x === void 0 ? 'x' : _ref$x,\n      _ref$y = _ref.y,\n      y = _ref$y === void 0 ? 'y' : _ref$y;\n  var getX = getAccessor(x);\n  var getY = getAccessor(y);\n  return points.map(function (point) {\n    return [getX(point), getY(point)];\n  });\n};\n\nvar computeMesh = function computeMesh(_ref2) {\n  var points = _ref2.points,\n      width = _ref2.width,\n      height = _ref2.height,\n      debug = _ref2.debug;\n  var delaunay = Delaunay.from(points);\n  var voronoi = debug ? delaunay.voronoi([0, 0, width, height]) : undefined;\n  return {\n    delaunay: delaunay,\n    voronoi: voronoi\n  };\n};\n\nvar useVoronoiMesh = function useVoronoiMesh(_ref) {\n  var points = _ref.points,\n      x = _ref.x,\n      y = _ref.y,\n      width = _ref.width,\n      height = _ref.height,\n      debug = _ref.debug;\n  var points2d = useMemo(function () {\n    return computeMeshPoints({\n      points: points,\n      x: x,\n      y: y\n    });\n  }, [points, x, y]);\n  return useMemo(function () {\n    return computeMesh({\n      points: points2d,\n      width: width,\n      height: height,\n      debug: debug\n    });\n  }, [points2d, width, height, debug]);\n};\n\nvar useVoronoi = function useVoronoi(_ref2) {\n  var data = _ref2.data,\n      width = _ref2.width,\n      height = _ref2.height,\n      xDomain = _ref2.xDomain,\n      yDomain = _ref2.yDomain;\n  var xScale = useMemo(function () {\n    return scaleLinear().domain(xDomain).range([0, width]);\n  }, [xDomain, width]);\n  var yScale = useMemo(function () {\n    return scaleLinear().domain(yDomain).range([0, height]);\n  }, [yDomain, height]);\n  var points = useMemo(function () {\n    return data.map(function (d) {\n      return {\n        x: xScale(d.x),\n        y: yScale(d.y),\n        data: d\n      };\n    });\n  }, [data, xScale, yScale]);\n  return useMemo(function () {\n    var delaunay = Delaunay.from(points.map(function (p) {\n      return [p.x, p.y];\n    }));\n    var voronoi = delaunay.voronoi([0, 0, width, height]);\n    return {\n      points: points,\n      delaunay: delaunay,\n      voronoi: voronoi\n    };\n  }, [points, width, height]);\n};\n\nvar useVoronoiLayerContext = function useVoronoiLayerContext(_ref3) {\n  var points = _ref3.points,\n      delaunay = _ref3.delaunay,\n      voronoi = _ref3.voronoi;\n  return useMemo(function () {\n    return {\n      points: points,\n      delaunay: delaunay,\n      voronoi: voronoi\n    };\n  }, [points, delaunay, voronoi]);\n};\n\nvar InnerVoronoi = function InnerVoronoi(_ref) {\n  var data = _ref.data,\n      width = _ref.width,\n      height = _ref.height,\n      partialMargin = _ref.margin,\n      _ref$layers = _ref.layers,\n      layers = _ref$layers === void 0 ? defaultVoronoiProps.layers : _ref$layers,\n      _ref$xDomain = _ref.xDomain,\n      xDomain = _ref$xDomain === void 0 ? defaultVoronoiProps.xDomain : _ref$xDomain,\n      _ref$yDomain = _ref.yDomain,\n      yDomain = _ref$yDomain === void 0 ? defaultVoronoiProps.yDomain : _ref$yDomain,\n      _ref$enableLinks = _ref.enableLinks,\n      enableLinks = _ref$enableLinks === void 0 ? defaultVoronoiProps.enableLinks : _ref$enableLinks,\n      _ref$linkLineWidth = _ref.linkLineWidth,\n      linkLineWidth = _ref$linkLineWidth === void 0 ? defaultVoronoiProps.linkLineWidth : _ref$linkLineWidth,\n      _ref$linkLineColor = _ref.linkLineColor,\n      linkLineColor = _ref$linkLineColor === void 0 ? defaultVoronoiProps.linkLineColor : _ref$linkLineColor,\n      _ref$enableCells = _ref.enableCells,\n      enableCells = _ref$enableCells === void 0 ? defaultVoronoiProps.enableCells : _ref$enableCells,\n      _ref$cellLineWidth = _ref.cellLineWidth,\n      cellLineWidth = _ref$cellLineWidth === void 0 ? defaultVoronoiProps.cellLineWidth : _ref$cellLineWidth,\n      _ref$cellLineColor = _ref.cellLineColor,\n      cellLineColor = _ref$cellLineColor === void 0 ? defaultVoronoiProps.cellLineColor : _ref$cellLineColor,\n      _ref$enablePoints = _ref.enablePoints,\n      enablePoints = _ref$enablePoints === void 0 ? defaultVoronoiProps.enableCells : _ref$enablePoints,\n      _ref$pointSize = _ref.pointSize,\n      pointSize = _ref$pointSize === void 0 ? defaultVoronoiProps.pointSize : _ref$pointSize,\n      _ref$pointColor = _ref.pointColor,\n      pointColor = _ref$pointColor === void 0 ? defaultVoronoiProps.pointColor : _ref$pointColor,\n      _ref$role = _ref.role,\n      role = _ref$role === void 0 ? defaultVoronoiProps.role : _ref$role;\n\n  var _useDimensions = useDimensions(width, height, partialMargin),\n      outerWidth = _useDimensions.outerWidth,\n      outerHeight = _useDimensions.outerHeight,\n      margin = _useDimensions.margin,\n      innerWidth = _useDimensions.innerWidth,\n      innerHeight = _useDimensions.innerHeight;\n\n  var _useVoronoi = useVoronoi({\n    data: data,\n    width: innerWidth,\n    height: innerHeight,\n    xDomain: xDomain,\n    yDomain: yDomain\n  }),\n      points = _useVoronoi.points,\n      delaunay = _useVoronoi.delaunay,\n      voronoi = _useVoronoi.voronoi;\n\n  var layerById = {\n    links: null,\n    cells: null,\n    points: null,\n    bounds: null\n  };\n\n  if (enableLinks && layers.includes('links')) {\n    layerById.links = React.createElement(\"path\", {\n      key: \"links\",\n      stroke: linkLineColor,\n      strokeWidth: linkLineWidth,\n      fill: \"none\",\n      d: delaunay.render()\n    });\n  }\n\n  if (enableCells && layers.includes('cells')) {\n    layerById.cells = React.createElement(\"path\", {\n      key: \"cells\",\n      d: voronoi.render(),\n      fill: \"none\",\n      stroke: cellLineColor,\n      strokeWidth: cellLineWidth\n    });\n  }\n\n  if (enablePoints && layers.includes('points')) {\n    layerById.points = React.createElement(\"path\", {\n      key: \"points\",\n      stroke: \"none\",\n      fill: pointColor,\n      d: delaunay.renderPoints(undefined, pointSize / 2)\n    });\n  }\n\n  if (layers.includes('bounds')) {\n    layerById.bounds = React.createElement(\"path\", {\n      key: \"bounds\",\n      fill: \"none\",\n      stroke: cellLineColor,\n      strokeWidth: cellLineWidth,\n      d: voronoi.renderBounds()\n    });\n  }\n\n  var layerContext = useVoronoiLayerContext({\n    points: points,\n    delaunay: delaunay,\n    voronoi: voronoi\n  });\n  return React.createElement(SvgWrapper, {\n    width: outerWidth,\n    height: outerHeight,\n    margin: margin,\n    role: role\n  }, layers.map(function (layer, i) {\n    if (layerById[layer] !== undefined) {\n      return layerById[layer];\n    }\n\n    if (typeof layer === 'function') {\n      return React.createElement(Fragment, {\n        key: i\n      }, createElement(layer, layerContext));\n    }\n\n    return null;\n  }));\n};\n\nvar Voronoi = function Voronoi(_ref2) {\n  var theme = _ref2.theme,\n      otherProps = _objectWithoutProperties(_ref2, [\"theme\"]);\n\n  return React.createElement(Container, {\n    isInteractive: false,\n    animate: false,\n    theme: theme\n  }, React.createElement(InnerVoronoi, otherProps));\n};\n\nvar ResponsiveVoronoi = function ResponsiveVoronoi(props) {\n  return React.createElement(ResponsiveWrapper, null, function (_ref) {\n    var width = _ref.width,\n        height = _ref.height;\n    return React.createElement(Voronoi, Object.assign({\n      width: width,\n      height: height\n    }, props));\n  });\n};\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nvar Mesh = function Mesh(_ref) {\n  var nodes = _ref.nodes,\n      width = _ref.width,\n      height = _ref.height,\n      x = _ref.x,\n      y = _ref.y,\n      onMouseEnter = _ref.onMouseEnter,\n      onMouseMove = _ref.onMouseMove,\n      onMouseLeave = _ref.onMouseLeave,\n      onClick = _ref.onClick,\n      debug = _ref.debug;\n  var elementRef = useRef(null);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentIndex = _useState2[0],\n      setCurrentIndex = _useState2[1];\n\n  var _useVoronoiMesh = useVoronoiMesh({\n    points: nodes,\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    debug: debug\n  }),\n      delaunay = _useVoronoiMesh.delaunay,\n      voronoi = _useVoronoiMesh.voronoi;\n\n  var voronoiPath = useMemo(function () {\n    if (debug && voronoi) {\n      return voronoi.render();\n    }\n\n    return undefined;\n  }, [debug, voronoi]);\n  var getIndexAndNodeFromEvent = useCallback(function (event) {\n    if (!elementRef.current) {\n      return [null, null];\n    }\n\n    var _getRelativeCursor = getRelativeCursor(elementRef.current, event),\n        _getRelativeCursor2 = _slicedToArray(_getRelativeCursor, 2),\n        x = _getRelativeCursor2[0],\n        y = _getRelativeCursor2[1];\n\n    var index = delaunay.find(x, y);\n    return [index, index !== undefined ? nodes[index] : null];\n  }, [elementRef, delaunay]);\n  var handleMouseEnter = useCallback(function (event) {\n    var _getIndexAndNodeFromE = getIndexAndNodeFromEvent(event),\n        _getIndexAndNodeFromE2 = _slicedToArray(_getIndexAndNodeFromE, 2),\n        index = _getIndexAndNodeFromE2[0],\n        node = _getIndexAndNodeFromE2[1];\n\n    setCurrentIndex(index);\n\n    if (node) {\n      onMouseEnter === null || onMouseEnter === void 0 ? void 0 : onMouseEnter(node, event);\n    }\n  }, [getIndexAndNodeFromEvent, setCurrentIndex, onMouseEnter]);\n  var handleMouseMove = useCallback(function (event) {\n    var _getIndexAndNodeFromE3 = getIndexAndNodeFromEvent(event),\n        _getIndexAndNodeFromE4 = _slicedToArray(_getIndexAndNodeFromE3, 2),\n        index = _getIndexAndNodeFromE4[0],\n        node = _getIndexAndNodeFromE4[1];\n\n    setCurrentIndex(index);\n\n    if (node) {\n      onMouseMove === null || onMouseMove === void 0 ? void 0 : onMouseMove(node, event);\n    }\n  }, [getIndexAndNodeFromEvent, setCurrentIndex, onMouseMove]);\n  var handleMouseLeave = useCallback(function (event) {\n    setCurrentIndex(null);\n\n    if (onMouseLeave) {\n      var previousNode = undefined;\n\n      if (currentIndex !== null) {\n        previousNode = nodes[currentIndex];\n      }\n\n      previousNode && onMouseLeave(previousNode, event);\n    }\n  }, [setCurrentIndex, currentIndex, onMouseLeave, nodes]);\n  var handleClick = useCallback(function (event) {\n    var _getIndexAndNodeFromE5 = getIndexAndNodeFromEvent(event),\n        _getIndexAndNodeFromE6 = _slicedToArray(_getIndexAndNodeFromE5, 2),\n        index = _getIndexAndNodeFromE6[0],\n        node = _getIndexAndNodeFromE6[1];\n\n    setCurrentIndex(index);\n\n    if (node) {\n      onClick === null || onClick === void 0 ? void 0 : onClick(node, event);\n    }\n  }, [getIndexAndNodeFromEvent, setCurrentIndex, onClick]);\n  return React.createElement(\"g\", {\n    ref: elementRef\n  }, debug && voronoi && React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: voronoiPath,\n    stroke: \"red\",\n    strokeWidth: 1,\n    opacity: 0.75\n  }), currentIndex !== null && React.createElement(\"path\", {\n    fill: \"pink\",\n    opacity: 0.35,\n    d: voronoi.renderCell(currentIndex)\n  })), React.createElement(\"rect\", {\n    width: width,\n    height: height,\n    fill: \"red\",\n    opacity: 0,\n    style: {\n      cursor: 'auto'\n    },\n    onMouseEnter: handleMouseEnter,\n    onMouseMove: handleMouseMove,\n    onMouseLeave: handleMouseLeave,\n    onClick: handleClick\n  }));\n};\n\nvar renderVoronoiToCanvas = function renderVoronoiToCanvas(ctx, voronoi) {\n  ctx.save();\n  ctx.globalAlpha = 0.75;\n  ctx.beginPath();\n  voronoi.render(ctx);\n  ctx.strokeStyle = 'red';\n  ctx.lineWidth = 1;\n  ctx.stroke();\n  ctx.restore();\n};\n\nvar renderVoronoiCellToCanvas = function renderVoronoiCellToCanvas(ctx, voronoi, index) {\n  ctx.save();\n  ctx.globalAlpha = 0.35;\n  ctx.beginPath();\n  voronoi.renderCell(index, ctx);\n  ctx.fillStyle = 'red';\n  ctx.fill();\n  ctx.restore();\n};\n\nexport { Mesh, ResponsiveVoronoi, Voronoi, computeMesh, computeMeshPoints, defaultVoronoiProps, renderVoronoiCellToCanvas, renderVoronoiToCanvas, useVoronoi, useVoronoiLayerContext, useVoronoiMesh };","map":{"version":3,"mappings":"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","names":["_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","_objectWithoutProperties","objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","defaultVoronoiProps","xDomain","yDomain","layers","enableLinks","linkLineWidth","linkLineColor","enableCells","cellLineWidth","cellLineColor","enablePoints","pointSize","pointColor","role","getAccessor","directive","datum","computeMeshPoints","points","x","y","getX","getY","map","point","computeMesh","width","height","debug","delaunay","Delaunay","from","voronoi","undefined","useVoronoiMesh","points2d","useMemo","useVoronoi","data","xScale","scaleLinear","domain","range","yScale","d","p","useVoronoiLayerContext","InnerVoronoi","partialMargin","margin","useDimensions","outerWidth","outerHeight","innerWidth","innerHeight","layerById","links","cells","bounds","includes","React","stroke","strokeWidth","fill","render","renderPoints","renderBounds","layerContext","SvgWrapper","layer","Fragment","createElement","Voronoi","theme","otherProps","Container","isInteractive","animate","ResponsiveVoronoi","props","ResponsiveWrapper","_arrayWithHoles","arr","Array","isArray","_iterableToArrayLimit","Symbol","iterator","_arr","_n","_d","_e","_i","_s","next","done","push","value","err","_arrayLikeToArray","len","arr2","_unsupportedIterableToArray","o","minLen","arrayLikeToArray","n","toString","slice","constructor","name","test","_nonIterableRest","TypeError","_slicedToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","Mesh","nodes","onMouseEnter","onMouseMove","onMouseLeave","onClick","elementRef","useRef","useState","currentIndex","setCurrentIndex","voronoiPath","getIndexAndNodeFromEvent","useCallback","current","getRelativeCursor","event","index","find","handleMouseEnter","node","handleMouseMove","handleMouseLeave","previousNode","handleClick","ref","opacity","renderCell","style","cursor","renderVoronoiToCanvas","ctx","save","globalAlpha","beginPath","strokeStyle","lineWidth","restore","renderVoronoiCellToCanvas","fillStyle"],"sources":["D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\objectWithoutPropertiesLoose.js","D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\objectWithoutProperties.js","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\voronoi\\src\\props.ts","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\voronoi\\src\\computeMesh.ts","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\voronoi\\src\\hooks.ts","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\voronoi\\src\\Voronoi.tsx","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\voronoi\\src\\ResponsiveVoronoi.tsx","D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\arrayWithHoles.js","D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\iterableToArrayLimit.js","D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\arrayLikeToArray.js","D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\unsupportedIterableToArray.js","D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\nonIterableRest.js","D:\\Kltn\\test\\social-media\\node_modules\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime\\helpers\\esm\\slicedToArray.js","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\voronoi\\src\\Mesh.tsx","D:\\Kltn\\test\\social-media\\node_modules\\@nivo\\voronoi\\src\\meshCanvas.ts"],"sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import { VoronoiDomain, VoronoiLayer } from './types'\n\nexport const defaultVoronoiProps = {\n    xDomain: [0, 1] as VoronoiDomain,\n    yDomain: [0, 1] as VoronoiDomain,\n    layers: ['links', 'cells', 'points', 'bounds'] as VoronoiLayer[],\n    enableLinks: false,\n    linkLineWidth: 1,\n    linkLineColor: '#bbbbbb',\n    enableCells: true,\n    cellLineWidth: 2,\n    cellLineColor: '#000000',\n    enablePoints: true,\n    pointSize: 4,\n    pointColor: '#666666',\n    role: 'img',\n}\n","import { Delaunay } from 'd3-delaunay'\n\ntype NumberPropertyNames<T> = {\n    [K in keyof T]: T[K] extends number ? K : never\n}[keyof T]\n\nexport type XYAccessor<Datum> = NumberPropertyNames<Datum> | ((datum: Datum) => number)\n\nconst getAccessor = <Datum>(directive: XYAccessor<Datum>) =>\n    typeof directive === 'function' ? directive : (datum: Datum) => datum[directive]\n\n/**\n * The delaunay generator requires an array\n * where each point is defined as an array\n * of 2 elements: [x: number, y: number].\n *\n * Points represent the raw input data\n * and x/y represent accessors to x & y.\n */\nexport const computeMeshPoints = <Datum>({\n    points,\n    x = 'x' as NumberPropertyNames<Datum>,\n    y = 'y' as NumberPropertyNames<Datum>,\n}: {\n    points: Datum[]\n    x?: XYAccessor<Datum>\n    y?: XYAccessor<Datum>\n}): [number, number][] => {\n    const getX = getAccessor<Datum>(x)\n    const getY = getAccessor<Datum>(y)\n\n    return points.map(point => [getX(point) as number, getY(point) as number])\n}\n\nexport const computeMesh = ({\n    points,\n    width,\n    height,\n    debug,\n}: {\n    points: [number, number][]\n    width: number\n    height: number\n    debug?: boolean\n}) => {\n    const delaunay = Delaunay.from(points)\n    const voronoi = debug ? delaunay.voronoi([0, 0, width, height]) : undefined\n\n    return { delaunay, voronoi }\n}\n","import { useMemo } from 'react'\nimport { scaleLinear } from 'd3-scale'\nimport { Delaunay } from 'd3-delaunay'\nimport { computeMeshPoints, computeMesh, XYAccessor } from './computeMesh'\nimport { VoronoiCommonProps, VoronoiDatum, VoronoiCustomLayerProps } from './types'\n\nexport const useVoronoiMesh = <Datum>({\n    points,\n    x,\n    y,\n    width,\n    height,\n    debug,\n}: {\n    points: Datum[]\n    x?: XYAccessor<Datum>\n    y?: XYAccessor<Datum>\n    width: number\n    height: number\n    debug?: boolean\n}) => {\n    const points2d = useMemo(\n        () => computeMeshPoints<Datum>({ points, x, y }),\n        [points, x, y]\n    )\n\n    return useMemo(() => computeMesh({ points: points2d, width, height, debug }), [\n        points2d,\n        width,\n        height,\n        debug,\n    ])\n}\n\nexport const useVoronoi = ({\n    data,\n    width,\n    height,\n    xDomain,\n    yDomain,\n}: {\n    data: VoronoiDatum[]\n    width: number\n    height: number\n    xDomain: VoronoiCommonProps['xDomain']\n    yDomain: VoronoiCommonProps['yDomain']\n}) => {\n    const xScale = useMemo(() => scaleLinear().domain(xDomain).range([0, width]), [xDomain, width])\n    const yScale = useMemo(() => scaleLinear().domain(yDomain).range([0, height]), [\n        yDomain,\n        height,\n    ])\n\n    const points = useMemo(\n        () =>\n            data.map(d => ({\n                x: xScale(d.x),\n                y: yScale(d.y),\n                data: d,\n            })),\n        [data, xScale, yScale]\n    )\n\n    return useMemo(() => {\n        const delaunay = Delaunay.from(points.map(p => [p.x, p.y]))\n        const voronoi = delaunay.voronoi([0, 0, width, height])\n\n        return {\n            points,\n            delaunay,\n            voronoi,\n        }\n    }, [points, width, height])\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const useVoronoiLayerContext = ({\n    points,\n    delaunay,\n    voronoi,\n}: VoronoiCustomLayerProps): VoronoiCustomLayerProps =>\n    useMemo(\n        () => ({\n            points,\n            delaunay,\n            voronoi,\n        }),\n        [points, delaunay, voronoi]\n    )\n","import React, { createElement, Fragment, ReactNode } from 'react'\nimport { Container, SvgWrapper, useDimensions } from '@nivo/core'\nimport { VoronoiSvgProps, VoronoiLayerId } from './types'\nimport { defaultVoronoiProps } from './props'\nimport { useVoronoi, useVoronoiLayerContext } from './hooks'\n\ntype InnerVoronoiProps = Partial<Omit<VoronoiSvgProps, 'data' | 'width' | 'height'>> &\n    Pick<VoronoiSvgProps, 'data' | 'width' | 'height'>\n\nconst InnerVoronoi = ({\n    data,\n    width,\n    height,\n    margin: partialMargin,\n    layers = defaultVoronoiProps.layers,\n    xDomain = defaultVoronoiProps.xDomain,\n    yDomain = defaultVoronoiProps.yDomain,\n    enableLinks = defaultVoronoiProps.enableLinks,\n    linkLineWidth = defaultVoronoiProps.linkLineWidth,\n    linkLineColor = defaultVoronoiProps.linkLineColor,\n    enableCells = defaultVoronoiProps.enableCells,\n    cellLineWidth = defaultVoronoiProps.cellLineWidth,\n    cellLineColor = defaultVoronoiProps.cellLineColor,\n    enablePoints = defaultVoronoiProps.enableCells,\n    pointSize = defaultVoronoiProps.pointSize,\n    pointColor = defaultVoronoiProps.pointColor,\n    role = defaultVoronoiProps.role,\n}: InnerVoronoiProps) => {\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { points, delaunay, voronoi } = useVoronoi({\n        data,\n        width: innerWidth,\n        height: innerHeight,\n        xDomain,\n        yDomain,\n    })\n\n    const layerById: Record<VoronoiLayerId, ReactNode> = {\n        links: null,\n        cells: null,\n        points: null,\n        bounds: null,\n    }\n\n    if (enableLinks && layers.includes('links')) {\n        layerById.links = (\n            <path\n                key=\"links\"\n                stroke={linkLineColor}\n                strokeWidth={linkLineWidth}\n                fill=\"none\"\n                d={delaunay.render()}\n            />\n        )\n    }\n\n    if (enableCells && layers.includes('cells')) {\n        layerById.cells = (\n            <path\n                key=\"cells\"\n                d={voronoi.render()}\n                fill=\"none\"\n                stroke={cellLineColor}\n                strokeWidth={cellLineWidth}\n            />\n        )\n    }\n\n    if (enablePoints && layers.includes('points')) {\n        layerById.points = (\n            <path\n                key=\"points\"\n                stroke=\"none\"\n                fill={pointColor}\n                d={delaunay.renderPoints(undefined, pointSize / 2)}\n            />\n        )\n    }\n\n    if (layers.includes('bounds')) {\n        layerById.bounds = (\n            <path\n                key=\"bounds\"\n                fill=\"none\"\n                stroke={cellLineColor}\n                strokeWidth={cellLineWidth}\n                d={voronoi.renderBounds()}\n            />\n        )\n    }\n\n    const layerContext = useVoronoiLayerContext({\n        points,\n        delaunay,\n        voronoi,\n    })\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {layers.map((layer, i) => {\n                if (layerById[layer as VoronoiLayerId] !== undefined) {\n                    return layerById[layer as VoronoiLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Voronoi = ({\n    theme,\n    ...otherProps\n}: Partial<Omit<VoronoiSvgProps, 'data' | 'width' | 'height'>> &\n    Pick<VoronoiSvgProps, 'data' | 'width' | 'height'>) => (\n    <Container isInteractive={false} animate={false} theme={theme}>\n        <InnerVoronoi {...otherProps} />\n    </Container>\n)\n","import React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport { VoronoiSvgProps } from './types'\nimport { Voronoi } from './Voronoi'\n\ntype ResponsiveVoronoiProps = Partial<Omit<VoronoiSvgProps, 'data' | 'width' | 'height'>> &\n    Pick<VoronoiSvgProps, 'data'>\n\nexport const ResponsiveVoronoi = (props: ResponsiveVoronoiProps) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <Voronoi width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import React, { useRef, useState, useCallback, useMemo } from 'react'\nimport { getRelativeCursor } from '@nivo/core'\nimport { useVoronoiMesh } from './hooks'\nimport { XYAccessor } from './computeMesh'\n\ntype MouseHandler<Datum> = (datum: Datum, event: React.MouseEvent) => void\n\ninterface MeshProps<Datum> {\n    nodes: Datum[]\n    width: number\n    height: number\n    x?: XYAccessor<Datum>\n    y?: XYAccessor<Datum>\n    onMouseEnter?: MouseHandler<Datum>\n    onMouseMove?: MouseHandler<Datum>\n    onMouseLeave?: MouseHandler<Datum>\n    onClick?: MouseHandler<Datum>\n    debug?: boolean\n}\n\nexport const Mesh = <Datum,>({\n    nodes,\n    width,\n    height,\n    x,\n    y,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    debug,\n}: MeshProps<Datum>) => {\n    const elementRef = useRef<SVGGElement>(null)\n    const [currentIndex, setCurrentIndex] = useState<number | null>(null)\n\n    const { delaunay, voronoi } = useVoronoiMesh({\n        points: nodes,\n        x,\n        y,\n        width,\n        height,\n        debug,\n    })\n\n    const voronoiPath = useMemo(() => {\n        if (debug && voronoi) {\n            return voronoi.render()\n        }\n\n        return undefined\n    }, [debug, voronoi])\n\n    const getIndexAndNodeFromEvent = useCallback(\n        event => {\n            if (!elementRef.current) {\n                return [null, null]\n            }\n\n            const [x, y] = getRelativeCursor(elementRef.current, event)\n            const index = delaunay.find(x, y)\n\n            return [index, index !== undefined ? nodes[index] : null] as [number, Datum | null]\n        },\n        [elementRef, delaunay]\n    )\n\n    const handleMouseEnter = useCallback(\n        (event: React.MouseEvent) => {\n            const [index, node] = getIndexAndNodeFromEvent(event)\n            setCurrentIndex(index)\n            if (node) {\n                onMouseEnter?.(node, event)\n            }\n        },\n        [getIndexAndNodeFromEvent, setCurrentIndex, onMouseEnter]\n    )\n\n    const handleMouseMove = useCallback(\n        (event: React.MouseEvent) => {\n            const [index, node] = getIndexAndNodeFromEvent(event)\n            setCurrentIndex(index)\n            if (node) {\n                onMouseMove?.(node, event)\n            }\n        },\n        [getIndexAndNodeFromEvent, setCurrentIndex, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent) => {\n            setCurrentIndex(null)\n            if (onMouseLeave) {\n                let previousNode: Datum | undefined = undefined\n                if (currentIndex !== null) {\n                    previousNode = nodes[currentIndex]\n                }\n                previousNode && onMouseLeave(previousNode, event)\n            }\n        },\n        [setCurrentIndex, currentIndex, onMouseLeave, nodes]\n    )\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent) => {\n            const [index, node] = getIndexAndNodeFromEvent(event)\n            setCurrentIndex(index)\n            if (node) {\n                onClick?.(node, event)\n            }\n        },\n        [getIndexAndNodeFromEvent, setCurrentIndex, onClick]\n    )\n\n    return (\n        <g ref={elementRef}>\n            {debug && voronoi && (\n                <>\n                    <path d={voronoiPath} stroke=\"red\" strokeWidth={1} opacity={0.75} />\n                    {/* highlight current cell */}\n                    {currentIndex !== null && (\n                        <path fill=\"pink\" opacity={0.35} d={voronoi.renderCell(currentIndex)} />\n                    )}\n                </>\n            )}\n            {/* transparent rect to intercept mouse events */}\n            <rect\n                width={width}\n                height={height}\n                fill=\"red\"\n                opacity={0}\n                style={{ cursor: 'auto' }}\n                onMouseEnter={handleMouseEnter}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave}\n                onClick={handleClick}\n            />\n        </g>\n    )\n}\n","import { Delaunay, Voronoi } from 'd3-delaunay'\n\nexport const renderVoronoiToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    voronoi: Voronoi<Delaunay.Point>\n) => {\n    ctx.save()\n\n    ctx.globalAlpha = 0.75\n    ctx.beginPath()\n    voronoi.render(ctx)\n    ctx.strokeStyle = 'red'\n    ctx.lineWidth = 1\n    ctx.stroke()\n\n    ctx.restore()\n}\n\nexport const renderVoronoiCellToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    voronoi: Voronoi<Delaunay.Point>,\n    index: number\n) => {\n    ctx.save()\n\n    ctx.globalAlpha = 0.35\n    ctx.beginPath()\n    voronoi.renderCell(index, ctx)\n    ctx.fillStyle = 'red'\n    ctx.fill()\n\n    ctx.restore()\n}\n"]},"metadata":{},"sourceType":"module"}