{"ast":null,"code":"import axios from 'axios';\nimport { ACCOUNT_SERVER } from '../components/ultils/mise';\nimport { GET_ALL_ACCOUNT, SORT_ACCOUNT, UPDATE_ACCOUNT, DELETE_ACCOUNT, GET_ACCOUNT } from './types';\nexport function getAll(limit, skip, prevState = []) {\n  const data = {\n    skip,\n    limit\n  };\n  console.log(data);\n  const request = axios.post(`${ACCOUNT_SERVER}/getAll`, data).then(response => {\n    console.log(response.data.accounts);\n    let newState = [...prevState, ...response.data.accounts];\n    return {\n      size: response.data.size,\n      accounts: newState\n    };\n  });\n  return {\n    type: GET_ALL_ACCOUNT,\n    payload: request\n  };\n}\nexport function sort(sortBy, list) {\n  switch (sortBy.type) {\n    case \"name\":\n      list.sort((a, b) => {\n        if (a.name > b.name) {\n          console.log(a.name, b.name);\n          return 1 * sortBy.order;\n        } else {\n          console.log(a.name, b.name);\n          return -1 * sortBy.order;\n        }\n      });\n      console.log(list);\n      return list;\n\n    case \"userName\":\n      list.sort((a, b) => {\n        if (a.userName > b.userName) {\n          return 1 * sortBy.order;\n        } else {\n          return -1 * sortBy.order;\n        }\n      });\n      console.log(list);\n      return list;\n\n    case \"email\":\n      console.log(sortBy);\n      list.sort((a, b) => {\n        if (a.email > b.email) {\n          return 1 * sortBy.order;\n        } else {\n          return -1 * sortBy.order;\n        }\n      });\n      console.log(list);\n      return list;\n\n    default:\n      return list;\n  }\n} // export function getReportDetail(id) {\n//     const data = { id }\n//     const request = axios.post(`${REPORT_SERVER}/getDetail`, data)\n//         .then(response => {\n//             console.log(response.data);\n//             return response.data\n//         })\n//     return {\n//         type: GET_REPORT_DETAIL,\n//         payload: request\n//     }\n// }\n// export function updateReport(id) {\n//     const data = { id }\n//     const request = axios.put(`${REPORT_SERVER}/updateReport`, data)\n//         .then(response => {\n//             console.log(response.data);\n//             return response.data\n//         })\n//     return {\n//         type: UPDATE_REPORT,\n//         payload: request\n//     }\n// }\n// export function deletePost(postId, reportId) {\n//     const data = { postId, reportId }\n//     const request = axios.post(`${REPORT_SERVER}/delete_post`, data)\n//         .then(response => {\n//             console.log(response.data);\n//             return response.data\n//         })\n//     return {\n//         type: UPDATE_REPORT,\n//         payload: request\n//     }\n// }","map":{"version":3,"sources":["D:/Kltn/test/social-media/client/src/actions/account_actions.js"],"names":["axios","ACCOUNT_SERVER","GET_ALL_ACCOUNT","SORT_ACCOUNT","UPDATE_ACCOUNT","DELETE_ACCOUNT","GET_ACCOUNT","getAll","limit","skip","prevState","data","console","log","request","post","then","response","accounts","newState","size","type","payload","sort","sortBy","list","a","b","name","order","userName","email"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAAiC,2BAAjC;AACA,SACIC,eADJ,EAEIC,YAFJ,EAGIC,cAHJ,EAIIC,cAJJ,EAKIC,WALJ,QAMO,SANP;AAQA,OAAO,SAASC,MAAT,CAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,SAAS,GAAG,EAAzC,EAA6C;AAChD,QAAMC,IAAI,GAAG;AACTF,IAAAA,IADS;AAETD,IAAAA;AAFS,GAAb;AAIAI,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,QAAMG,OAAO,GAAGd,KAAK,CAACe,IAAN,CAAY,GAAEd,cAAe,SAA7B,EAAuCU,IAAvC,EACXK,IADW,CACNC,QAAQ,IAAI;AACdL,IAAAA,OAAO,CAACC,GAAR,CAAYI,QAAQ,CAACN,IAAT,CAAcO,QAA1B;AACA,QAAIC,QAAQ,GAAG,CACX,GAAGT,SADQ,EAEX,GAAGO,QAAQ,CAACN,IAAT,CAAcO,QAFN,CAAf;AAIA,WAAO;AACHE,MAAAA,IAAI,EAAEH,QAAQ,CAACN,IAAT,CAAcS,IADjB;AAEHF,MAAAA,QAAQ,EAAEC;AAFP,KAAP;AAIH,GAXW,CAAhB;AAYA,SAAO;AACHE,IAAAA,IAAI,EAAEnB,eADH;AAEHoB,IAAAA,OAAO,EAAER;AAFN,GAAP;AAIH;AAED,OAAO,SAASS,IAAT,CAAcC,MAAd,EAAsBC,IAAtB,EAA4B;AAC/B,UAAQD,MAAM,CAACH,IAAf;AACI,SAAK,MAAL;AACII,MAAAA,IAAI,CAACF,IAAL,CAAU,CAACG,CAAD,EAAIC,CAAJ,KAAU;AAChB,YAAID,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB;AACjBhB,UAAAA,OAAO,CAACC,GAAR,CAAYa,CAAC,CAACE,IAAd,EAAmBD,CAAC,CAACC,IAArB;AACA,iBAAO,IAAIJ,MAAM,CAACK,KAAlB;AACH,SAHD,MAGO;AACHjB,UAAAA,OAAO,CAACC,GAAR,CAAYa,CAAC,CAACE,IAAd,EAAoBD,CAAC,CAACC,IAAtB;AACA,iBAAO,CAAC,CAAD,GAAKJ,MAAM,CAACK,KAAnB;AACH;AACJ,OARD;AASAjB,MAAAA,OAAO,CAACC,GAAR,CAAYY,IAAZ;AACA,aAAOA,IAAP;;AACJ,SAAK,UAAL;AACIA,MAAAA,IAAI,CAACF,IAAL,CAAU,CAACG,CAAD,EAAIC,CAAJ,KAAU;AAChB,YAAID,CAAC,CAACI,QAAF,GAAaH,CAAC,CAACG,QAAnB,EAA6B;AACzB,iBAAO,IAAIN,MAAM,CAACK,KAAlB;AACH,SAFD,MAEO;AACH,iBAAO,CAAC,CAAD,GAAKL,MAAM,CAACK,KAAnB;AACH;AACJ,OAND;AAOAjB,MAAAA,OAAO,CAACC,GAAR,CAAYY,IAAZ;AACA,aAAOA,IAAP;;AACJ,SAAK,OAAL;AACIb,MAAAA,OAAO,CAACC,GAAR,CAAYW,MAAZ;AACAC,MAAAA,IAAI,CAACF,IAAL,CAAU,CAACG,CAAD,EAAIC,CAAJ,KAAU;AAChB,YAAID,CAAC,CAACK,KAAF,GAAUJ,CAAC,CAACI,KAAhB,EAAuB;AACnB,iBAAO,IAAIP,MAAM,CAACK,KAAlB;AACH,SAFD,MAEO;AACH,iBAAO,CAAC,CAAD,GAAKL,MAAM,CAACK,KAAnB;AACH;AACJ,OAND;AAOAjB,MAAAA,OAAO,CAACC,GAAR,CAAYY,IAAZ;AACA,aAAOA,IAAP;;AACJ;AAAS,aAAOA,IAAP;AAlCb;AAoCH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from 'axios';\r\nimport { ACCOUNT_SERVER,  } from '../components/ultils/mise';\r\nimport {\r\n    GET_ALL_ACCOUNT,\r\n    SORT_ACCOUNT,\r\n    UPDATE_ACCOUNT,\r\n    DELETE_ACCOUNT,\r\n    GET_ACCOUNT,\r\n} from './types';\r\n\r\nexport function getAll(limit, skip, prevState = []) {\r\n    const data = {\r\n        skip,\r\n        limit,\r\n    }\r\n    console.log(data);\r\n    const request = axios.post(`${ACCOUNT_SERVER}/getAll`, data)\r\n        .then(response => {\r\n            console.log(response.data.accounts);\r\n            let newState = [\r\n                ...prevState,\r\n                ...response.data.accounts\r\n            ]\r\n            return {\r\n                size: response.data.size,\r\n                accounts: newState\r\n            }\r\n        })\r\n    return {\r\n        type: GET_ALL_ACCOUNT,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function sort(sortBy, list) {\r\n    switch (sortBy.type) {\r\n        case \"name\":\r\n            list.sort((a, b) => {\r\n                if (a.name > b.name) {\r\n                    console.log(a.name,b.name);\r\n                    return 1 * sortBy.order\r\n                } else {\r\n                    console.log(a.name, b.name);\r\n                    return -1 * sortBy.order\r\n                }\r\n            })\r\n            console.log(list);\r\n            return list;\r\n        case \"userName\":\r\n            list.sort((a, b) => {\r\n                if (a.userName > b.userName) {\r\n                    return 1 * sortBy.order\r\n                } else {\r\n                    return -1 * sortBy.order\r\n                }\r\n            })\r\n            console.log(list);\r\n            return list;\r\n        case \"email\":\r\n            console.log(sortBy);\r\n            list.sort((a, b) => {\r\n                if (a.email > b.email) {\r\n                    return 1 * sortBy.order\r\n                } else {\r\n                    return -1 * sortBy.order\r\n                }\r\n            })\r\n            console.log(list);\r\n            return list;\r\n        default: return list;\r\n    }\r\n}\r\n\r\n// export function getReportDetail(id) {\r\n//     const data = { id }\r\n//     const request = axios.post(`${REPORT_SERVER}/getDetail`, data)\r\n//         .then(response => {\r\n//             console.log(response.data);\r\n//             return response.data\r\n//         })\r\n//     return {\r\n//         type: GET_REPORT_DETAIL,\r\n//         payload: request\r\n//     }\r\n// }\r\n\r\n// export function updateReport(id) {\r\n//     const data = { id }\r\n//     const request = axios.put(`${REPORT_SERVER}/updateReport`, data)\r\n//         .then(response => {\r\n//             console.log(response.data);\r\n//             return response.data\r\n//         })\r\n//     return {\r\n//         type: UPDATE_REPORT,\r\n//         payload: request\r\n//     }\r\n// }\r\n\r\n// export function deletePost(postId, reportId) {\r\n//     const data = { postId, reportId }\r\n//     const request = axios.post(`${REPORT_SERVER}/delete_post`, data)\r\n//         .then(response => {\r\n//             console.log(response.data);\r\n//             return response.data\r\n//         })\r\n//     return {\r\n//         type: UPDATE_REPORT,\r\n//         payload: request\r\n//     }\r\n// }"]},"metadata":{},"sourceType":"module"}