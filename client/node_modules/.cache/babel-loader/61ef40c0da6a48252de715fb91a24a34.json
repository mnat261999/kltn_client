{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kltn\\\\test\\\\social-media\\\\client\\\\src\\\\components\\\\Profile\\\\userProfile.js\";\nimport React, { Component, useEffect, useState } from 'react';\nimport Layout from '../../hoc/layout';\nimport { connect } from 'react-redux';\nimport { findProfile, findTagged, findPosted, unfollow, follow } from '../../../src/actions/user_action';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport './profile.scss';\nimport { GridDots, LayoutList, Edit, Settings, LayoutGrid, Tag, Dots, Bookmark, CircleX } from 'tabler-icons-react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport faBars from '@fortawesome/fontawesome-free-solid/faBars';\nimport faTh from '@fortawesome/fontawesome-free-solid/faTh';\nimport Story from '../Story/index';\nimport { getAllTags } from '../../actions/tag_actions';\nimport { Link, withRouter, useParams } from 'react-router-dom';\nimport { withTheme } from '@material-ui/core';\nimport { set } from 'mongoose';\nimport { ISO_8601 } from 'moment';\n\nclass UserProfile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      setType: 'posted',\n      setfollowerDiaglog: false,\n      setfollowingDiaglog: false\n    };\n\n    this.handleType = type => {\n      if (type == 'tagged') {\n        this.setState({\n          setType: type\n        });\n        this.props.dispatch(findTagged(this.props.user.userProfile ? this.props.user.userProfile._id : 0));\n      }\n\n      if (type == 'posted') {\n        this.setState({\n          setType: type\n        });\n        this.props.dispatch(findPosted(this.props.user.userProfile ? this.props.user.userProfile._id : 0));\n      }\n\n      if (type == 'saved') {\n        this.setState({\n          setType: type\n        });\n      }\n    };\n\n    this.handleClickunfollow = async id => {\n      await this.props.dispatch(unfollow(id)).then(response => {}); //await this.props.dispatch(findProfile(this.props.user.userData._id))\n\n      this.setState({\n        setSnack: true,\n        setMessage: 'Đã bỏ theo dõi',\n        severity: 'success'\n      });\n    };\n\n    this.handleClickfollow = async id => {\n      await this.props.dispatch(follow(id)).then(response => {}); //await this.props.dispatch(findProfile(this.props.user.userData._id))\n\n      this.setState({\n        setSnack: true,\n        setMessage: 'Đã theo dõi',\n        severity: 'success'\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(findProfile(this.props.user.userData._id));\n    this.props.dispatch(findPosted(this.props.user.userData._id));\n  }\n\n  render() {\n    const postlist = this.props.user.postlist;\n    const typelist = this.props.user.typelist;\n    const userProfile = this.props.user.userProfile;\n    const yourProfile = this.props.user.userData;\n    console.log(userProfile); //const userProfile = this.props.user.userProfile\n\n    return /*#__PURE__*/React.createElement(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop_wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row pro_header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4 img_contain\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.props.user.userData.avt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-7 col-lg-7 col-md-7 col-sm-7 col-7 action_contain\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"prolile_header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 37\n      }\n    }, this.props.user.userData.userName), /*#__PURE__*/React.createElement(Button, {\n      className: \"follow_options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/profilesettings`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 72\n      }\n    }, \"Ch\\u1EC9nh s\\u1EEDa th\\xF4ng tin c\\xE1 nh\\xE2n\")), /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 37\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Settings, {\n      size: 30,\n      strokeWidth: 1,\n      color: \"grey\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 46\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile_number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"number_holder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 41\n      }\n    }, postlist ? postlist.length : 0), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 41\n      }\n    }, \"B\\xE0i vi\\u1EBFt\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"number_holder\",\n      onClick: () => {\n        this.setState({\n          setfollowerDiaglog: true\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 41\n      }\n    }, this.props.user.userData.followers.length), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 41\n      }\n    }, \"Ng\\u01B0\\u1EDDi theo d\\xF5i\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"number_holder\",\n      onClick: () => {\n        this.setState({\n          setfollowingDiaglog: true\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 41\n      }\n    }, this.props.user.userData.followings.length), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 41\n      }\n    }, \"\\u0110ang theo d\\xF5i\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 33\n      }\n    }, this.props.user.userData.bio))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row no-gutters divide_type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    }, this.state.setType == 'posted' ? /*#__PURE__*/React.createElement(Button, {\n      className: \"photo_type\",\n      onClick: () => this.handleType('posted'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(GridDots, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 49\n      }\n    }, \"\\u0110\\xC3 \\u0110\\u0102NG\")) : /*#__PURE__*/React.createElement(Button, {\n      className: \"photo_type diselected\",\n      onClick: () => this.handleType('posted'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(GridDots, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 49\n      }\n    }, \"\\u0110\\xC3 \\u0110\\u0102NG\"))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 33\n      }\n    }, this.state.setType == 'tagged' ? /*#__PURE__*/React.createElement(Button, {\n      className: \"photo_type\",\n      onClick: () => this.handleType('tagged'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Tag, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 49\n      }\n    }, \"\\u0110\\u01AF\\u1EE2C G\\u1EAEN TH\\u1EBA\")) : /*#__PURE__*/React.createElement(Button, {\n      className: \"photo_type diselected\",\n      onClick: () => this.handleType('tagged'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Tag, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 49\n      }\n    }, \"\\u0110\\u01AF\\u1EE2C G\\u1EAEN TH\\u1EBA\"))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 33\n      }\n    }, this.state.setType == 'saved' ? /*#__PURE__*/React.createElement(Button, {\n      className: \"photo_type\",\n      onClick: () => this.handleType('saved'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Bookmark, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 49\n      }\n    }, \"\\u0110\\xC3 L\\u01AFU\")) : /*#__PURE__*/React.createElement(Button, {\n      className: \"photo_type diselected\",\n      onClick: () => this.handleType('saved'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Bookmark, {\n      size: 20,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 49\n      }\n    }, \"\\u0110\\xC3 L\\u01AFU\"))))), typelist ? typelist.map(posts => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-xl-4 image_contain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: posts.images[0].url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-xl-4 image_contain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: posts.images[0].url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-xl-4 image_contain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 51\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: posts.images[0].url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 49\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-xl-4 image_contain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: posts.images[0].url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-xl-4 image_contain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: posts.images[0].url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-xl-4 image_contain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 51\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: posts.images[0].url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 49\n        }\n      }))));\n    }) : '')), /*#__PURE__*/React.createElement(Dialog, {\n      className: \"dialog_cont\",\n      onClose: () => {\n        this.setState({\n          setfollowerDiaglog: false\n        });\n        this.props.dispatch(findProfile(this.props.user.userData._id));\n      },\n      open: this.state.setfollowerDiaglog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 25\n      }\n    }, \"Danh s\\xE1ch theo d\\xF5i\"), /*#__PURE__*/React.createElement(CircleX, {\n      size: 24,\n      strokeWidth: 0.5,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 16\n      }\n    })), userProfile ? userProfile.followers ? userProfile.followers.map(follower => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"follow_list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"list_info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: follower.avt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 33\n        }\n      }, follower.userName)), yourProfile ? yourProfile._id == follower._id ? /*#__PURE__*/React.createElement(Button, {\n        className: \"minibtn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 86\n        }\n      }, \" Trang c\\xE1 nh\\xE2n\") : yourProfile ? yourProfile.followings.includes(follower._id) ? /*#__PURE__*/React.createElement(Button, {\n        className: \"minibtn\",\n        onClick: () => this.handleClickunfollow(follower._id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 37\n        }\n      }, \" \\u0110ang theo d\\xF5i\") : /*#__PURE__*/React.createElement(Button, {\n        className: \"minibtn\",\n        onClick: () => this.handleClickfollow(follower._id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 37\n        }\n      }, \"Theo d\\xF5i\") : null : null);\n    }) : '' : ''), /*#__PURE__*/React.createElement(Dialog, {\n      className: \"dialog_cont\",\n      onClose: () => {\n        this.setState({\n          setfollowingDiaglog: false\n        });\n        this.props.dispatch(findProfile(this.props.user.userData._id));\n      },\n      open: this.state.setfollowingDiaglog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 25\n      }\n    }, \"Danh s\\xE1ch \\u0111ang theo d\\xF5i\"), /*#__PURE__*/React.createElement(CircleX, {\n      size: 24,\n      strokeWidth: 0.5,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 16\n      }\n    })), userProfile ? userProfile.followings ? userProfile.followings.map(following => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"follow_list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"list_info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: following.avt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 33\n        }\n      }, following.userName)), yourProfile ? yourProfile._id == following._id ? /*#__PURE__*/React.createElement(Button, {\n        className: \"minibtn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 87\n        }\n      }, \" Trang c\\xE1 nh\\xE2n\") : yourProfile ? yourProfile.followings.includes(following._id) ? /*#__PURE__*/React.createElement(Button, {\n        className: \"minibtn\",\n        onClick: () => this.handleClickunfollow(following._id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 37\n        }\n      }, \" \\u0110ang theo d\\xF5i\") : /*#__PURE__*/React.createElement(Button, {\n        className: \"minibtn\",\n        onClick: () => this.handleClickfollow(following._id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 37\n        }\n      }, \"Theo d\\xF5i\") : null : null);\n    }) : '' : ''));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps)(withRouter(UserProfile));","map":{"version":3,"sources":["D:/Kltn/test/social-media/client/src/components/Profile/userProfile.js"],"names":["React","Component","useEffect","useState","Layout","connect","findProfile","findTagged","findPosted","unfollow","follow","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Slide","GridDots","LayoutList","Edit","Settings","LayoutGrid","Tag","Dots","Bookmark","CircleX","FontAwesomeIcon","faBars","faTh","Story","getAllTags","Link","withRouter","useParams","withTheme","set","ISO_8601","UserProfile","state","setType","setfollowerDiaglog","setfollowingDiaglog","handleType","type","setState","props","dispatch","user","userProfile","_id","handleClickunfollow","id","then","response","setSnack","setMessage","severity","handleClickfollow","componentDidMount","userData","render","postlist","typelist","yourProfile","console","log","avt","userName","length","followers","followings","bio","map","posts","images","url","follower","includes","following","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\r\nimport Layout from '../../hoc/layout';\r\nimport { connect } from 'react-redux';\r\nimport { findProfile,findTagged,findPosted,unfollow,follow  } from '../../../src/actions/user_action'\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport './profile.scss';\r\nimport { GridDots, LayoutList, Edit, Settings, LayoutGrid, Tag, Dots, Bookmark,CircleX } from 'tabler-icons-react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport faBars from '@fortawesome/fontawesome-free-solid/faBars';\r\nimport faTh from '@fortawesome/fontawesome-free-solid/faTh';\r\nimport Story from '../Story/index';\r\nimport { getAllTags } from '../../actions/tag_actions';\r\nimport { Link, withRouter, useParams } from 'react-router-dom';\r\nimport { withTheme } from '@material-ui/core';\r\nimport { set } from 'mongoose';\r\nimport { ISO_8601 } from 'moment';\r\n\r\nclass UserProfile extends Component {\r\n\r\n    state = {\r\n        setType: 'posted',\r\n        setfollowerDiaglog: false,\r\n        setfollowingDiaglog: false,\r\n    }\r\n    componentDidMount() {\r\n\r\n        this.props.dispatch(findProfile(this.props.user.userData._id))\r\n        this.props.dispatch(findPosted(this.props.user.userData._id))\r\n    }\r\n    handleType = (type) => {\r\n        if (type == 'tagged') {\r\n            this.setState({ setType: type })\r\n            this.props.dispatch(findTagged(this.props.user.userProfile ? this.props.user.userProfile._id : 0))\r\n\r\n        }\r\n        if (type == 'posted') {\r\n            this.setState({ setType: type })\r\n            this.props.dispatch(findPosted(this.props.user.userProfile ? this.props.user.userProfile._id : 0))\r\n        }\r\n        if(type=='saved'){\r\n            this.setState({ setType: type })\r\n        }\r\n    }\r\n    handleClickunfollow = async (id) => {\r\n        await this.props.dispatch(unfollow(id)).then(response => {\r\n\r\n        })\r\n        //await this.props.dispatch(findProfile(this.props.user.userData._id))\r\n        this.setState({ setSnack: true, setMessage: 'Đã bỏ theo dõi', severity: 'success' })\r\n    }\r\n    handleClickfollow = async (id) => {\r\n        await this.props.dispatch(follow(id)).then(response => {\r\n            \r\n        })\r\n        //await this.props.dispatch(findProfile(this.props.user.userData._id))\r\n        this.setState({ setSnack: true, setMessage: 'Đã theo dõi', severity: 'success' })\r\n    }\r\n    render() {\r\n        const postlist = this.props.user.postlist\r\n        const typelist = this.props.user.typelist\r\n        const userProfile = this.props.user.userProfile\r\n        const yourProfile = this.props.user.userData\r\n        console.log(userProfile)\r\n        //const userProfile = this.props.user.userProfile\r\n        return (\r\n            <Layout>\r\n                <div className=\"shop_container\">\r\n                    <div className=\"shop_wrapper\">\r\n                        <div className=\"row pro_header\">\r\n                            <div className=\"col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4 img_contain\">\r\n                                <div className=\"profile-img\">\r\n                                    <img src={this.props.user.userData.avt}></img>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-xl-7 col-lg-7 col-md-7 col-sm-7 col-7 action_contain\">\r\n                                <div className=\"prolile_header\">\r\n                                    <div className=\"name\">{this.props.user.userData.userName}</div>\r\n                                    <Button className=\"follow_options\"><Link to={`/profilesettings`}>Chỉnh sửa thông tin cá nhân</Link></Button>\r\n                                    <Button> <Settings size={30} strokeWidth={1} color=\"grey\" /></Button>\r\n                                </div>\r\n                                <div className=\"profile_number\">\r\n                                    <div className=\"number_holder\">\r\n                                        <div className=\"number\">{postlist ? postlist.length : 0}</div>\r\n                                        <div className=\"type\">Bài viết</div>\r\n                                    </div>\r\n                                    <div className=\"number_holder\" onClick={()=>{this.setState({setfollowerDiaglog:true})}}>\r\n                                        <div className=\"number\">{this.props.user.userData.followers.length}</div>\r\n                                        <div className=\"type\">Người theo dõi</div>\r\n                                    </div>\r\n                                    <div className=\"number_holder\" onClick={()=>{this.setState({setfollowingDiaglog:true})}}>\r\n                                        <div className=\"number\">{this.props.user.userData.followings.length}</div>\r\n                                        <div className=\"type\">Đang theo dõi</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"bio\">\r\n                                    {this.props.user.userData.bio}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row no-gutters divide_type\">\r\n                            <ul>\r\n                                <li>\r\n                                    {\r\n                                        this.state.setType == 'posted' ?\r\n                                            <Button className=\"photo_type\" onClick={() => this.handleType('posted')}>\r\n                                                <GridDots size={20} strokeWidth={1} color=\"black\"></GridDots>\r\n                                                <h2>ĐÃ ĐĂNG</h2>\r\n                                            </Button> :\r\n                                            <Button className=\"photo_type diselected\" onClick={() => this.handleType('posted')}>\r\n                                                <GridDots size={20} strokeWidth={1} color=\"black\"></GridDots>\r\n                                                <h2>ĐÃ ĐĂNG</h2>\r\n                                            </Button>\r\n\r\n                                    }\r\n                                </li>\r\n                                <li>\r\n                                    {\r\n                                        this.state.setType == 'tagged' ?\r\n                                            <Button className=\"photo_type\" onClick={() => this.handleType('tagged')}>\r\n                                                <Tag size={20} strokeWidth={1} color=\"black\"></Tag>\r\n                                                <h2>ĐƯỢC GẮN THẺ</h2>\r\n                                            </Button>\r\n                                            :\r\n                                            <Button className=\"photo_type diselected\" onClick={() => this.handleType('tagged')}>\r\n                                                <Tag size={20} strokeWidth={1} color=\"black\"></Tag>\r\n                                                <h2>ĐƯỢC GẮN THẺ</h2>\r\n                                            </Button>\r\n                                    }\r\n                                </li>\r\n                                <li>\r\n                                    {\r\n                                        this.state.setType == 'saved' ?\r\n                                            <Button className=\"photo_type\" onClick={() => this.handleType('saved')}>\r\n                                                <Bookmark size={20} strokeWidth={1} color=\"black\"></Bookmark>\r\n                                                <h2>ĐÃ LƯU</h2>\r\n                                            </Button>\r\n                                            :\r\n                                            <Button className=\"photo_type diselected\" onClick={() => this.handleType('saved')}>\r\n                                                <Bookmark size={20} strokeWidth={1} color=\"black\"></Bookmark>\r\n                                                <h2>ĐÃ LƯU</h2>\r\n                                            </Button>\r\n                                    }\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        {\r\n                            typelist ? typelist.map(posts => {\r\n                                return (\r\n                                    <div>\r\n                                        <div className=\"row body\">\r\n\r\n                                            <div className=\"col-xl-4 image_contain\">\r\n                                                <img src={posts.images[0].url}></img>\r\n                                            </div>\r\n                                            <div className=\"col-xl-4 image_contain\">\r\n\r\n                                                <img src={posts.images[0].url}></img>\r\n                                            </div><div className=\"col-xl-4 image_contain\">\r\n\r\n                                                <img src={posts.images[0].url}></img>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        <div className=\"row body\">\r\n\r\n                                            <div className=\"col-xl-4 image_contain\">\r\n                                                <img src={posts.images[0].url}></img>\r\n                                            </div>\r\n                                            <div className=\"col-xl-4 image_contain\">\r\n\r\n                                                <img src={posts.images[0].url}></img>\r\n                                            </div><div className=\"col-xl-4 image_contain\">\r\n\r\n                                                <img src={posts.images[0].url}></img>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                )\r\n                            }) : ''\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <Dialog className=\"dialog_cont\" onClose={() => {this.setState({ setfollowerDiaglog: false });this.props.dispatch(findProfile(this.props.user.userData._id))}} open={this.state.setfollowerDiaglog} >\r\n                    <div className=\"header\">\r\n                        <h5>Danh sách theo dõi</h5>\r\n               <CircleX size={24} strokeWidth={0.5} color=\"black\"></CircleX>\r\n                    </div>\r\n                {\r\n                    userProfile ? (userProfile.followers? userProfile.followers.map(follower=>{\r\n                        return(\r\n                            <div className=\"follow_list\">\r\n                                <div className=\"list_info\">\r\n                                <img src={follower.avt}></img>\r\n                                <h2>{follower.userName}</h2>\r\n                                </div>\r\n                                {\r\n                                    yourProfile? (yourProfile._id == follower._id ?  <Button className=\"minibtn\"> Trang cá nhân</Button>\r\n                                    :\r\n                                    yourProfile? yourProfile.followings.includes(follower._id)?\r\n                                    <Button className=\"minibtn\" onClick={()=>this.handleClickunfollow(follower._id)} > Đang theo dõi</Button> \r\n                                    :\r\n                                    <Button className=\"minibtn\" onClick={()=>this.handleClickfollow(follower._id)}>Theo dõi</Button>\r\n                                    :null)\r\n                                    :null\r\n                                }\r\n                            </div>        \r\n                        )\r\n                    }):''):''\r\n                }\r\n                </Dialog>\r\n                <Dialog className=\"dialog_cont\" onClose={() => {this.setState({ setfollowingDiaglog: false }); this.props.dispatch(findProfile(this.props.user.userData._id))}} open={this.state.setfollowingDiaglog} >\r\n                    <div className=\"header\">\r\n                        <h5>Danh sách đang theo dõi</h5>\r\n               <CircleX size={24} strokeWidth={0.5} color=\"black\"></CircleX>\r\n                    </div>\r\n                {\r\n                    userProfile ? (userProfile.followings? userProfile.followings.map(following=>{\r\n                        return(\r\n                            <div className=\"follow_list\">\r\n                                <div className=\"list_info\">\r\n                                <img src={following.avt}></img>\r\n                                <h2>{following.userName}</h2>\r\n                                </div>\r\n                                {\r\n                                    yourProfile? (yourProfile._id == following._id ?  <Button className=\"minibtn\"> Trang cá nhân</Button>\r\n                                    :\r\n                                    yourProfile? yourProfile.followings.includes(following._id)?\r\n                                    <Button className=\"minibtn\" onClick={()=>this.handleClickunfollow(following._id)} > Đang theo dõi</Button>\r\n                                    :\r\n                                    <Button className=\"minibtn\" onClick={()=>this.handleClickfollow(following._id)}>Theo dõi</Button>\r\n                                    :null)\r\n                                    :null\r\n                                }\r\n                               \r\n                            </div>\r\n                                       \r\n                        )\r\n                    }):''):''\r\n                }\r\n                </Dialog>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(UserProfile));"]},"metadata":{},"sourceType":"module"}