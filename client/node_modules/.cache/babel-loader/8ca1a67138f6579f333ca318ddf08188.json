{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kltn\\\\test\\\\social-media\\\\client\\\\src\\\\components\\\\Register_login\\\\login.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport FormField from '../ultils/Form/FormField';\nimport { update, generateData, ifFormValid } from '../ultils/Form/FormActions';\nimport { loginUser } from '../../actions/user_action';\nimport { withRouter } from 'react-router-dom';\nimport MyButton from '../ultils/button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport GoogleLoginButton from '../GoggleLoginButton/GoogleLoginButton';\nimport FacebookLoginButton from '../FacebookLoginButton/FacebookLoginButton';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formError: false,\n      formMessage: \"\",\n      formSuccess: '',\n      formData: {\n        email: {\n          element: 'input',\n          value: '',\n          config: {\n            label: 'Tên tài khoản',\n            name: 'email_input',\n            type: 'email',\n            placeholder: ''\n          },\n          validation: {\n            required: true,\n            email: true\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showlabel: true\n        },\n        password: {\n          element: 'password',\n          value: '',\n          config: {\n            name: 'password_input',\n            type: 'password',\n            placeholder: ''\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          validationMessage: ''\n        }\n      }\n    };\n\n    this.updateForm = element => {\n      //Hàm update được viết trong FormActions.js\n      const newFormdata = update(element, this.state.formData, 'login'); //Cập nhật lại State\n\n      this.setState({\n        formError: false,\n        formData: newFormdata\n      });\n    };\n\n    this.submitForm = event => {\n      event.preventDefault();\n      let dataToSubmit = generateData(this.state.formData, 'login');\n      let formIsValid = ifFormValid(this.state.formData, 'login');\n\n      if (formIsValid) {\n        this.props.dispatch(loginUser(dataToSubmit)).then(response => {\n          if (response.payload.loginSuccess) {\n            console.log(response.payload);\n            this.props.history.push('/newfeed');\n          } else {\n            this.setState({\n              formError: true,\n              formMessage: response.message\n            });\n          }\n        });\n      } else {\n        this.setState({\n          formError: true\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signin__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"signin__form\",\n      onSubmit: event => this.submitForm(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signin__logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"logo\",\n      src: require('../../asset/login-page/logo2x.png'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"stunning_text\",\n      src: require('../../asset/login-page/stun2x.png'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(FacebookLoginButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(GoogleLoginButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"or_label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }, \"HO\\u1EB6C\"), /*#__PURE__*/React.createElement(FormField, {\n      id: 'email',\n      formData: this.state.formData.email //Hàm change nhận vào một element và gọi đến hàm updateForm(element) \n      ,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"password_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }\n    }, \"M\\u1EADt kh\\u1EA9u\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"password_forgot_link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(MyButton, {\n      type: \"default\",\n      title: \"Qu\\xEAn m\\u1EADt kh\\u1EA9u\",\n      linkTo: \"/reset_password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(FormField, {\n      id: 'password',\n      formData: this.state.formData.password,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }\n    }), this.state.formError ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error_message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 37\n      }\n    }, \"M\\u1EADt kh\\u1EA9u ho\\u1EB7c Email kh\\xF4ng ch\\xEDnh x\\xE1c\")) : '', /*#__PURE__*/React.createElement(\"button\", {\n      className: \"signin__button\",\n      onClick: event => {\n        this.submitForm(event);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 25\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register_wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 29\n      }\n    }, \"Ch\\u01B0a c\\xF3 t\\xE0i kho\\u1EA3n?\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register_link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(MyButton, {\n      type: \"default\",\n      title: \"\\u0110\\u0103ng k\\xFD\",\n      linkTo: \"/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 33\n      }\n    }))))));\n  }\n\n} //HOC connect và withRouter \n//gắn vào component Login các props dispatch, getStored, history,....\n\n\nexport default connect()(withRouter(Login));","map":{"version":3,"sources":["D:/Kltn/test/social-media/client/src/components/Register_login/login.js"],"names":["React","Component","connect","FormField","update","generateData","ifFormValid","loginUser","withRouter","MyButton","FontAwesomeIcon","GoogleLoginButton","FacebookLoginButton","Login","state","formError","formMessage","formSuccess","formData","email","element","value","config","label","name","type","placeholder","validation","required","valid","touched","validationMessage","showlabel","password","updateForm","newFormdata","setState","submitForm","event","preventDefault","dataToSubmit","formIsValid","props","dispatch","then","response","payload","loginSuccess","console","log","history","push","message","render","require"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FormField from '../ultils/Form/FormField';\r\nimport { update, generateData, ifFormValid } from '../ultils/Form/FormActions';\r\nimport { loginUser } from '../../actions/user_action'\r\nimport { withRouter } from 'react-router-dom';\r\nimport MyButton from '../ultils/button'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport GoogleLoginButton from '../GoggleLoginButton/GoogleLoginButton';\r\nimport FacebookLoginButton from '../FacebookLoginButton/FacebookLoginButton';\r\nclass Login extends Component {\r\n    state = {\r\n        formError: false,\r\n        formMessage: \"\",\r\n        formSuccess: '',\r\n        formData: {\r\n            email: {\r\n                element: 'input',\r\n                value: '',\r\n                config: {\r\n                    label: 'Tên tài khoản',\r\n                    name: 'email_input',\r\n                    type: 'email',\r\n                    placeholder: ''\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    email: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: true\r\n            },\r\n            password: {\r\n                element: 'password',\r\n                value: '',\r\n                config: {\r\n                    name: 'password_input',\r\n                    type: 'password',\r\n                    placeholder: ''\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                validationMessage: '',\r\n            }\r\n        }\r\n    }\r\n    //Hàm này truyền vào props change của formfield để khi có thay đổi trên Formfield\r\n    //thì gọi đến callback Funciton này xử lý các thay đổi và cập nhật lại state -> reRender lại component\r\n    updateForm = (element) => {\r\n        //Hàm update được viết trong FormActions.js\r\n        const newFormdata = update(element, this.state.formData, 'login');\r\n        //Cập nhật lại State\r\n        this.setState({\r\n            formError: false,\r\n            formData: newFormdata\r\n        });\r\n    }\r\n    submitForm = (event) => {\r\n        event.preventDefault();\r\n\r\n        let dataToSubmit = generateData(this.state.formData, 'login');\r\n\r\n        let formIsValid = ifFormValid(this.state.formData, 'login');\r\n\r\n        if (formIsValid) {\r\n            this.props.dispatch(loginUser(dataToSubmit)).then(response => {\r\n                if (response.payload.loginSuccess) {\r\n                    console.log(response.payload);\r\n                    this.props.history.push('/newfeed')\r\n                } else {\r\n                    this.setState({\r\n                        formError: true,\r\n                        formMessage: response.message\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                formError: true\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"signin\">\r\n                <div className='signin__container'>\r\n                    <form className='signin__form' onSubmit={(event) => this.submitForm(event)}>\r\n                        {/* Component Formfild trả lại các thành phần của form \r\n                    như text, checkBox, button,... dựa vào prop id \r\n                        Component Formfield nhận vào 3 props:\r\n                        - id: id của trường này\r\n                        - formData: dữ liệu cho field, sử dụng những dữ liệu trong formData này để xử lý các sự kiện thay đổi trên field, gồm có:\r\n                                    element: là element ( thẻ input, checkBox, button, .....)\r\n                                    value: giá trị của element '',\r\n                                    config: là 1 object là các props của Thẻ ví dụ \r\n                                        {\r\n                                            name: 'email_input',\r\n                                            type: 'email',\r\n                                            placeholder: 'Enter your email'\r\n                                        },\r\n                                    validation: là 1 Obj chứa các kiểu xác thực là key, \r\n                                                nếu value là true thì field này phải đc xác thực theo kiểu đó, ví dụ: \r\n                                                {\r\n                                                    required: true,\r\n                                                    email: true\r\n                                                },\r\n                                    valid: Xác thực hay không ( false/ true)\r\n                                    touched: Có đc touch hay không (false/true) \r\n                                    validationMessage: Lưu message sau khi xác thực ('thành công'/'thất bại'),\r\n                        -change: callBackfunction dùng để xử lý sự kiện thay đổi trên field */}\r\n\r\n                        <div className='signin__logo'>\r\n                            <img className=\"logo\" src={require('../../asset/login-page/logo2x.png')} />\r\n                            <img className=\"stunning_text\" src={require('../../asset/login-page/stun2x.png')} />\r\n                        </div>\r\n                        <FacebookLoginButton />\r\n                        <GoogleLoginButton />\r\n                        <div className=\"or_label\">\r\n                            HOẶC\r\n                        </div>\r\n                        <FormField\r\n                            id={'email'}\r\n                            formData={this.state.formData.email}\r\n                            //Hàm change nhận vào một element và gọi đến hàm updateForm(element) \r\n                            change={(element) => this.updateForm(element)}\r\n                        />\r\n                        <div className=\"password_container\">\r\n                            <div className=\"label\">\r\n                                Mật khẩu\r\n                            </div>\r\n                            <div className=\"password_forgot_link\">\r\n                                <MyButton\r\n                                    type=\"default\"\r\n                                    title=\"Quên mật khẩu\"\r\n                                    linkTo=\"/reset_password\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <FormField\r\n                            id={'password'}\r\n                            formData={this.state.formData.password}\r\n                            change={(element) => this.updateForm(element)}\r\n                        />\r\n                        {\r\n                            this.state.formError ?\r\n                                <div className=\"error_message\">\r\n                                    <p>Mật khẩu hoặc Email không chính xác</p>\r\n                                </div>\r\n                            : ''\r\n                        }\r\n\r\n                        <button className='signin__button' onClick={(event) => { this.submitForm(event) }}>Login</button>\r\n                        <div className=\"register_wrapper\">\r\n                            <div className=\"label\">\r\n                                Chưa có tài khoản?\r\n                        </div>\r\n                            <div className=\"register_link\">\r\n                                <MyButton\r\n                                    type=\"default\"\r\n                                    title=\"Đăng ký\"\r\n                                    linkTo=\"/register\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n//HOC connect và withRouter \r\n//gắn vào component Login các props dispatch, getStored, history,....\r\nexport default connect()(withRouter(Login));"]},"metadata":{},"sourceType":"module"}