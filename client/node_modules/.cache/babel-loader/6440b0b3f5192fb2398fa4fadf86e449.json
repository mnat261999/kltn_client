{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kltn\\\\test\\\\social-media\\\\client\\\\src\\\\components\\\\Message\\\\index.js\";\nimport React, { Component, useEffect, useState } from 'react';\nimport Layout from '../../hoc/layout';\nimport { connect } from 'react-redux';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Portal from '@material-ui/core/Portal';\nimport { getMessage, getConversation, sendMessage, seenMessage, sendimg, getGroup, seenAll, getGroupMessage, sendGroupMessage, createGroup, findPersonal, editTitle, addMember, removeMember, changegroupimg, uploadgroupimg, seenGroupMess, disableGroupMess } from '../../../src/actions/message_action';\nimport { follow, unfollow, auth } from '../../../src/actions/user_action';\nimport GroupMess from './groupmess';\nimport './Message.scss';\nimport { update, generateData } from '../ultils/Form/FormActions';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Settings, Dots, Heart, Pencil, Search, Phone, Photo, Sticker, Send, Ghost, Edit, Circle, CircleCheck, User, Users } from 'tabler-icons-react';\nimport SearchBar from './SearchBar/index';\nimport Pusher, { Members } from 'pusher-js';\nimport { Button, Dialog, LinearProgress, Checkbox, Chip, Avatar, ClickAwayListener } from '@material-ui/core';\nimport { AvatarGroup } from '@material-ui/lab';\nimport EditMess from './editchat';\nimport ReactDOM from 'react-dom';\nimport { Picker } from 'emoji-mart';\nimport Picker2 from 'react-giphy-component';\nimport styled from 'styled-components';\nimport moment from 'moment';\nimport Group from './group';\nimport { default as SearchBox } from '.././SearchMess';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GifPicker = styled(Picker2)`\n`;\n_c = GifPicker;\nconst StyleLink = styled(Link)`\ncolor:black;\n`;\nconst StyleClip = styled(Chip)`\nborder-radius: 4px;\nbackground-color: #e1f5fe;\ncolor: #0095f6;\nmargin: 4px;\n`;\n_c2 = StyleClip;\n\nclass Message extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      emojiToggle: false,\n      gifToggle: false,\n      heart: 'http://res.cloudinary.com/dlikyyfd1/image/upload/v1610161677/1610161676299.png',\n      userName: null,\n      sending: false,\n      _id: null,\n      avt: null,\n      content: '',\n      link: '',\n      mess: {\n        sentTo: '',\n        sentBy: '',\n        content: '',\n        type: ''\n      },\n      newmess: false,\n      sendinguserlist: [],\n      sendinguserlistid: [],\n      view: 'ls',\n      editmess: false\n    };\n\n    this.scrollToBottom = () => {\n      const messagesContainer = ReactDOM.findDOMNode(this.messagesContainer);\n      messagesContainer.scrollTop = messagesContainer.scrollHeight;\n    };\n\n    this.emojiClick = () => {\n      this.setState({\n        emojiToggle: !this.state.emojiToggle\n      });\n    };\n\n    this.GifIconClick = () => {\n      this.setState({\n        gifToggle: !this.state.gifToggle\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        content: event.target.value\n      });\n    };\n\n    this.submitForm = event => {\n      event.preventDefault();\n\n      if (this.state.content.trim()) {\n        this.state.mess.content = this.state.content;\n        this.state.mess.type = 'text';\n        let dataToSubmit = this.state.mess;\n        console.log(dataToSubmit);\n        this.props.dispatch(sendGroupMessage(dataToSubmit));\n        this.setState({\n          content: '',\n          sending: true\n        });\n      }\n    };\n\n    this.onFileChange = async event => {\n      this.setState({\n        sending: true\n      });\n      await this.props.dispatch(sendimg(event.target.files[0]));\n      this.setState({\n        link: this.props.messages.sendimg ? this.props.messages.sendimg.url : 0\n      });\n      this.state.mess.content = this.state.link;\n      this.state.mess.type = 'img';\n      let dataToSubmit = this.state.mess;\n      this.props.dispatch(sendGroupMessage(dataToSubmit));\n      this.setState({\n        sending: true\n      });\n    };\n\n    this.sendGif = url => {\n      this.state.link = url;\n      this.state.mess.content = this.state.link;\n      this.state.mess.type = 'img';\n      let dataToSubmit = this.state.mess;\n      this.props.dispatch(sendGroupMessage(dataToSubmit));\n      this.setState({\n        sending: true\n      });\n    };\n\n    this.sendHeartIcon = () => {\n      this.setState({\n        sending: true\n      });\n      this.state.mess.content = this.state.heart;\n      this.state.mess.type = 'sticker';\n      let dataToSubmit = this.state.mess;\n      this.props.dispatch(sendGroupMessage(dataToSubmit));\n      this.setState({\n        content: '',\n        sending: true\n      });\n    };\n\n    this.addEmoji = e => {\n      const input = document.getElementById('description_textarea');\n      var starPros = document.getElementById('description_textarea').selectionStart;\n      var endPros = document.getElementById('description_textarea').selectionEnd;\n      let event = e.native;\n      var value = JSON.stringify(event);\n      var emote = value.replace(/['\"]+/g, ''); // var unquoted = emote.replace(/(\\{|,)\\s*(.+?)\\s*:/g, '$1 \"$2\":')\n\n      this.setState({\n        content: this.state.content.substr(0, starPros) + emote + this.state.content.substr(endPros, this.state.content.length)\n      });\n      input.focus();\n      document.execCommand(\"copy\");\n    };\n\n    this.removelist = (id, name) => {\n      const list = this.state.sendinguserlist;\n      list.splice(this.state.sendinguserlist.indexOf(name), 1);\n      this.setState({\n        sendinguserlist: list\n      });\n      const listid = this.state.sendinguserlistid;\n      listid.splice(this.state.sendinguserlistid.indexOf(id), 1);\n      this.setState({\n        sendinguserlistid: listid\n      });\n    };\n\n    this.createGroup = list => {\n      console.log('clicked');\n\n      if (list.length <= 1) {\n        this.props.dispatch(findPersonal(list[0])).then(data => this.props.history.push(`/message/inbox/${this.props.messages.conversationinfo._id}`));\n      } else {\n        list.push(this.props.user.userData._id);\n        this.props.dispatch(createGroup(list)).then(data => this.props.history.push(`/message/inbox/${this.props.messages.newgroup._id}`));\n      }\n\n      this.setState({\n        newmess: false\n      });\n    };\n\n    this.addList = (id, name) => {\n      const list = this.state.sendinguserlist;\n      list.push(name);\n      this.setState({\n        sendinguserlist: list\n      });\n      const listid = this.state.sendinguserlistid;\n      listid.push(id);\n      this.setState({\n        sendinguserlistid: listid\n      });\n    };\n\n    this.seenMessage = id => {\n      this.props.dispatch(seenMessage(id));\n    };\n\n    this.editTitle = (id, title) => {\n      this.props.dispatch(editTitle(id, title));\n      this.setState({\n        editmess: false\n      });\n    };\n\n    this.createGroupEvent = des => {\n      this.setState({\n        sending: true\n      });\n      this.state.mess.content = des;\n      this.state.mess.type = 'event';\n      let dataToSubmit = this.state.mess;\n      this.props.dispatch(sendGroupMessage(dataToSubmit));\n      this.setState({\n        content: '',\n        sending: true\n      });\n    };\n\n    this.addMember = (id, userlist, userlistid) => {\n      this.props.dispatch(addMember(id, userlist, userlistid));\n      this.setState({\n        editmess: false\n      });\n    };\n\n    this.removeMember = (id, uid) => {\n      this.props.dispatch(removeMember(id, uid));\n      this.setState({\n        editmess: false\n      });\n    };\n\n    this.onGroupImgChange = async event => {\n      this.setState({\n        sending: true\n      });\n      await this.props.dispatch(uploadgroupimg(event.target.files[0]));\n      await this.props.dispatch(changegroupimg(this.props.messages.groupmesslist._id, this.props.messages.img ? this.props.messages.img.url : '')).then(response => {\n        console.log(response);\n\n        if (response.payload.success == false) {\n          this.setState({\n            loading: false,\n            editmess: false\n          });\n        } else {\n          this.setState({\n            loading: false,\n            editmess: false\n          });\n        }\n      });\n    };\n\n    this.seenGroupMess = id => {\n      this.props.dispatch(seenGroupMess(id));\n    };\n\n    this.disableGroupMess = async id => {\n      await this.props.dispatch(disableGroupMess(id));\n      await this.props.dispatch(getGroupMessage(this.props.match.params.id));\n      this.setState({\n        editmess: false\n      });\n    };\n\n    this.outGroup = async (id, uid) => {\n      await this.props.dispatch(removeMember(id, uid));\n      await this.props.history.push('/message/inbox');\n      await this.props.dispatch(getGroupMessage(this.props.match.params.id));\n      await window.location.reload();\n      this.setState({\n        editmess: false\n      });\n    };\n\n    this.follow = async id => {\n      await this.props.dispatch(follow(id));\n      await this.props.dispatch(auth());\n    };\n\n    this.unfollow = async id => {\n      await this.props.dispatch(unfollow(id));\n      await this.props.dispatch(auth());\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getGroup()); /// Bind với pusher để làm realtime\n\n    const pusher = new Pusher('c0e96b0fff8d0edac17d', {\n      cluster: 'mt1',\n      encrypted: true,\n      authEndpoint: `http://localhost:3002/api/pusher/auth/${this.props.user.userData._id}`\n    });\n    const channel5 = pusher.subscribe('messages');\n    channel5.bind('newMessage', data => {\n      if (data.change.fullDocument.sentTo == this.props.user.userData._id || data.change.fullDocument.sentBy == this.props.user.userData._id) {\n        this.props.dispatch(getConversation());\n        this.setState({\n          sending: false\n        });\n      }\n    });\n    const groupchan = pusher.subscribe('groups');\n    groupchan.bind('newGroupmess', data => {\n      if (data.change.documentKey._id == this.props.match.params.id) {\n        this.props.dispatch(getGroupMessage(this.props.match.params.id));\n        this.setState({\n          sending: false\n        });\n      }\n\n      if (data.change.operationType == \"insert\") {\n        if (data.change.fullDocument.user.includes(this.props.user.userData._id)) {\n          this.props.dispatch(getGroup());\n        }\n      }\n\n      this.props.messages.grouplist.map(conver => {\n        if (conver._id == data.change.documentKey._id) {\n          this.props.dispatch(getGroup());\n        }\n      });\n\n      if (data.change.operationType == \"update\") {\n        if (data.change.updateDescription ? data.change.updateDescription.updatedFields ? data.change.updateDescription.updatedFields.user ? data.change.updateDescription.updatedFields.user.includes(this.props.user.userData._id) : '' : '' : '') {\n          this.props.dispatch(getGroup());\n        }\n      }\n    });\n    const conver = pusher.subscribe('conversations');\n    conver.bind('changeConver', data => {\n      if (data.change.documentKey._id == this.props.messages.messlist._id) {\n        this.props.dispatch(getMessage(this.props.match.params.id));\n      }\n    });\n    this.scrollToBottom();\n    this.props.dispatch(getGroupMessage(this.props.match.params.id)).then(data => {\n      this.setState({\n        userName: this.props.messages.groupmesslist.user,\n        _id: this.props.messages.groupmesslist._id\n      });\n      this.state.mess.sentTo = this.state._id;\n      this.state.mess.sentBy = this.props.user.userData._id;\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.location.key !== this.props.location.key) {\n      this.setState({\n        sending: true\n      });\n      this.props.dispatch(getGroupMessage(this.props.match.params.id)).then(data => {\n        this.setState({\n          userName: this.props.messages.groupmesslist.user,\n          _id: this.props.messages.groupmesslist._id\n        });\n        this.state.mess.sentTo = this.state._id;\n        this.state.mess.sentBy = this.props.user.userData._id;\n        this.setState({\n          sending: false\n        });\n      });\n    }\n\n    this.scrollToBottom();\n  }\n\n  render() {\n    console.log(this.props.messages);\n    console.log(this.props.messages.grouplist);\n    const mess = this.props.messages;\n    const yourProfile = this.props.user.userData;\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message_container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message_wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row no-gutters\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4 left_contain\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat_info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"chat_settings\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: \" Tr\\xF2 chuy\\u1EC7n\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"chat_icon\",\n                    children: [/*#__PURE__*/_jsxDEV(Pencil, {\n                      onClick: () => this.setState({\n                        newmess: true\n                      }),\n                      size: 32,\n                      strokeWidth: 1,\n                      color: \"black\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 299,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Settings, {\n                      size: 32,\n                      strokeWidth: 1,\n                      color: \"black\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 301,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(SearchBox, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"seenall\",\n                  onClick: () => this.props.dispatch(seenAll()),\n                  children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                    children: \"Read all\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Group, {\n                messages: this.props.messages,\n                yourProfile: yourProfile,\n                seenGroupMess: this.seenGroupMess\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 right_contain\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"top_info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"user_info\",\n                  children: [this.props.messages.groupmesslist ? this.props.messages.groupmesslist.type == 'personal' ? this.props.messages.groupmesslist.user.map(users => {\n                    return users._id == yourProfile._id ? '' : /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: users.avt\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 341,\n                      columnNumber: 93\n                    }, this);\n                  }) : this.props.messages.groupmesslist ? this.props.messages.groupmesslist.groupimg ? /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: this.props.messages.groupmesslist.groupimg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 53\n                  }, this) : /*#__PURE__*/_jsxDEV(AvatarGroup, {\n                    max: 3,\n                    children: this.props.messages.groupmesslist ? this.props.messages.groupmesslist.user ? this.props.messages.groupmesslist.user.map(users => {\n                      return /*#__PURE__*/_jsxDEV(Avatar, {\n                        src: users ? users.avt : ''\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 352,\n                        columnNumber: 69\n                      }, this);\n                    }) : '' : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 53\n                  }, this) : '' : '', this.props.messages.groupmesslist ? this.props.messages.groupmesslist.type == 'personal' ? this.props.messages.groupmesslist.user.map(users => {\n                    return users._id == yourProfile._id ? '' : /*#__PURE__*/_jsxDEV(\"h2\", {\n                      children: users.userName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 363,\n                      columnNumber: 93\n                    }, this);\n                  }) : this.props.messages.groupmesslist ? this.props.messages.groupmesslist.title ? /*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: this.props.messages.groupmesslist.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 53\n                  }, this) : this.props.messages.groupmesslist ? this.props.messages.groupmesslist.user ? this.props.messages.groupmesslist.user.map(users => {\n                    return /*#__PURE__*/_jsxDEV(\"h2\", {\n                      children: [users.userName, \",\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 372,\n                      columnNumber: 61\n                    }, this);\n                  }) : '' : '' : '' : '']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 37\n                }, this), this.props.messages.groupmesslist ? this.props.messages.groupmesslist.messagelist ? /*#__PURE__*/_jsxDEV(Dots, {\n                  size: 24,\n                  strokeWidth: 0,\n                  fill: \"black\",\n                  onClick: () => this.setState({\n                    editmess: true\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 126\n                }, this) : '' : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 33\n              }, this), this.state.sending == true ? /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 66\n              }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message\",\n                ref: el => {\n                  this.messagesContainer = el;\n                },\n                children: [this.props.messages.groupmesslist ? this.props.messages.groupmesslist.messagelist ? this.props.messages.groupmesslist.messagelist.map(mess => {\n                  return /*#__PURE__*/_jsxDEV(GroupMess, {\n                    mess: mess,\n                    yourProfile: yourProfile // seenMessage={this.props.seenMessage}\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 395,\n                    columnNumber: 49\n                  }, this);\n                }) : '' : '', /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row no-gutters sent\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-xl-6\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 407,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-xl-6 sent_mess\",\n                    children: this.props.messages.groupmesslist ? this.props.messages.groupmesslist.seenBy ? this.props.messages.groupmesslist.seenBy.map(seen => {\n                      return /*#__PURE__*/_jsxDEV(\"img\", {\n                        className: \"seen_avt\",\n                        src: seen.avt ? seen.avt : ''\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 414,\n                        columnNumber: 57\n                      }, this);\n                    }) : '' : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 409,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 37\n                }, this), this.state.gifToggle ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"gif_picker\",\n                  style: {\n                    position: 'fixed',\n                    zIndex: 100,\n                    top: \"32%\",\n                    left: \"50%\"\n                  },\n                  children: [\" \", /*#__PURE__*/_jsxDEV(GifPicker, {\n                    apiKey: \"xRQzMksF1tPmqAvVPYlIGeJHZ2EBVXyh\",\n                    onSelected: gif => this.sendGif(gif.downsized.url)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 142\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 45\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 33\n              }, this), this.state.mess.sentTo ? /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: event => this.submitForm(event),\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"chat_box\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"chat_area\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      id: \"description_textarea\",\n                      type: \"text\",\n                      value: this.state.content,\n                      placeholder: \"Nh\\u1EADp tin nh\\u1EAFn....\",\n                      onChange: event => {\n                        this.handleChange(event);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 441,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"action_icon\",\n                      onClick: this.sendHeartIcon,\n                      children: /*#__PURE__*/_jsxDEV(Heart, {\n                        size: 32,\n                        strokeWidth: 1,\n                        color: \"black\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 443,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 442,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"action_icon\",\n                      onClick: this.GifIconClick,\n                      children: /*#__PURE__*/_jsxDEV(Ghost, {\n                        size: 32,\n                        strokeWidth: 1,\n                        color: \"black\",\n                        children: \" \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 446,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 445,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 437,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"img_upload\",\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"custom-file-upload\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"file\",\n                        onChange: event => this.onFileChange(event)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 451,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(Photo, {\n                        size: 32,\n                        strokeWidth: 1,\n                        color: \"black\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 452,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 450,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 449,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"emoji_icon\",\n                    children: [/*#__PURE__*/_jsxDEV(Sticker, {\n                      onClick: this.emojiClick,\n                      size: 32,\n                      strokeWidth: 1,\n                      color: \"black\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 457,\n                      columnNumber: 53\n                    }, this), this.state.emojiToggle ? /*#__PURE__*/_jsxDEV(Picker, {\n                      style: {\n                        position: \"absolute\",\n                        right: 0,\n                        bottom: \"10vh\"\n                      },\n                      onSelect: this.addEmoji\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 461,\n                      columnNumber: 61\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 456,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"sent_btn\",\n                    className: \"send_icon\",\n                    onClick: event => {\n                      this.submitForm(event);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Send, {\n                      size: 32,\n                      strokeWidth: 1,\n                      color: \"white\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 468,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 467,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 41\n              }, this) : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: this.state.newmess,\n        onClose: () => this.setState({\n          newmess: false\n        }),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"newmess_contain\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"newmess_header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"G\\u1EEDi tin nh\\u1EAFn m\\u1EDBi\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              className: this.state.sendinguserlist.length > 0 ? \"active\" : \"disable\",\n              onClick: () => this.createGroup(this.state.sendinguserlistid),\n              children: \"Ti\\u1EBFp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"searchbar\",\n            children: [this.state.sendinguserlist.map(sendlist => {\n              return /*#__PURE__*/_jsxDEV(StyleClip, {\n                label: sendlist,\n                color: \"primary\",\n                onDelete: () => {\n                  this.removelist(sendlist);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 41\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(SearchBar, {\n              yourProfile: yourProfile,\n              sendinguserlistid: this.state.sendinguserlistid,\n              removelist: this.removelist,\n              addList: this.addList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: this.state.editmess,\n        onClose: () => this.setState({\n          editmess: false\n        }),\n        children: /*#__PURE__*/_jsxDEV(EditMess, {\n          disableGroupMess: this.disableGroupMess,\n          history: this.props.history,\n          follow: this.follow,\n          unfollow: this.unfollow,\n          outGroup: this.outGroup,\n          onGroupImgChange: this.onGroupImgChange,\n          createGroupEvent: this.createGroupEvent,\n          editTitle: this.editTitle,\n          conversation: this.props.messages.groupmesslist,\n          yourProfile: yourProfile,\n          addMember: this.addMember,\n          removeMember: this.removeMember\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    messages: state.messages\n  };\n};\n\nexport default connect(mapStateToProps)(Message);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GifPicker\");\n$RefreshReg$(_c2, \"StyleClip\");","map":{"version":3,"names":["React","Component","useEffect","useState","Layout","connect","Skeleton","Portal","getMessage","getConversation","sendMessage","seenMessage","sendimg","getGroup","seenAll","getGroupMessage","sendGroupMessage","createGroup","findPersonal","editTitle","addMember","removeMember","changegroupimg","uploadgroupimg","seenGroupMess","disableGroupMess","follow","unfollow","auth","GroupMess","update","generateData","Link","withRouter","Settings","Dots","Heart","Pencil","Search","Phone","Photo","Sticker","Send","Ghost","Edit","Circle","CircleCheck","User","Users","SearchBar","Pusher","Members","Button","Dialog","LinearProgress","Checkbox","Chip","Avatar","ClickAwayListener","AvatarGroup","EditMess","ReactDOM","Picker","Picker2","styled","moment","Group","default","SearchBox","GifPicker","StyleLink","StyleClip","Message","state","emojiToggle","gifToggle","heart","userName","sending","_id","avt","content","link","mess","sentTo","sentBy","type","newmess","sendinguserlist","sendinguserlistid","view","editmess","scrollToBottom","messagesContainer","findDOMNode","scrollTop","scrollHeight","emojiClick","setState","GifIconClick","handleChange","event","target","value","submitForm","preventDefault","trim","dataToSubmit","console","log","props","dispatch","onFileChange","files","messages","url","sendGif","sendHeartIcon","addEmoji","e","input","document","getElementById","starPros","selectionStart","endPros","selectionEnd","native","JSON","stringify","emote","replace","substr","length","focus","execCommand","removelist","id","name","list","splice","indexOf","listid","then","data","history","push","conversationinfo","user","userData","newgroup","addList","title","createGroupEvent","des","userlist","userlistid","uid","onGroupImgChange","groupmesslist","img","response","payload","success","loading","match","params","outGroup","window","location","reload","componentDidMount","pusher","cluster","encrypted","authEndpoint","channel5","subscribe","bind","change","fullDocument","groupchan","documentKey","operationType","includes","grouplist","map","conver","updateDescription","updatedFields","messlist","componentDidUpdate","prevProps","key","render","yourProfile","users","groupimg","messagelist","el","seenBy","seen","position","zIndex","top","left","gif","downsized","right","bottom","sendlist","mapStateToProps"],"sources":["D:/Kltn/test/social-media/client/src/components/Message/index.js"],"sourcesContent":["import React, { Component, useEffect, useState } from 'react';\r\nimport Layout from '../../hoc/layout';\r\nimport { connect } from 'react-redux';\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\nimport Portal from '@material-ui/core/Portal';\r\nimport { getMessage, getConversation, sendMessage, seenMessage, sendimg, getGroup, seenAll, getGroupMessage, sendGroupMessage, createGroup, findPersonal, editTitle, addMember, removeMember, changegroupimg, uploadgroupimg, seenGroupMess, disableGroupMess } from '../../../src/actions/message_action'\r\nimport { follow, unfollow, auth } from '../../../src/actions/user_action'\r\nimport GroupMess from './groupmess';\r\nimport './Message.scss';\r\nimport { update, generateData } from '../ultils/Form/FormActions';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Settings, Dots, Heart, Pencil, Search, Phone, Photo, Sticker, Send, Ghost, Edit, Circle, CircleCheck, User, Users } from 'tabler-icons-react';\r\nimport SearchBar from './SearchBar/index'\r\nimport Pusher, { Members } from 'pusher-js'\r\nimport { Button, Dialog, LinearProgress, Checkbox, Chip, Avatar, ClickAwayListener } from '@material-ui/core';\r\nimport { AvatarGroup } from '@material-ui/lab';\r\nimport EditMess from './editchat'\r\nimport ReactDOM from 'react-dom'\r\nimport { Picker } from 'emoji-mart'\r\nimport Picker2 from 'react-giphy-component'\r\nimport styled from 'styled-components'\r\nimport moment from 'moment';\r\nimport Group from './group';\r\nimport { default as SearchBox} from '.././SearchMess';\r\nconst GifPicker = styled(Picker2)`\r\n`;\r\nconst StyleLink = styled(Link)`\r\ncolor:black;\r\n`;\r\n\r\nconst StyleClip = styled(Chip)`\r\nborder-radius: 4px;\r\nbackground-color: #e1f5fe;\r\ncolor: #0095f6;\r\nmargin: 4px;\r\n`;\r\n\r\nclass Message extends Component {\r\n    state = {\r\n        emojiToggle: false,\r\n        gifToggle: false,\r\n        heart: 'http://res.cloudinary.com/dlikyyfd1/image/upload/v1610161677/1610161676299.png',\r\n        userName: null,\r\n        sending: false,\r\n        _id: null,\r\n        avt: null,\r\n        content: '',\r\n        link: '',\r\n        mess: {\r\n            sentTo: '',\r\n            sentBy: '',\r\n            content: '',\r\n            type: '',\r\n        },\r\n        newmess: false,\r\n        sendinguserlist: [],\r\n        sendinguserlistid: [],\r\n        view: 'ls',\r\n        editmess: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n        this.props.dispatch(getGroup())\r\n        /// Bind với pusher để làm realtime\r\n        const pusher = new Pusher('c0e96b0fff8d0edac17d', {\r\n            cluster: 'mt1',\r\n            encrypted: true,\r\n            authEndpoint: `http://localhost:3002/api/pusher/auth/${this.props.user.userData._id}`,\r\n        });\r\n        \r\n        const channel5 = pusher.subscribe('messages');\r\n        channel5.bind('newMessage', data => {\r\n            if (data.change.fullDocument.sentTo == this.props.user.userData._id || data.change.fullDocument.sentBy == this.props.user.userData._id) {\r\n                this.props.dispatch(getConversation())\r\n                this.setState({ sending: false })\r\n            }\r\n        });\r\n\r\n        const groupchan = pusher.subscribe('groups');\r\n        groupchan.bind('newGroupmess', data => {\r\n            if (data.change.documentKey._id == this.props.match.params.id) {\r\n                this.props.dispatch(getGroupMessage(this.props.match.params.id))\r\n                this.setState({ sending: false })\r\n            }\r\n            if (data.change.operationType == \"insert\") {\r\n                if (data.change.fullDocument.user.includes(this.props.user.userData._id)) {\r\n                    this.props.dispatch(getGroup())\r\n                }\r\n            }\r\n            this.props.messages.grouplist.map(conver => {\r\n                if (conver._id == data.change.documentKey._id) {\r\n                    this.props.dispatch(getGroup())\r\n                }\r\n            })\r\n            if (data.change.operationType == \"update\") {\r\n                if (data.change.updateDescription ? data.change.updateDescription.updatedFields ? data.change.updateDescription.updatedFields.user ? data.change.updateDescription.updatedFields.user.includes(this.props.user.userData._id) : '' : '' : '') {\r\n                    this.props.dispatch(getGroup())\r\n                }\r\n            }\r\n        });\r\n        const conver = pusher.subscribe('conversations');\r\n        conver.bind('changeConver', data => {\r\n            if (data.change.documentKey._id == this.props.messages.messlist._id) {\r\n                this.props.dispatch(getMessage(this.props.match.params.id))\r\n            }\r\n        })\r\n        this.scrollToBottom();\r\n        this.props.dispatch(getGroupMessage(this.props.match.params.id)).then(data => {\r\n            this.setState({ userName: this.props.messages.groupmesslist.user, _id: this.props.messages.groupmesslist._id })\r\n            this.state.mess.sentTo = this.state._id;\r\n            this.state.mess.sentBy = this.props.user.userData._id;\r\n        })\r\n\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.location.key !== this.props.location.key) {\r\n            this.setState({ sending: true })\r\n            this.props.dispatch(getGroupMessage(this.props.match.params.id)).then(data => {\r\n                this.setState({ userName: this.props.messages.groupmesslist.user, _id: this.props.messages.groupmesslist._id })\r\n                this.state.mess.sentTo = this.state._id;\r\n                this.state.mess.sentBy = this.props.user.userData._id;\r\n                this.setState({ sending: false })\r\n            })\r\n        }\r\n        this.scrollToBottom();\r\n    }\r\n    scrollToBottom = () => {\r\n        const messagesContainer = ReactDOM.findDOMNode(this.messagesContainer);\r\n        messagesContainer.scrollTop = messagesContainer.scrollHeight;\r\n    };\r\n    emojiClick = () => {\r\n        this.setState({ emojiToggle: !this.state.emojiToggle })\r\n    }\r\n    GifIconClick = () => {\r\n        this.setState({ gifToggle: !this.state.gifToggle })\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({ content: event.target.value });\r\n    }\r\n\r\n    submitForm = (event) => {\r\n        event.preventDefault();\r\n        if (this.state.content.trim()) {\r\n            this.state.mess.content = this.state.content;\r\n            this.state.mess.type = 'text';\r\n            let dataToSubmit = this.state.mess\r\n            console.log(dataToSubmit)\r\n            this.props.dispatch(sendGroupMessage(dataToSubmit));\r\n            this.setState({ content: '', sending: true });\r\n        }\r\n    }\r\n    onFileChange = async (event) => {\r\n        this.setState({ sending: true });\r\n        await this.props.dispatch(sendimg(event.target.files[0]));\r\n        this.setState({ link: this.props.messages.sendimg ? this.props.messages.sendimg.url : 0 });\r\n        this.state.mess.content = this.state.link;\r\n        this.state.mess.type = 'img';\r\n        let dataToSubmit = this.state.mess\r\n        this.props.dispatch(sendGroupMessage(dataToSubmit));\r\n        this.setState({ sending: true });\r\n    }\r\n    sendGif = (url) => {\r\n        this.state.link = url;\r\n        this.state.mess.content = this.state.link;\r\n        this.state.mess.type = 'img';\r\n        let dataToSubmit = this.state.mess\r\n        this.props.dispatch(sendGroupMessage(dataToSubmit));\r\n        this.setState({ sending: true });\r\n    }\r\n    sendHeartIcon = () => {\r\n        this.setState({ sending: true });\r\n        this.state.mess.content = this.state.heart;\r\n        this.state.mess.type = 'sticker';\r\n        let dataToSubmit = this.state.mess\r\n        this.props.dispatch(sendGroupMessage(dataToSubmit));\r\n        this.setState({ content: '', sending: true });\r\n    }\r\n    addEmoji = e => {\r\n        const input = document.getElementById('description_textarea');\r\n        var starPros = document.getElementById('description_textarea').selectionStart;\r\n        var endPros = document.getElementById('description_textarea').selectionEnd;\r\n        let event = e.native;\r\n        var value = JSON.stringify(event);\r\n        var emote = value.replace(/['\"]+/g, '')\r\n        // var unquoted = emote.replace(/(\\{|,)\\s*(.+?)\\s*:/g, '$1 \"$2\":')\r\n        this.setState({ content: this.state.content.substr(0, starPros) + emote + this.state.content.substr(endPros, this.state.content.length) });\r\n        input.focus();\r\n        document.execCommand(\"copy\");\r\n    };\r\n    removelist = (id, name) => {\r\n        const list = this.state.sendinguserlist;\r\n        list.splice(this.state.sendinguserlist.indexOf(name), 1);\r\n        this.setState({ sendinguserlist: list });\r\n        const listid = this.state.sendinguserlistid;\r\n        listid.splice(this.state.sendinguserlistid.indexOf(id), 1);\r\n        this.setState({ sendinguserlistid: listid });\r\n    };\r\n    createGroup = (list) => {\r\n        console.log('clicked');\r\n        if (list.length <= 1) {\r\n            this.props.dispatch(findPersonal(list[0])).then(data => this.props.history.push(`/message/inbox/${this.props.messages.conversationinfo._id}`));\r\n        }\r\n        else {\r\n            list.push(this.props.user.userData._id);\r\n            this.props.dispatch(createGroup(list)).then(data => this.props.history.push(`/message/inbox/${this.props.messages.newgroup._id}`));\r\n        }\r\n        this.setState({ newmess: false });\r\n    };\r\n    addList = (id, name) => {\r\n        const list = this.state.sendinguserlist;\r\n        list.push(name);\r\n        this.setState({ sendinguserlist: list });\r\n        const listid = this.state.sendinguserlistid;\r\n        listid.push(id);\r\n        this.setState({ sendinguserlistid: listid });\r\n    }\r\n    seenMessage = (id) => {\r\n        this.props.dispatch(seenMessage(id))\r\n    }\r\n    editTitle = (id, title) => {\r\n        this.props.dispatch(editTitle(id, title))\r\n        this.setState({ editmess: false })\r\n    }\r\n    createGroupEvent = (des) => {\r\n        this.setState({ sending: true });\r\n        this.state.mess.content = des;\r\n        this.state.mess.type = 'event';\r\n        let dataToSubmit = this.state.mess\r\n        this.props.dispatch(sendGroupMessage(dataToSubmit));\r\n        this.setState({ content: '', sending: true });\r\n    }\r\n    addMember = (id, userlist, userlistid) => {\r\n        this.props.dispatch(addMember(id, userlist, userlistid))\r\n        this.setState({ editmess: false })\r\n    }\r\n    removeMember = (id, uid) => {\r\n        this.props.dispatch(removeMember(id, uid))\r\n        this.setState({ editmess: false })\r\n    }\r\n    onGroupImgChange = async (event) => {\r\n        this.setState({ sending: true })\r\n        await this.props.dispatch(uploadgroupimg(event.target.files[0]));\r\n        await this.props.dispatch(changegroupimg(this.props.messages.groupmesslist._id, this.props.messages.img ? this.props.messages.img.url : ''))\r\n            .then(response => {\r\n                console.log(response)\r\n                if (response.payload.success == false) {\r\n                    this.setState({ loading: false, editmess: false })\r\n                }\r\n                else {\r\n                    this.setState({ loading: false, editmess: false })\r\n                }\r\n            })\r\n    }\r\n    seenGroupMess = (id) => {\r\n        this.props.dispatch(seenGroupMess(id))\r\n    }\r\n    disableGroupMess = async (id) => {\r\n        await this.props.dispatch(disableGroupMess(id))\r\n        await this.props.dispatch(getGroupMessage(this.props.match.params.id))\r\n        this.setState({ editmess: false })\r\n    }\r\n    outGroup = async (id, uid) => {\r\n        await this.props.dispatch(removeMember(id, uid))\r\n        await this.props.history.push('/message/inbox')\r\n        await this.props.dispatch(getGroupMessage(this.props.match.params.id))\r\n        await window.location.reload();\r\n        this.setState({ editmess: false })\r\n    }\r\n    follow = async (id) => {\r\n        await this.props.dispatch(follow(id))\r\n        await this.props.dispatch(auth())\r\n    }\r\n    unfollow = async (id) => {\r\n        await this.props.dispatch(unfollow(id))\r\n        await this.props.dispatch(auth())\r\n    }\r\n    render() {\r\n\r\n        console.log(this.props.messages)\r\n        console.log(this.props.messages.grouplist)\r\n        const mess = this.props.messages\r\n        const yourProfile = this.props.user.userData\r\n        return (\r\n            <Layout>\r\n                {/* {\r\n                  this.props.messages ? this.props.messages.messlist ? this.props.messages.messlist.user1 ? this.props.messages.messlist.user1._id != this.props.user.userData._id ? \r\n                  this.setState({userName:this.props.messages.messlist.user1.userName,_id:this.props.messages.messlist.user1._id,avt:this.props.messages.messlist.user1.avt}) : '' :'':'':''\r\n             } */}\r\n                <div className=\"message_container\">\r\n                    <div className=\"message_wrapper\">\r\n                        <div className=\"row no-gutters\">\r\n\r\n                            <div className=\"col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4 left_contain\">\r\n                                <div className=\"chat_info\">\r\n                                    <div className=\"chat_settings\">\r\n                                        <h2 > Trò chuyện</h2>\r\n                                        <div className=\"chat_icon\">\r\n                                            <Pencil onClick={() => this.setState({ newmess: true })} size={32} strokeWidth={1} color=\"black\"></Pencil>\r\n\r\n                                            <Settings size={32} strokeWidth={1} color=\"black\"></Settings>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                  \r\n                                        <SearchBox></SearchBox>\r\n\r\n    \r\n                                    <div className=\"seenall\" onClick={() => this.props.dispatch(seenAll())}>\r\n                                        <h6>Read all</h6>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                {/* <Conversation\r\n                                            messages={this.props.messages}\r\n                                            yourProfile={yourProfile}\r\n                                            seenMessage={seenMessage}\r\n                                        >\r\n                                        </Conversation>  */}\r\n\r\n                                <Group\r\n\r\n                                    messages={this.props.messages}\r\n                                    yourProfile={yourProfile}\r\n                                    seenGroupMess={this.seenGroupMess}\r\n                                >\r\n                                </Group>\r\n                               \r\n\r\n                            </div>\r\n                            <div className=\"col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 right_contain\">\r\n                                <div className=\"top_info\">\r\n\r\n                                    <div className=\"user_info\">\r\n                                        {\r\n                                            this.props.messages.groupmesslist ? this.props.messages.groupmesslist.type == 'personal' ?\r\n                                                this.props.messages.groupmesslist.user.map(users => {\r\n                                                    return (\r\n                                                        users._id == yourProfile._id ? '' : <img src={users.avt}></img>\r\n                                                    )\r\n\r\n                                                }) :\r\n                                                this.props.messages.groupmesslist ? this.props.messages.groupmesslist.groupimg ?\r\n                                                    <img src={this.props.messages.groupmesslist.groupimg}></img>\r\n                                                    :\r\n                                                    <AvatarGroup max={3}>\r\n                                                        {\r\n                                                            this.props.messages.groupmesslist ? this.props.messages.groupmesslist.user ? this.props.messages.groupmesslist.user.map(users => {\r\n                                                                return (\r\n                                                                    <Avatar src={users ? users.avt : ''}></Avatar>\r\n                                                                )\r\n                                                            }) : '' : ''\r\n                                                        }\r\n                                                    </AvatarGroup>\r\n                                                    : '' : ''\r\n                                        }\r\n                                        {\r\n                                            this.props.messages.groupmesslist ? this.props.messages.groupmesslist.type == 'personal' ?\r\n                                                this.props.messages.groupmesslist.user.map(users => {\r\n                                                    return (\r\n                                                        users._id == yourProfile._id ? '' : <h2>{users.userName}</h2>\r\n                                                    )\r\n\r\n                                                }) :\r\n                                                this.props.messages.groupmesslist ? this.props.messages.groupmesslist.title ?\r\n                                                    <h2>{this.props.messages.groupmesslist.title}</h2>\r\n                                                    :\r\n                                                    this.props.messages.groupmesslist ? this.props.messages.groupmesslist.user ? this.props.messages.groupmesslist.user.map(users => {\r\n                                                        return (\r\n                                                            <h2>{users.userName},</h2>\r\n                                                        )\r\n                                                    }) : '' : '' : '' : ''\r\n\r\n                                        }\r\n\r\n                                    </div>\r\n                                    {\r\n                                        this.props.messages.groupmesslist?this.props.messages.groupmesslist.messagelist ?    <Dots size={24} strokeWidth={0} fill=\"black\" onClick={() => this.setState({ editmess: true })}></Dots>:'':''\r\n                                    }\r\n                                \r\n\r\n                                </div>\r\n                                {\r\n                                    this.state.sending == true ? <LinearProgress />\r\n                                        : ''\r\n                                }\r\n                                <div className=\"message\" ref={(el) => { this.messagesContainer = el; }} >\r\n\r\n                                    {\r\n                                        this.props.messages.groupmesslist ? this.props.messages.groupmesslist.messagelist ? this.props.messages.groupmesslist.messagelist.map(mess => {\r\n\r\n                                            return (\r\n                                                <GroupMess\r\n                                                    mess={mess}\r\n                                                    yourProfile={yourProfile}\r\n                                                // seenMessage={this.props.seenMessage}\r\n                                                />\r\n\r\n                                            )\r\n                                        }\r\n                                        ) : '' : ''\r\n                                    }\r\n\r\n                                    <div className=\"row no-gutters sent\">\r\n                                        <div className=\"col-xl-6\">\r\n                                        </div>\r\n                                        <div className=\"col-xl-6 sent_mess\">\r\n                                            {\r\n\r\n                                                this.props.messages.groupmesslist ? this.props.messages.groupmesslist.seenBy ? this.props.messages.groupmesslist.seenBy.map(seen => {\r\n                                                    return (\r\n                                                        <img className=\"seen_avt\" src={seen.avt ? seen.avt : ''}></img>\r\n                                                    )\r\n                                                }\r\n                                                ) : '' : ''\r\n\r\n                                            }\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    {\r\n                                        this.state.gifToggle ?\r\n                                            <div className=\"gif_picker\" style={{ position: 'fixed', zIndex: 100, top: \"32%\", left: \"50%\" }}> <GifPicker apiKey={\"xRQzMksF1tPmqAvVPYlIGeJHZ2EBVXyh\"} onSelected={(gif) => this.sendGif(gif.downsized.url)}></GifPicker></div>\r\n                                            : null\r\n                                    }\r\n                                </div>\r\n\r\n                                {\r\n\r\n                                    this.state.mess.sentTo ?\r\n                                        <form onSubmit={(event) => this.submitForm(event)}>\r\n\r\n                                            <div className=\"chat_box\">\r\n                                                <div className=\"chat_area\">\r\n\r\n                                                    {/* <input value={this.state.mess.sentTo} hidden=\"true\" type=\"text\" placeholder=\"Nhập tin nhắn....\"></input>\r\n                                          <input value={this.state.mess.sentBy} hidden=\"true\" type=\"text\" placeholder=\"Nhập tin nhắn....\"></input> */}\r\n                                                    <input id=\"description_textarea\" type=\"text\" value={this.state.content} placeholder=\"Nhập tin nhắn....\" onChange={(event) => { this.handleChange(event) }}></input>\r\n                                                    <div className=\"action_icon\" onClick={this.sendHeartIcon}>\r\n                                                        <Heart size={32} strokeWidth={1} color=\"black\"></Heart>\r\n                                                    </div>\r\n                                                    <div className=\"action_icon\" onClick={this.GifIconClick}>\r\n                                                        <Ghost size={32} strokeWidth={1} color=\"black\"> </Ghost>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"img_upload\">\r\n                                                    <label className=\"custom-file-upload\">\r\n                                                        <input type=\"file\" onChange={(event) => this.onFileChange(event)} />\r\n                                                        <Photo size={32} strokeWidth={1} color=\"black\"></Photo>\r\n\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className=\"emoji_icon\">\r\n                                                    <Sticker onClick={this.emojiClick} size={32} strokeWidth={1} color=\"black\"></Sticker>\r\n\r\n                                                    {\r\n                                                        this.state.emojiToggle ?\r\n                                                            <Picker style={{ position: \"absolute\", right: 0, bottom: \"10vh\" }} onSelect={this.addEmoji} />\r\n                                                            : null\r\n                                                    }\r\n\r\n\r\n                                                </div>\r\n                                                <div id=\"sent_btn\" className=\"send_icon\" onClick={(event) => { this.submitForm(event) }}>\r\n                                                    <Send size={32} strokeWidth={1} color=\"white\"></Send>\r\n                                                </div>\r\n                                            </div>\r\n                                        </form> : ''\r\n                                }\r\n\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Dialog open={this.state.newmess} onClose={() => this.setState({ newmess: false })}>\r\n                    <div className=\"newmess_contain\">\r\n                        <div className=\"newmess_header\">\r\n\r\n                            <h5>Gửi tin nhắn mới</h5>\r\n\r\n                            <h6 className={this.state.sendinguserlist.length > 0 ? \"active\" : \"disable\"} onClick={() => this.createGroup(this.state.sendinguserlistid)}>Tiếp</h6>\r\n                        </div>\r\n                        <hr></hr>\r\n                        <div className=\"searchbar\">\r\n\r\n                            {\r\n                                this.state.sendinguserlist.map(sendlist => {\r\n                                    return (\r\n                                        <StyleClip label={sendlist} color=\"primary\" onDelete={() => { this.removelist(sendlist) }}></StyleClip>\r\n                                    )\r\n                                })\r\n                            }\r\n                            <SearchBar yourProfile={yourProfile} sendinguserlistid={this.state.sendinguserlistid} removelist={this.removelist} addList={this.addList} />\r\n                        </div>\r\n                        <hr></hr>\r\n                        {/* <div className=\"suggest\">\r\n                            <h6>Gợi ý</h6>\r\n                            {\r\n                                this.props.messages ?\r\n                                    this.props.messages.grouplist ?\r\n                                        this.props.messages.grouplist.map(con => {\r\n                                            return (\r\n                                                <div>\r\n                                                    {\r\n\r\n                                                        <div className=\"user_contain\">\r\n                                                            <div className=\"uinfo\">\r\n                                                                <img src={con.user[0].avt}></img>\r\n                                                                <h2>{con.user[0].userName}</h2>\r\n                                                            </div>\r\n\r\n                                                            <Checkbox\r\n                                                                icon={<Circle size={24} strokeWidth={0.5} color=\"grey\"></Circle>}\r\n                                                                checkedIcon={<CircleCheck size={24} strokeWidth={0.5} color=\"white\" fill=\"#00abfb\"></CircleCheck>}\r\n\r\n                                                                checked={this.state.sendinguserlistid.includes(con.user[0]._id)}\r\n\r\n                                                                onChange={() =>\r\n                                                                    this.state.sendinguserlistid.includes(con.user[0]._id) ?\r\n                                                                        this.removelist(con.user[0]._id, con.user[0].userName) :\r\n                                                                        this.addList(con.user[0]._id, con.user[0].userName)\r\n                                                                }\r\n                                                            // checked={checked}\r\n                                                            // onChange={handleChange}\r\n                                                            // inputProps={{ 'aria-label': 'controlled' }}\r\n                                                            />\r\n                                                        </div>\r\n                                                        // :                                                        \r\n                                                        // <div className=\"user_contain\">\r\n                                                        //   <img src={con.user2.avt}></img>\r\n                                                        //     <h2>{con.user2.userName}</h2>\r\n\r\n                                                        // </div>\r\n\r\n                                                    }\r\n                                                </div>)\r\n                                        }) : '' : ''\r\n                            }\r\n                        </div> */}\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                </Dialog>\r\n                {\r\n                    <Dialog open={this.state.editmess} onClose={() => this.setState({ editmess: false })}>\r\n                        <EditMess disableGroupMess={this.disableGroupMess} history={this.props.history} follow={this.follow} unfollow={this.unfollow} outGroup={this.outGroup} onGroupImgChange={this.onGroupImgChange} createGroupEvent={this.createGroupEvent} editTitle={this.editTitle} conversation={this.props.messages.groupmesslist} yourProfile={yourProfile} addMember={this.addMember} removeMember={this.removeMember}>\r\n                        </EditMess>\r\n                    </Dialog>\r\n                }\r\n\r\n\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        messages: state.messages\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Message);"],"mappings":"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"},"metadata":{},"sourceType":"module"}