{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kltn\\\\test\\\\social-media\\\\client\\\\src\\\\components\\\\Message\\\\index.js\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport Layout from \"../../hoc/layout\";\nimport { connect } from \"react-redux\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport Portal from \"@material-ui/core/Portal\";\nimport { getMessage, getConversation, sendMessage, seenMessage, sendimg, getGroup, seenAll, getGroupMessage, sendGroupMessage, createGroup, findPersonal, editTitle, addMember, removeMember, changegroupimg, uploadgroupimg, seenGroupMess, disableGroupMess } from \"../../../src/actions/message_action\";\nimport { follow, unfollow, auth } from \"../../../src/actions/user_action\";\nimport GroupMess from \"./groupmess\";\nimport \"./Message.scss\";\nimport { update, generateData } from \"../ultils/Form/FormActions\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Settings, Dots, Heart, Pencil, Search, Phone, Photo, Sticker, Send, Ghost, Edit, Circle, CircleCheck, User, Users } from \"tabler-icons-react\";\nimport SearchBar from \"./SearchBar/index\";\nimport Pusher, { Members } from \"pusher-js\";\nimport { Button, Dialog, LinearProgress, Checkbox, Chip, Avatar, ClickAwayListener } from \"@material-ui/core\";\nimport { AvatarGroup } from \"@material-ui/lab\";\nimport EditMess from \"./editchat\";\nimport ReactDOM from \"react-dom\";\nimport { Picker } from \"emoji-mart\";\nimport Picker2 from \"react-giphy-component\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport Group from \"./group\";\nimport { default as SearchBox } from \".././SearchMess\";\nconst GifPicker = styled(Picker2)``;\nconst StyleLink = styled(Link)`\n  color: black;\n`;\nconst StyleClip = styled(Chip)`\n  border-radius: 4px;\n  background-color: #e1f5fe;\n  color: #0095f6;\n  margin: 4px;\n`;\n\nclass Message extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      emojiToggle: false,\n      gifToggle: false,\n      heart: \"http://res.cloudinary.com/dlikyyfd1/image/upload/v1610161677/1610161676299.png\",\n      userName: null,\n      sending: false,\n      _id: null,\n      avt: null,\n      content: \"\",\n      link: \"\",\n      mess: {\n        sentTo: \"\",\n        sentBy: \"\",\n        content: \"\",\n        type: \"\"\n      },\n      newmess: false,\n      sendinguserlist: [],\n      sendinguserlistid: [],\n      view: \"ls\",\n      editmess: false\n    };\n\n    this.scrollToBottom = () => {\n      const messagesContainer = ReactDOM.findDOMNode(this.messagesContainer);\n      messagesContainer.scrollTop = messagesContainer.scrollHeight;\n    };\n\n    this.emojiClick = () => {\n      this.setState({\n        emojiToggle: !this.state.emojiToggle\n      });\n    };\n\n    this.GifIconClick = () => {\n      this.setState({\n        gifToggle: !this.state.gifToggle\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        content: event.target.value\n      });\n    };\n\n    this.submitForm = event => {\n      event.preventDefault();\n\n      if (this.state.content.trim()) {\n        this.state.mess.content = this.state.content;\n        this.state.mess.type = \"text\";\n        let dataToSubmit = this.state.mess;\n        console.log(dataToSubmit);\n        this.props.dispatch(sendGroupMessage(dataToSubmit));\n        this.setState({\n          content: \"\",\n          sending: true\n        });\n      }\n    };\n\n    this.onFileChange = async event => {\n      this.setState({\n        sending: true\n      });\n      await this.props.dispatch(sendimg(event.target.files[0]));\n      this.setState({\n        link: this.props.messages.sendimg ? this.props.messages.sendimg.url : 0\n      });\n      this.state.mess.content = this.state.link;\n      this.state.mess.type = \"img\";\n      let dataToSubmit = this.state.mess;\n      this.props.dispatch(sendGroupMessage(dataToSubmit));\n      this.setState({\n        sending: true\n      });\n    };\n\n    this.sendGif = url => {\n      this.state.link = url;\n      this.state.mess.content = this.state.link;\n      this.state.mess.type = \"img\";\n      let dataToSubmit = this.state.mess;\n      this.props.dispatch(sendGroupMessage(dataToSubmit));\n      this.setState({\n        sending: true\n      });\n    };\n\n    this.sendHeartIcon = () => {\n      this.setState({\n        sending: true\n      });\n      this.state.mess.content = this.state.heart;\n      this.state.mess.type = \"sticker\";\n      let dataToSubmit = this.state.mess;\n      this.props.dispatch(sendGroupMessage(dataToSubmit));\n      this.setState({\n        content: \"\",\n        sending: true\n      });\n    };\n\n    this.addEmoji = e => {\n      const input = document.getElementById(\"description_textarea\");\n      var starPros = document.getElementById(\"description_textarea\").selectionStart;\n      var endPros = document.getElementById(\"description_textarea\").selectionEnd;\n      let event = e.native;\n      var value = JSON.stringify(event);\n      var emote = value.replace(/['\"]+/g, \"\"); // var unquoted = emote.replace(/(\\{|,)\\s*(.+?)\\s*:/g, '$1 \"$2\":')\n\n      this.setState({\n        content: this.state.content.substr(0, starPros) + emote + this.state.content.substr(endPros, this.state.content.length)\n      });\n      input.focus();\n      document.execCommand(\"copy\");\n    };\n\n    this.removelist = (id, name) => {\n      const list = this.state.sendinguserlist;\n      list.splice(this.state.sendinguserlist.indexOf(name), 1);\n      this.setState({\n        sendinguserlist: list\n      });\n      const listid = this.state.sendinguserlistid;\n      listid.splice(this.state.sendinguserlistid.indexOf(id), 1);\n      this.setState({\n        sendinguserlistid: listid\n      });\n    };\n\n    this.createGroup = list => {\n      console.log(\"clicked\");\n\n      if (list.length <= 1) {\n        this.props.dispatch(findPersonal(list[0])).then(data => this.props.history.push(`/message/inbox/${this.props.messages.conversationinfo._id}`));\n      } else {\n        list.push(this.props.user.userData._id);\n        this.props.dispatch(createGroup(list)).then(data => this.props.history.push(`/message/inbox/${this.props.messages.newgroup._id}`));\n      }\n\n      this.setState({\n        newmess: false\n      });\n    };\n\n    this.addList = (id, name) => {\n      const list = this.state.sendinguserlist;\n      list.push(name);\n      this.setState({\n        sendinguserlist: list\n      });\n      const listid = this.state.sendinguserlistid;\n      listid.push(id);\n      this.setState({\n        sendinguserlistid: listid\n      });\n    };\n\n    this.seenMessage = id => {\n      this.props.dispatch(seenMessage(id));\n    };\n\n    this.editTitle = (id, title) => {\n      this.props.dispatch(editTitle(id, title));\n      this.setState({\n        editmess: false\n      });\n    };\n\n    this.createGroupEvent = des => {\n      this.setState({\n        sending: true\n      });\n      this.state.mess.content = des;\n      this.state.mess.type = \"event\";\n      let dataToSubmit = this.state.mess;\n      this.props.dispatch(sendGroupMessage(dataToSubmit));\n      this.setState({\n        content: \"\",\n        sending: true\n      });\n    };\n\n    this.addMember = (id, userlist, userlistid) => {\n      this.props.dispatch(addMember(id, userlist, userlistid));\n      this.setState({\n        editmess: false\n      });\n    };\n\n    this.removeMember = (id, uid) => {\n      this.props.dispatch(removeMember(id, uid));\n      this.setState({\n        editmess: false\n      });\n    };\n\n    this.onGroupImgChange = async event => {\n      this.setState({\n        sending: true\n      });\n      await this.props.dispatch(uploadgroupimg(event.target.files[0]));\n      await this.props.dispatch(changegroupimg(this.props.messages.groupmesslist._id, this.props.messages.img ? this.props.messages.img.url : \"\")).then(response => {\n        console.log(response);\n\n        if (response.payload.success == false) {\n          this.setState({\n            loading: false,\n            editmess: false\n          });\n        } else {\n          this.setState({\n            loading: false,\n            editmess: false\n          });\n        }\n      });\n    };\n\n    this.seenGroupMess = id => {\n      this.props.dispatch(seenGroupMess(id));\n    };\n\n    this.disableGroupMess = async id => {\n      await this.props.dispatch(disableGroupMess(id));\n      await this.props.dispatch(getGroupMessage(this.props.match.params.id));\n      this.setState({\n        editmess: false\n      });\n    };\n\n    this.outGroup = async (id, uid) => {\n      await this.props.dispatch(removeMember(id, uid));\n      await this.props.history.push(\"/message/inbox\");\n      await this.props.dispatch(getGroupMessage(this.props.match.params.id));\n      await window.location.reload();\n      this.setState({\n        editmess: false\n      });\n    };\n\n    this.follow = async id => {\n      await this.props.dispatch(follow(id));\n      await this.props.dispatch(auth());\n    };\n\n    this.unfollow = async id => {\n      await this.props.dispatch(unfollow(id));\n      await this.props.dispatch(auth());\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getGroup()); /// Bind với pusher để làm realtime\n\n    const pusher = new Pusher(\"c0e96b0fff8d0edac17d\", {\n      cluster: \"mt1\",\n      encrypted: true,\n      authEndpoint: `http://localhost:3002/api/pusher/auth/${this.props.user.userData._id}`\n    });\n    const channel5 = pusher.subscribe(\"messages\");\n    channel5.bind(\"newMessage\", data => {\n      if (data.change.fullDocument.sentTo == this.props.user.userData._id || data.change.fullDocument.sentBy == this.props.user.userData._id) {\n        this.props.dispatch(getConversation());\n        this.setState({\n          sending: false\n        });\n      }\n    });\n    const groupchan = pusher.subscribe(\"groups\");\n    groupchan.bind(\"newGroupmess\", data => {\n      if (data.change.documentKey._id == this.props.match.params.id) {\n        this.props.dispatch(getGroupMessage(this.props.match.params.id));\n        this.setState({\n          sending: false\n        });\n      }\n\n      if (data.change.operationType == \"insert\") {\n        if (data.change.fullDocument.user.includes(this.props.user.userData._id)) {\n          this.props.dispatch(getGroup());\n        }\n      }\n\n      this.props.messages.grouplist.map(conver => {\n        if (conver._id == data.change.documentKey._id) {\n          this.props.dispatch(getGroup());\n        }\n      });\n\n      if (data.change.operationType == \"update\") {\n        if (data.change.updateDescription ? data.change.updateDescription.updatedFields ? data.change.updateDescription.updatedFields.user ? data.change.updateDescription.updatedFields.user.includes(this.props.user.userData._id) : \"\" : \"\" : \"\") {\n          this.props.dispatch(getGroup());\n        }\n      }\n    });\n    const conver = pusher.subscribe(\"conversations\");\n    conver.bind(\"changeConver\", data => {\n      if (data.change.documentKey._id == this.props.messages.messlist._id) {\n        this.props.dispatch(getMessage(this.props.match.params.id));\n      }\n    });\n    this.scrollToBottom();\n    this.props.dispatch(getGroupMessage(this.props.match.params.id)).then(data => {\n      this.setState({\n        userName: this.props.messages.groupmesslist.user,\n        _id: this.props.messages.groupmesslist._id\n      });\n      this.state.mess.sentTo = this.state._id;\n      this.state.mess.sentBy = this.props.user.userData._id;\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.location.key !== this.props.location.key) {\n      this.setState({\n        sending: true\n      });\n      this.props.dispatch(getGroupMessage(this.props.match.params.id)).then(data => {\n        this.setState({\n          userName: this.props.messages.groupmesslist.user,\n          _id: this.props.messages.groupmesslist._id\n        });\n        this.state.mess.sentTo = this.state._id;\n        this.state.mess.sentBy = this.props.user.userData._id;\n        this.setState({\n          sending: false\n        });\n      });\n    }\n\n    this.scrollToBottom();\n  }\n\n  render() {\n    console.log(this.props.messages);\n    console.log(this.props.messages.grouplist);\n    const mess = this.props.messages;\n    const yourProfile = this.props.user.userData;\n    return /*#__PURE__*/React.createElement(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message_wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4 left_contain\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat_info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat_settings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 21\n      }\n    }, \" Tr\\xF2 chuy\\u1EC7n\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat_icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Pencil, {\n      onClick: () => this.setState({\n        newmess: true\n      }),\n      size: 32,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Settings, {\n      size: 32,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(SearchBox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"seenall\",\n      onClick: () => this.props.dispatch(seenAll()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 21\n      }\n    }, \"Read all\"))), /*#__PURE__*/React.createElement(Group, {\n      messages: this.props.messages,\n      yourProfile: yourProfile,\n      seenGroupMess: this.seenGroupMess,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 right_contain\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"top_info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user_info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 19\n      }\n    }, this.props.messages.groupmesslist ? this.props.messages.groupmesslist.type == \"personal\" ? this.props.messages.groupmesslist.user.map(users => {\n      return users._id == yourProfile._id ? \"\" : /*#__PURE__*/React.createElement(\"img\", {\n        src: users.avt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 29\n        }\n      });\n    }) : this.props.messages.groupmesslist ? this.props.messages.groupmesslist.groupimg ? /*#__PURE__*/React.createElement(\"img\", {\n      src: this.props.messages.groupmesslist.groupimg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 27\n      }\n    }) : /*#__PURE__*/React.createElement(AvatarGroup, {\n      max: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 27\n      }\n    }, this.props.messages.groupmesslist ? this.props.messages.groupmesslist.user ? this.props.messages.groupmesslist.user.map(users => {\n      return /*#__PURE__*/React.createElement(Avatar, {\n        src: users ? users.avt : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 41\n        }\n      });\n    }) : \"\" : \"\") : \"\" : \"\", this.props.messages.groupmesslist ? this.props.messages.groupmesslist.type == \"personal\" ? this.props.messages.groupmesslist.user.map(users => {\n      return users._id == yourProfile._id ? \"\" : /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 29\n        }\n      }, users.userName);\n    }) : this.props.messages.groupmesslist ? this.props.messages.groupmesslist.title ? /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 27\n      }\n    }, this.props.messages.groupmesslist.title) : this.props.messages.groupmesslist ? this.props.messages.groupmesslist.user ? this.props.messages.groupmesslist.user.map(users => {\n      return /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 40\n        }\n      }, users.userName, \",\");\n    }) : \"\" : \"\" : \"\" : \"\"), this.props.messages.groupmesslist ? this.props.messages.groupmesslist.messagelist ? /*#__PURE__*/React.createElement(Dots, {\n      size: 24,\n      strokeWidth: 0,\n      fill: \"black\",\n      onClick: () => this.setState({\n        editmess: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 23\n      }\n    }) : \"\" : \"\"), this.state.sending == true ? /*#__PURE__*/React.createElement(LinearProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 47\n      }\n    }) : \"\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message\",\n      ref: el => {\n        this.messagesContainer = el;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 17\n      }\n    }, this.props.messages.groupmesslist ? this.props.messages.groupmesslist.messagelist ? this.props.messages.groupmesslist.messagelist.map(mess => {\n      return /*#__PURE__*/React.createElement(GroupMess, {\n        mess: mess,\n        yourProfile: yourProfile // seenMessage={this.props.seenMessage}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 31\n        }\n      });\n    }) : \"\" : \"\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row no-gutters sent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-6 sent_mess\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 21\n      }\n    }, this.props.messages.groupmesslist ? this.props.messages.groupmesslist.seenBy ? this.props.messages.groupmesslist.seenBy.map(seen => {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        className: \"seen_avt\",\n        src: seen.avt ? seen.avt : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 35\n        }\n      });\n    }) : \"\" : \"\")), this.state.gifToggle ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gif_picker\",\n      style: {\n        position: \"fixed\",\n        zIndex: 100,\n        top: \"32%\",\n        left: \"50%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 21\n      }\n    }, \" \", /*#__PURE__*/React.createElement(GifPicker, {\n      apiKey: \"xRQzMksF1tPmqAvVPYlIGeJHZ2EBVXyh\",\n      onSelected: gif => this.sendGif(gif.downsized.url),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 23\n      }\n    })) : null), this.state.mess.sentTo ? /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: event => this.submitForm(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat_box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat_area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"description_textarea\",\n      type: \"text\",\n      value: this.state.content,\n      placeholder: \"Nh\\u1EADp tin nh\\u1EAFn....\",\n      onChange: event => {\n        this.handleChange(event);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"action_icon\",\n      onClick: this.sendHeartIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Heart, {\n      size: 32,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"action_icon\",\n      onClick: this.GifIconClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Ghost, {\n      size: 32,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 27\n      }\n    }, \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img_upload\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-file-upload\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: event => this.onFileChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Photo, {\n      size: 32,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"emoji_icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Sticker, {\n      onClick: this.emojiClick,\n      size: 32,\n      strokeWidth: 1,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 25\n      }\n    }), this.state.emojiToggle ? /*#__PURE__*/React.createElement(Picker, {\n      style: {\n        position: \"absolute\",\n        right: 0,\n        bottom: \"10vh\"\n      },\n      onSelect: this.addEmoji,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 27\n      }\n    }) : null), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"sent_btn\",\n      className: \"send_icon\",\n      onClick: event => {\n        this.submitForm(event);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Send, {\n      size: 32,\n      strokeWidth: 1,\n      color: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 25\n      }\n    })))) : \"\")))), /*#__PURE__*/React.createElement(Dialog, {\n      open: this.state.newmess,\n      onClose: () => this.setState({\n        newmess: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"newmess_contain\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"newmess_header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 15\n      }\n    }, \"G\\u1EEDi tin nh\\u1EAFn m\\u1EDBi\"), /*#__PURE__*/React.createElement(\"h6\", {\n      className: this.state.sendinguserlist.length > 0 ? \"active\" : \"disable\",\n      onClick: () => this.createGroup(this.state.sendinguserlistid),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 15\n      }\n    }, \"Ti\\u1EBFp\")), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"searchbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 13\n      }\n    }, this.state.sendinguserlist.map(sendlist => {\n      return /*#__PURE__*/React.createElement(StyleClip, {\n        label: sendlist,\n        color: \"primary\",\n        onDelete: () => {\n          this.removelist(sendlist);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 19\n        }\n      });\n    }), /*#__PURE__*/React.createElement(SearchBar, {\n      yourProfile: yourProfile,\n      sendinguserlistid: this.state.sendinguserlistid,\n      removelist: this.removelist,\n      addList: this.addList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Dialog, {\n      open: this.state.editmess,\n      onClose: () => this.setState({\n        editmess: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(EditMess, {\n      disableGroupMess: this.disableGroupMess,\n      history: this.props.history,\n      follow: this.follow,\n      unfollow: this.unfollow,\n      outGroup: this.outGroup,\n      onGroupImgChange: this.onGroupImgChange,\n      createGroupEvent: this.createGroupEvent,\n      editTitle: this.editTitle,\n      conversation: this.props.messages.groupmesslist,\n      yourProfile: yourProfile,\n      addMember: this.addMember,\n      removeMember: this.removeMember,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    messages: state.messages\n  };\n};\n\nexport default connect(mapStateToProps)(Message);","map":{"version":3,"sources":["D:/Kltn/test/social-media/client/src/components/Message/index.js"],"names":["React","Component","useEffect","useState","Layout","connect","Skeleton","Portal","getMessage","getConversation","sendMessage","seenMessage","sendimg","getGroup","seenAll","getGroupMessage","sendGroupMessage","createGroup","findPersonal","editTitle","addMember","removeMember","changegroupimg","uploadgroupimg","seenGroupMess","disableGroupMess","follow","unfollow","auth","GroupMess","update","generateData","Link","withRouter","Settings","Dots","Heart","Pencil","Search","Phone","Photo","Sticker","Send","Ghost","Edit","Circle","CircleCheck","User","Users","SearchBar","Pusher","Members","Button","Dialog","LinearProgress","Checkbox","Chip","Avatar","ClickAwayListener","AvatarGroup","EditMess","ReactDOM","Picker","Picker2","styled","moment","Group","default","SearchBox","GifPicker","StyleLink","StyleClip","Message","state","emojiToggle","gifToggle","heart","userName","sending","_id","avt","content","link","mess","sentTo","sentBy","type","newmess","sendinguserlist","sendinguserlistid","view","editmess","scrollToBottom","messagesContainer","findDOMNode","scrollTop","scrollHeight","emojiClick","setState","GifIconClick","handleChange","event","target","value","submitForm","preventDefault","trim","dataToSubmit","console","log","props","dispatch","onFileChange","files","messages","url","sendGif","sendHeartIcon","addEmoji","e","input","document","getElementById","starPros","selectionStart","endPros","selectionEnd","native","JSON","stringify","emote","replace","substr","length","focus","execCommand","removelist","id","name","list","splice","indexOf","listid","then","data","history","push","conversationinfo","user","userData","newgroup","addList","title","createGroupEvent","des","userlist","userlistid","uid","onGroupImgChange","groupmesslist","img","response","payload","success","loading","match","params","outGroup","window","location","reload","componentDidMount","pusher","cluster","encrypted","authEndpoint","channel5","subscribe","bind","change","fullDocument","groupchan","documentKey","operationType","includes","grouplist","map","conver","updateDescription","updatedFields","messlist","componentDidUpdate","prevProps","key","render","yourProfile","users","groupimg","messagelist","el","seenBy","seen","position","zIndex","top","left","gif","downsized","right","bottom","sendlist","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\nimport Layout from \"../../hoc/layout\";\nimport { connect } from \"react-redux\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport Portal from \"@material-ui/core/Portal\";\nimport {\n  getMessage,\n  getConversation,\n  sendMessage,\n  seenMessage,\n  sendimg,\n  getGroup,\n  seenAll,\n  getGroupMessage,\n  sendGroupMessage,\n  createGroup,\n  findPersonal,\n  editTitle,\n  addMember,\n  removeMember,\n  changegroupimg,\n  uploadgroupimg,\n  seenGroupMess,\n  disableGroupMess,\n} from \"../../../src/actions/message_action\";\nimport { follow, unfollow, auth } from \"../../../src/actions/user_action\";\nimport GroupMess from \"./groupmess\";\nimport \"./Message.scss\";\nimport { update, generateData } from \"../ultils/Form/FormActions\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport {\n  Settings,\n  Dots,\n  Heart,\n  Pencil,\n  Search,\n  Phone,\n  Photo,\n  Sticker,\n  Send,\n  Ghost,\n  Edit,\n  Circle,\n  CircleCheck,\n  User,\n  Users,\n} from \"tabler-icons-react\";\nimport SearchBar from \"./SearchBar/index\";\nimport Pusher, { Members } from \"pusher-js\";\nimport {\n  Button,\n  Dialog,\n  LinearProgress,\n  Checkbox,\n  Chip,\n  Avatar,\n  ClickAwayListener,\n} from \"@material-ui/core\";\nimport { AvatarGroup } from \"@material-ui/lab\";\nimport EditMess from \"./editchat\";\nimport ReactDOM from \"react-dom\";\nimport { Picker } from \"emoji-mart\";\nimport Picker2 from \"react-giphy-component\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport Group from \"./group\";\nimport { default as SearchBox } from \".././SearchMess\";\nconst GifPicker = styled(Picker2)``;\nconst StyleLink = styled(Link)`\n  color: black;\n`;\n\nconst StyleClip = styled(Chip)`\n  border-radius: 4px;\n  background-color: #e1f5fe;\n  color: #0095f6;\n  margin: 4px;\n`;\n\nclass Message extends Component {\n  state = {\n    emojiToggle: false,\n    gifToggle: false,\n    heart:\n      \"http://res.cloudinary.com/dlikyyfd1/image/upload/v1610161677/1610161676299.png\",\n    userName: null,\n    sending: false,\n    _id: null,\n    avt: null,\n    content: \"\",\n    link: \"\",\n    mess: {\n      sentTo: \"\",\n      sentBy: \"\",\n      content: \"\",\n      type: \"\",\n    },\n    newmess: false,\n    sendinguserlist: [],\n    sendinguserlistid: [],\n    view: \"ls\",\n    editmess: false,\n  };\n\n  componentDidMount() {\n    this.props.dispatch(getGroup());\n    /// Bind với pusher để làm realtime\n    const pusher = new Pusher(\"c0e96b0fff8d0edac17d\", {\n      cluster: \"mt1\",\n      encrypted: true,\n      authEndpoint: `http://localhost:3002/api/pusher/auth/${this.props.user.userData._id}`,\n    });\n\n    const channel5 = pusher.subscribe(\"messages\");\n    channel5.bind(\"newMessage\", (data) => {\n      if (\n        data.change.fullDocument.sentTo == this.props.user.userData._id ||\n        data.change.fullDocument.sentBy == this.props.user.userData._id\n      ) {\n        this.props.dispatch(getConversation());\n        this.setState({ sending: false });\n      }\n    });\n\n    const groupchan = pusher.subscribe(\"groups\");\n    groupchan.bind(\"newGroupmess\", (data) => {\n      if (data.change.documentKey._id == this.props.match.params.id) {\n        this.props.dispatch(getGroupMessage(this.props.match.params.id));\n        this.setState({ sending: false });\n      }\n      if (data.change.operationType == \"insert\") {\n        if (\n          data.change.fullDocument.user.includes(this.props.user.userData._id)\n        ) {\n          this.props.dispatch(getGroup());\n        }\n      }\n      this.props.messages.grouplist.map((conver) => {\n        if (conver._id == data.change.documentKey._id) {\n          this.props.dispatch(getGroup());\n        }\n      });\n      if (data.change.operationType == \"update\") {\n        if (\n          data.change.updateDescription\n            ? data.change.updateDescription.updatedFields\n              ? data.change.updateDescription.updatedFields.user\n                ? data.change.updateDescription.updatedFields.user.includes(\n                    this.props.user.userData._id\n                  )\n                : \"\"\n              : \"\"\n            : \"\"\n        ) {\n          this.props.dispatch(getGroup());\n        }\n      }\n    });\n    const conver = pusher.subscribe(\"conversations\");\n    conver.bind(\"changeConver\", (data) => {\n      if (data.change.documentKey._id == this.props.messages.messlist._id) {\n        this.props.dispatch(getMessage(this.props.match.params.id));\n      }\n    });\n    this.scrollToBottom();\n    this.props\n      .dispatch(getGroupMessage(this.props.match.params.id))\n      .then((data) => {\n        this.setState({\n          userName: this.props.messages.groupmesslist.user,\n          _id: this.props.messages.groupmesslist._id,\n        });\n        this.state.mess.sentTo = this.state._id;\n        this.state.mess.sentBy = this.props.user.userData._id;\n      });\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.location.key !== this.props.location.key) {\n      this.setState({ sending: true });\n      this.props\n        .dispatch(getGroupMessage(this.props.match.params.id))\n        .then((data) => {\n          this.setState({\n            userName: this.props.messages.groupmesslist.user,\n            _id: this.props.messages.groupmesslist._id,\n          });\n          this.state.mess.sentTo = this.state._id;\n          this.state.mess.sentBy = this.props.user.userData._id;\n          this.setState({ sending: false });\n        });\n    }\n    this.scrollToBottom();\n  }\n  scrollToBottom = () => {\n    const messagesContainer = ReactDOM.findDOMNode(this.messagesContainer);\n    messagesContainer.scrollTop = messagesContainer.scrollHeight;\n  };\n  emojiClick = () => {\n    this.setState({ emojiToggle: !this.state.emojiToggle });\n  };\n  GifIconClick = () => {\n    this.setState({ gifToggle: !this.state.gifToggle });\n  };\n  handleChange = (event) => {\n    this.setState({ content: event.target.value });\n  };\n\n  submitForm = (event) => {\n    event.preventDefault();\n    if (this.state.content.trim()) {\n      this.state.mess.content = this.state.content;\n      this.state.mess.type = \"text\";\n      let dataToSubmit = this.state.mess;\n      console.log(dataToSubmit);\n      this.props.dispatch(sendGroupMessage(dataToSubmit));\n      this.setState({ content: \"\", sending: true });\n    }\n  };\n  onFileChange = async (event) => {\n    this.setState({ sending: true });\n    await this.props.dispatch(sendimg(event.target.files[0]));\n    this.setState({\n      link: this.props.messages.sendimg ? this.props.messages.sendimg.url : 0,\n    });\n    this.state.mess.content = this.state.link;\n    this.state.mess.type = \"img\";\n    let dataToSubmit = this.state.mess;\n    this.props.dispatch(sendGroupMessage(dataToSubmit));\n    this.setState({ sending: true });\n  };\n  sendGif = (url) => {\n    this.state.link = url;\n    this.state.mess.content = this.state.link;\n    this.state.mess.type = \"img\";\n    let dataToSubmit = this.state.mess;\n    this.props.dispatch(sendGroupMessage(dataToSubmit));\n    this.setState({ sending: true });\n  };\n  sendHeartIcon = () => {\n    this.setState({ sending: true });\n    this.state.mess.content = this.state.heart;\n    this.state.mess.type = \"sticker\";\n    let dataToSubmit = this.state.mess;\n    this.props.dispatch(sendGroupMessage(dataToSubmit));\n    this.setState({ content: \"\", sending: true });\n  };\n  addEmoji = (e) => {\n    const input = document.getElementById(\"description_textarea\");\n    var starPros = document.getElementById(\n      \"description_textarea\"\n    ).selectionStart;\n    var endPros = document.getElementById(\"description_textarea\").selectionEnd;\n    let event = e.native;\n    var value = JSON.stringify(event);\n    var emote = value.replace(/['\"]+/g, \"\");\n    // var unquoted = emote.replace(/(\\{|,)\\s*(.+?)\\s*:/g, '$1 \"$2\":')\n    this.setState({\n      content:\n        this.state.content.substr(0, starPros) +\n        emote +\n        this.state.content.substr(endPros, this.state.content.length),\n    });\n    input.focus();\n    document.execCommand(\"copy\");\n  };\n  removelist = (id, name) => {\n    const list = this.state.sendinguserlist;\n    list.splice(this.state.sendinguserlist.indexOf(name), 1);\n    this.setState({ sendinguserlist: list });\n    const listid = this.state.sendinguserlistid;\n    listid.splice(this.state.sendinguserlistid.indexOf(id), 1);\n    this.setState({ sendinguserlistid: listid });\n  };\n  createGroup = (list) => {\n    console.log(\"clicked\");\n    if (list.length <= 1) {\n      this.props\n        .dispatch(findPersonal(list[0]))\n        .then((data) =>\n          this.props.history.push(\n            `/message/inbox/${this.props.messages.conversationinfo._id}`\n          )\n        );\n    } else {\n      list.push(this.props.user.userData._id);\n      this.props\n        .dispatch(createGroup(list))\n        .then((data) =>\n          this.props.history.push(\n            `/message/inbox/${this.props.messages.newgroup._id}`\n          )\n        );\n    }\n    this.setState({ newmess: false });\n  };\n  addList = (id, name) => {\n    const list = this.state.sendinguserlist;\n    list.push(name);\n    this.setState({ sendinguserlist: list });\n    const listid = this.state.sendinguserlistid;\n    listid.push(id);\n    this.setState({ sendinguserlistid: listid });\n  };\n  seenMessage = (id) => {\n    this.props.dispatch(seenMessage(id));\n  };\n  editTitle = (id, title) => {\n    this.props.dispatch(editTitle(id, title));\n    this.setState({ editmess: false });\n  };\n  createGroupEvent = (des) => {\n    this.setState({ sending: true });\n    this.state.mess.content = des;\n    this.state.mess.type = \"event\";\n    let dataToSubmit = this.state.mess;\n    this.props.dispatch(sendGroupMessage(dataToSubmit));\n    this.setState({ content: \"\", sending: true });\n  };\n  addMember = (id, userlist, userlistid) => {\n    this.props.dispatch(addMember(id, userlist, userlistid));\n    this.setState({ editmess: false });\n  };\n  removeMember = (id, uid) => {\n    this.props.dispatch(removeMember(id, uid));\n    this.setState({ editmess: false });\n  };\n  onGroupImgChange = async (event) => {\n    this.setState({ sending: true });\n    await this.props.dispatch(uploadgroupimg(event.target.files[0]));\n    await this.props\n      .dispatch(\n        changegroupimg(\n          this.props.messages.groupmesslist._id,\n          this.props.messages.img ? this.props.messages.img.url : \"\"\n        )\n      )\n      .then((response) => {\n        console.log(response);\n        if (response.payload.success == false) {\n          this.setState({ loading: false, editmess: false });\n        } else {\n          this.setState({ loading: false, editmess: false });\n        }\n      });\n  };\n  seenGroupMess = (id) => {\n    this.props.dispatch(seenGroupMess(id));\n  };\n  disableGroupMess = async (id) => {\n    await this.props.dispatch(disableGroupMess(id));\n    await this.props.dispatch(getGroupMessage(this.props.match.params.id));\n    this.setState({ editmess: false });\n  };\n  outGroup = async (id, uid) => {\n    await this.props.dispatch(removeMember(id, uid));\n    await this.props.history.push(\"/message/inbox\");\n    await this.props.dispatch(getGroupMessage(this.props.match.params.id));\n    await window.location.reload();\n    this.setState({ editmess: false });\n  };\n  follow = async (id) => {\n    await this.props.dispatch(follow(id));\n    await this.props.dispatch(auth());\n  };\n  unfollow = async (id) => {\n    await this.props.dispatch(unfollow(id));\n    await this.props.dispatch(auth());\n  };\n  render() {\n    console.log(this.props.messages);\n    console.log(this.props.messages.grouplist);\n    const mess = this.props.messages;\n    const yourProfile = this.props.user.userData;\n    return (\n      <Layout>\n        {/* {\n                  this.props.messages ? this.props.messages.messlist ? this.props.messages.messlist.user1 ? this.props.messages.messlist.user1._id != this.props.user.userData._id ? \n                  this.setState({userName:this.props.messages.messlist.user1.userName,_id:this.props.messages.messlist.user1._id,avt:this.props.messages.messlist.user1.avt}) : '' :'':'':''\n             } */}\n        <div className=\"message_container\">\n          <div className=\"message_wrapper\">\n            <div className=\"row no-gutters\">\n              <div className=\"col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4 left_contain\">\n                <div className=\"chat_info\">\n                  <div className=\"chat_settings\">\n                    <h2> Trò chuyện</h2>\n                    <div className=\"chat_icon\">\n                      <Pencil\n                        onClick={() => this.setState({ newmess: true })}\n                        size={32}\n                        strokeWidth={1}\n                        color=\"black\"\n                      ></Pencil>\n\n                      <Settings\n                        size={32}\n                        strokeWidth={1}\n                        color=\"black\"\n                      ></Settings>\n                    </div>\n                  </div>\n\n                  <SearchBox></SearchBox>\n\n                  <div\n                    className=\"seenall\"\n                    onClick={() => this.props.dispatch(seenAll())}\n                  >\n                    <h6>Read all</h6>\n                  </div>\n                </div>\n\n                {/* <Conversation\n                                            messages={this.props.messages}\n                                            yourProfile={yourProfile}\n                                            seenMessage={seenMessage}\n                                        >\n                                        </Conversation>  */}\n\n                <Group\n                  messages={this.props.messages}\n                  yourProfile={yourProfile}\n                  seenGroupMess={this.seenGroupMess}\n                ></Group>\n              </div>\n              <div className=\"col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 right_contain\">\n                <div className=\"top_info\">\n                  <div className=\"user_info\">\n                    {this.props.messages.groupmesslist ? (\n                      this.props.messages.groupmesslist.type == \"personal\" ? (\n                        this.props.messages.groupmesslist.user.map((users) => {\n                          return users._id == yourProfile._id ? (\n                            \"\"\n                          ) : (\n                            <img src={users.avt}></img>\n                          );\n                        })\n                      ) : this.props.messages.groupmesslist ? (\n                        this.props.messages.groupmesslist.groupimg ? (\n                          <img\n                            src={this.props.messages.groupmesslist.groupimg}\n                          ></img>\n                        ) : (\n                          <AvatarGroup max={3}>\n                            {this.props.messages.groupmesslist\n                              ? this.props.messages.groupmesslist.user\n                                ? this.props.messages.groupmesslist.user.map(\n                                    (users) => {\n                                      return (\n                                        <Avatar\n                                          src={users ? users.avt : \"\"}\n                                        ></Avatar>\n                                      );\n                                    }\n                                  )\n                                : \"\"\n                              : \"\"}\n                          </AvatarGroup>\n                        )\n                      ) : (\n                        \"\"\n                      )\n                    ) : (\n                      \"\"\n                    )}\n                    {this.props.messages.groupmesslist ? (\n                      this.props.messages.groupmesslist.type == \"personal\" ? (\n                        this.props.messages.groupmesslist.user.map((users) => {\n                          return users._id == yourProfile._id ? (\n                            \"\"\n                          ) : (\n                            <h2>{users.userName}</h2>\n                          );\n                        })\n                      ) : this.props.messages.groupmesslist ? (\n                        this.props.messages.groupmesslist.title ? (\n                          <h2>{this.props.messages.groupmesslist.title}</h2>\n                        ) : this.props.messages.groupmesslist ? (\n                          this.props.messages.groupmesslist.user ? (\n                            this.props.messages.groupmesslist.user.map(\n                              (users) => {\n                                return <h2>{users.userName},</h2>;\n                              }\n                            )\n                          ) : (\n                            \"\"\n                          )\n                        ) : (\n                          \"\"\n                        )\n                      ) : (\n                        \"\"\n                      )\n                    ) : (\n                      \"\"\n                    )}\n                  </div>\n                  {this.props.messages.groupmesslist ? (\n                    this.props.messages.groupmesslist.messagelist ? (\n                      <Dots\n                        size={24}\n                        strokeWidth={0}\n                        fill=\"black\"\n                        onClick={() => this.setState({ editmess: true })}\n                      ></Dots>\n                    ) : (\n                      \"\"\n                    )\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n                {this.state.sending == true ? <LinearProgress /> : \"\"}\n                <div\n                  className=\"message\"\n                  ref={(el) => {\n                    this.messagesContainer = el;\n                  }}\n                >\n                  {this.props.messages.groupmesslist\n                    ? this.props.messages.groupmesslist.messagelist\n                      ? this.props.messages.groupmesslist.messagelist.map(\n                          (mess) => {\n                            return (\n                              <GroupMess\n                                mess={mess}\n                                yourProfile={yourProfile}\n                                // seenMessage={this.props.seenMessage}\n                              />\n                            );\n                          }\n                        )\n                      : \"\"\n                    : \"\"}\n\n                  <div className=\"row no-gutters sent\">\n                    <div className=\"col-xl-6\"></div>\n                    <div className=\"col-xl-6 sent_mess\">\n                      {this.props.messages.groupmesslist\n                        ? this.props.messages.groupmesslist.seenBy\n                          ? this.props.messages.groupmesslist.seenBy.map(\n                              (seen) => {\n                                return (\n                                  <img\n                                    className=\"seen_avt\"\n                                    src={seen.avt ? seen.avt : \"\"}\n                                  ></img>\n                                );\n                              }\n                            )\n                          : \"\"\n                        : \"\"}\n                    </div>\n                  </div>\n\n                  {this.state.gifToggle ? (\n                    <div\n                      className=\"gif_picker\"\n                      style={{\n                        position: \"fixed\",\n                        zIndex: 100,\n                        top: \"32%\",\n                        left: \"50%\",\n                      }}\n                    >\n                      {\" \"}\n                      <GifPicker\n                        apiKey={\"xRQzMksF1tPmqAvVPYlIGeJHZ2EBVXyh\"}\n                        onSelected={(gif) => this.sendGif(gif.downsized.url)}\n                      ></GifPicker>\n                    </div>\n                  ) : null}\n                </div>\n\n                {this.state.mess.sentTo ? (\n                  <form onSubmit={(event) => this.submitForm(event)}>\n                    <div className=\"chat_box\">\n                      <div className=\"chat_area\">\n                        {/* <input value={this.state.mess.sentTo} hidden=\"true\" type=\"text\" placeholder=\"Nhập tin nhắn....\"></input>\n                                          <input value={this.state.mess.sentBy} hidden=\"true\" type=\"text\" placeholder=\"Nhập tin nhắn....\"></input> */}\n                        <input\n                          id=\"description_textarea\"\n                          type=\"text\"\n                          value={this.state.content}\n                          placeholder=\"Nhập tin nhắn....\"\n                          onChange={(event) => {\n                            this.handleChange(event);\n                          }}\n                        ></input>\n                        <div\n                          className=\"action_icon\"\n                          onClick={this.sendHeartIcon}\n                        >\n                          <Heart\n                            size={32}\n                            strokeWidth={1}\n                            color=\"black\"\n                          ></Heart>\n                        </div>\n                        <div\n                          className=\"action_icon\"\n                          onClick={this.GifIconClick}\n                        >\n                          <Ghost size={32} strokeWidth={1} color=\"black\">\n                            {\" \"}\n                          </Ghost>\n                        </div>\n                      </div>\n                      <div className=\"img_upload\">\n                        <label className=\"custom-file-upload\">\n                          <input\n                            type=\"file\"\n                            onChange={(event) => this.onFileChange(event)}\n                          />\n                          <Photo\n                            size={32}\n                            strokeWidth={1}\n                            color=\"black\"\n                          ></Photo>\n                        </label>\n                      </div>\n                      <div className=\"emoji_icon\">\n                        <Sticker\n                          onClick={this.emojiClick}\n                          size={32}\n                          strokeWidth={1}\n                          color=\"black\"\n                        ></Sticker>\n\n                        {this.state.emojiToggle ? (\n                          <Picker\n                            style={{\n                              position: \"absolute\",\n                              right: 0,\n                              bottom: \"10vh\",\n                            }}\n                            onSelect={this.addEmoji}\n                          />\n                        ) : null}\n                      </div>\n                      <div\n                        id=\"sent_btn\"\n                        className=\"send_icon\"\n                        onClick={(event) => {\n                          this.submitForm(event);\n                        }}\n                      >\n                        <Send size={32} strokeWidth={1} color=\"white\"></Send>\n                      </div>\n                    </div>\n                  </form>\n                ) : (\n                  \"\"\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n        <Dialog\n          open={this.state.newmess}\n          onClose={() => this.setState({ newmess: false })}\n        >\n          <div className=\"newmess_contain\">\n            <div className=\"newmess_header\">\n              <h5>Gửi tin nhắn mới</h5>\n\n              <h6\n                className={\n                  this.state.sendinguserlist.length > 0 ? \"active\" : \"disable\"\n                }\n                onClick={() => this.createGroup(this.state.sendinguserlistid)}\n              >\n                Tiếp\n              </h6>\n            </div>\n            <hr></hr>\n            <div className=\"searchbar\">\n              {this.state.sendinguserlist.map((sendlist) => {\n                return (\n                  <StyleClip\n                    label={sendlist}\n                    color=\"primary\"\n                    onDelete={() => {\n                      this.removelist(sendlist);\n                    }}\n                  ></StyleClip>\n                );\n              })}\n              <SearchBar\n                yourProfile={yourProfile}\n                sendinguserlistid={this.state.sendinguserlistid}\n                removelist={this.removelist}\n                addList={this.addList}\n              />\n            </div>\n            <hr></hr>\n            {/* <div className=\"suggest\">\n                            <h6>Gợi ý</h6>\n                            {\n                                this.props.messages ?\n                                    this.props.messages.grouplist ?\n                                        this.props.messages.grouplist.map(con => {\n                                            return (\n                                                <div>\n                                                    {\n\n                                                        <div className=\"user_contain\">\n                                                            <div className=\"uinfo\">\n                                                                <img src={con.user[0].avt}></img>\n                                                                <h2>{con.user[0].userName}</h2>\n                                                            </div>\n\n                                                            <Checkbox\n                                                                icon={<Circle size={24} strokeWidth={0.5} color=\"grey\"></Circle>}\n                                                                checkedIcon={<CircleCheck size={24} strokeWidth={0.5} color=\"white\" fill=\"#00abfb\"></CircleCheck>}\n\n                                                                checked={this.state.sendinguserlistid.includes(con.user[0]._id)}\n\n                                                                onChange={() =>\n                                                                    this.state.sendinguserlistid.includes(con.user[0]._id) ?\n                                                                        this.removelist(con.user[0]._id, con.user[0].userName) :\n                                                                        this.addList(con.user[0]._id, con.user[0].userName)\n                                                                }\n                                                            // checked={checked}\n                                                            // onChange={handleChange}\n                                                            // inputProps={{ 'aria-label': 'controlled' }}\n                                                            />\n                                                        </div>\n                                                        // :                                                        \n                                                        // <div className=\"user_contain\">\n                                                        //   <img src={con.user2.avt}></img>\n                                                        //     <h2>{con.user2.userName}</h2>\n\n                                                        // </div>\n\n                                                    }\n                                                </div>)\n                                        }) : '' : ''\n                            }\n                        </div> */}\n          </div>\n        </Dialog>\n        {\n          <Dialog\n            open={this.state.editmess}\n            onClose={() => this.setState({ editmess: false })}\n          >\n            <EditMess\n              disableGroupMess={this.disableGroupMess}\n              history={this.props.history}\n              follow={this.follow}\n              unfollow={this.unfollow}\n              outGroup={this.outGroup}\n              onGroupImgChange={this.onGroupImgChange}\n              createGroupEvent={this.createGroupEvent}\n              editTitle={this.editTitle}\n              conversation={this.props.messages.groupmesslist}\n              yourProfile={yourProfile}\n              addMember={this.addMember}\n              removeMember={this.removeMember}\n            ></EditMess>\n          </Dialog>\n        }\n      </Layout>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    messages: state.messages,\n  };\n};\nexport default connect(mapStateToProps)(Message);\n"]},"metadata":{},"sourceType":"module"}