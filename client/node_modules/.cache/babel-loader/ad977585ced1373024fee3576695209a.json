{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kltn\\\\test\\\\social-media\\\\client\\\\src\\\\components\\\\Admin\\\\Account\\\\AddAccount\\\\index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport FormField from '../../../ultils/Form/FormField';\nimport './AddAccount.scss';\nimport Dialog from '@material-ui/core/Dialog';\nimport { update, generateData, ifFormValid } from '../../../ultils/Form/FormActions';\nimport { withRouter } from 'react-router-dom';\nimport { registerUser } from '../../../../actions/user_action';\nimport MyButton from '../../../ultils/button';\nimport GoogleLoginButton from '../../../GoggleLoginButton/GoogleLoginButton';\nimport FacebookLoginButton from '../../../FacebookLoginButton/FacebookLoginButton';\nimport Layout from '../../Layout/index';\nimport { Snackbar } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nclass AddAccount extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formError: false,\n      ErrorMessage: \"\",\n      formSuccess: false,\n      RegisterWith: false,\n      setSnack: false,\n      severity: \"\",\n      message: \"\",\n      formData: {\n        name: {\n          element: 'input',\n          value: '',\n          config: {\n            label: 'Tên',\n            name: 'name_input',\n            type: 'text',\n            placeholder: 'Họ tên'\n          },\n          validation: {\n            required: true\n          },\n          valid: true,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        },\n        email: {\n          element: 'input',\n          value: '',\n          config: {\n            label: 'Email',\n            name: 'email_input',\n            type: 'email',\n            placeholder: 'Email'\n          },\n          validation: {\n            required: true,\n            email: true\n          },\n          valid: true,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        },\n        userName: {\n          element: 'input',\n          value: '',\n          config: {\n            label: 'Tên người dùng',\n            name: 'userName_input',\n            type: 'text',\n            placeholder: 'Tên người dùng'\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        },\n        password: {\n          element: 'input',\n          config: {\n            label: 'Mật khẩu',\n            name: 'password_input',\n            type: 'password',\n            placeholder: 'Mật khẩu'\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        },\n        confirmPassword: {\n          element: 'input',\n          value: '',\n          config: {\n            label: 'Nhập lại mật khẩu',\n            name: 'confirm_password_input',\n            type: 'password',\n            placeholder: 'Nhập lại mật khẩu'\n          },\n          validation: {\n            required: true,\n            confirm: 'password'\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showlabel: false\n        }\n      }\n    };\n\n    this.updateForm = element => {\n      console.log(this.state);\n      const newFormdata = update(element, this.state.formData, 'register');\n      this.setState({\n        formError: false,\n        formData: newFormdata\n      });\n    };\n\n    this.submitForm = event => {\n      event.preventDefault();\n      let dataToSubmit = generateData(this.state.formData, 'register');\n      let formIsValid = ifFormValid(this.state.formData, 'register');\n\n      if (formIsValid) {\n        console.log(dataToSubmit);\n        console.log(\"OK\");\n        dataToSubmit.role = 1;\n        this.props.dispatch(registerUser(dataToSubmit)).then(response => {\n          if (response.payload.success) {\n            this.setState({\n              formError: false,\n              formSuccess: true\n            });\n            setTimeout(() => {\n              this.props.history.push('/register_login');\n            }, 3000);\n          } else {\n            this.setState({\n              formError: true,\n              ErrorMessage: response.payload.message\n            });\n          }\n        }).catch(e => {\n          this.setState({\n            formError: true\n          });\n        });\n      } else {\n        this.setState({\n          formError: true\n        });\n      }\n    };\n\n    this.Register = event => {\n      event.preventDefault();\n      let dataToSubmit = generateData(this.state.formData, 'register');\n      let formIsValid = ifFormValid(this.state.formData, 'register');\n\n      if (formIsValid) {\n        console.log(dataToSubmit);\n        console.log(\"OK\");\n        this.props.dispatch(registerUser(dataToSubmit)).then(response => {\n          if (response.payload.success) {\n            this.setState({\n              formError: false,\n              formSuccess: true,\n              severity: \"success\",\n              message: \"Thành công\"\n            });\n            setTimeout(() => {\n              this.props.history.push('/Admin/Account');\n            }, 3000);\n          } else {\n            this.setState({\n              formError: true,\n              ErrorMessage: response.payload.message\n            });\n          }\n        }).catch(e => {\n          this.setState({\n            formError: true\n          });\n        });\n      } else {\n        this.setState({\n          formError: true\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Layout, {\n      page: \"account\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create_account\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"page_title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }\n    }, \"Th\\xEAm Admin \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-5 col-lg-7 col-md-12 no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"register__form\",\n      onSubmit: event => this.submitForm(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register__row2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormField, {\n      id: 'name',\n      formData: this.state.formData.name,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      id: 'email',\n      formData: this.state.formData.email,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      id: 'userName',\n      formData: this.state.formData.userName,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      id: 'password',\n      formData: this.state.formData.password //Hàm change nhận vào một element và gọi đến hàm updateForm(element) \n      ,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      id: 'confirmPassword',\n      formData: this.state.formData.confirmPassword //Hàm change nhận vào một element và gọi đến hàm updateForm(element) \n      ,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 49\n      }\n    })), this.state.formError ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 49\n      }\n    }, this.state.ErrorMessage) : '', /*#__PURE__*/React.createElement(\"button\", {\n      className: \"register__button\",\n      onClick: event => {\n        this.submitForm(event);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 45\n      }\n    }, \"Th\\xEAm\")))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-7 col-lg-5 col-md-4 no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      open: this.state.setSnack,\n      onClose: () => this.setState({\n        setSnack: false\n      }),\n      autoHideDuration: 1000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MuiAlert, {\n      elevation: 6,\n      variant: \"filled\",\n      severity: this.state.severity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }\n    }, this.state.message)));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps)(withRouter(AddAccount));","map":{"version":3,"sources":["D:/Kltn/test/social-media/client/src/components/Admin/Account/AddAccount/index.js"],"names":["React","Component","connect","FormField","Dialog","update","generateData","ifFormValid","withRouter","registerUser","MyButton","GoogleLoginButton","FacebookLoginButton","Layout","Snackbar","MuiAlert","AddAccount","state","formError","ErrorMessage","formSuccess","RegisterWith","setSnack","severity","message","formData","name","element","value","config","label","type","placeholder","validation","required","valid","touched","validationMessage","showlabel","email","userName","password","confirmPassword","confirm","updateForm","console","log","newFormdata","setState","submitForm","event","preventDefault","dataToSubmit","formIsValid","role","props","dispatch","then","response","payload","success","setTimeout","history","push","catch","e","Register","render","vertical","horizontal","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FormField from '../../../ultils/Form/FormField';\r\nimport './AddAccount.scss';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { update, generateData, ifFormValid } from '../../../ultils/Form/FormActions';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { registerUser } from '../../../../actions/user_action';\r\nimport MyButton from '../../../ultils/button'\r\nimport GoogleLoginButton from '../../../GoggleLoginButton/GoogleLoginButton';\r\nimport FacebookLoginButton from '../../../FacebookLoginButton/FacebookLoginButton';\r\nimport Layout from '../../Layout/index';\r\nimport { Snackbar } from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert'\r\n\r\nclass AddAccount extends Component {\r\n    state = {\r\n        formError: false,\r\n        ErrorMessage: \"\",\r\n        formSuccess: false,\r\n        RegisterWith: false,\r\n        setSnack: false,\r\n        severity: \"\",\r\n        message: \"\",\r\n        formData: {\r\n            name: {\r\n                element: 'input',\r\n                value: '',\r\n                config: {\r\n                    label: 'Tên',\r\n                    name: 'name_input',\r\n                    type: 'text',\r\n                    placeholder: 'Họ tên'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: true,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false,\r\n            },\r\n            email: {\r\n                element: 'input',\r\n                value: '',\r\n                config: {\r\n                    label: 'Email',\r\n                    name: 'email_input',\r\n                    type: 'email',\r\n                    placeholder: 'Email'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    email: true\r\n                },\r\n                valid: true,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false,\r\n            },\r\n            userName: {\r\n                element: 'input',\r\n                value: '',\r\n                config: {\r\n                    label: 'Tên người dùng',\r\n                    name: 'userName_input',\r\n                    type: 'text',\r\n                    placeholder: 'Tên người dùng'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false,\r\n            },\r\n            password: {\r\n                element: 'input',\r\n                config: {\r\n                    label: 'Mật khẩu',\r\n                    name: 'password_input',\r\n                    type: 'password',\r\n                    placeholder: 'Mật khẩu'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false,\r\n            },\r\n            confirmPassword: {\r\n                element: 'input',\r\n                value: '',\r\n                config: {\r\n                    label: 'Nhập lại mật khẩu',\r\n                    name: 'confirm_password_input',\r\n                    type: 'password',\r\n                    placeholder: 'Nhập lại mật khẩu'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    confirm: 'password'\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                validationMessage: '',\r\n                showlabel: false,\r\n            }\r\n        },\r\n    }\r\n\r\n    // componentDidMount(){\r\n    //     if(this.props.user.RegisterInfo)\r\n    //         this.setState({ RegisterWith: true})\r\n    // }\r\n\r\n    updateForm = (element) => {\r\n        console.log(this.state)\r\n        const newFormdata = update(element, this.state.formData, 'register');\r\n        this.setState({\r\n            formError: false,\r\n            formData: newFormdata\r\n        });\r\n    }\r\n\r\n    submitForm = (event) => {\r\n        event.preventDefault();\r\n\r\n        let dataToSubmit = generateData(this.state.formData, 'register');\r\n\r\n        let formIsValid = ifFormValid(this.state.formData, 'register');\r\n\r\n       \r\n        if (formIsValid) {\r\n            console.log(dataToSubmit);\r\n            console.log(\"OK\");\r\n            dataToSubmit.role = 1;\r\n            this.props.dispatch(registerUser(dataToSubmit))\r\n                .then(response => {\r\n                    if (response.payload.success) {\r\n                        this.setState({\r\n                            formError: false,\r\n                            formSuccess: true\r\n                        });\r\n                        setTimeout(() => {\r\n                            this.props.history.push('/register_login')\r\n                        }, 3000);\r\n                    } else {\r\n                        this.setState({\r\n                            formError: true,\r\n                            ErrorMessage: response.payload.message\r\n                        });\r\n                    }\r\n                }).catch(e => {\r\n                    this.setState({ formError: true })\r\n                })\r\n        }\r\n        else {\r\n            this.setState({\r\n                formError: true\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    Register = (event) => {\r\n        event.preventDefault();\r\n\r\n        let dataToSubmit = generateData(this.state.formData, 'register');      \r\n        let formIsValid = ifFormValid(this.state.formData, 'register');\r\n\r\n        if (formIsValid) {\r\n            console.log(dataToSubmit);\r\n            console.log(\"OK\");\r\n            this.props.dispatch(registerUser(dataToSubmit))\r\n                .then(response => {\r\n                    if (response.payload.success) {\r\n                        this.setState({\r\n                            formError: false,\r\n                            formSuccess: true,\r\n                            severity: \"success\",\r\n                            message: \"Thành công\",\r\n                        });\r\n                        setTimeout(() => {\r\n                            this.props.history.push('/Admin/Account')\r\n                        }, 3000);\r\n                    } else {\r\n                        this.setState({\r\n                            formError: true,\r\n                            ErrorMessage: response.payload.message\r\n                        });\r\n                    }\r\n                }).catch(e => {\r\n                    this.setState({\r\n                        formError: true\r\n                    })\r\n                })\r\n        }\r\n        else {\r\n            this.setState({\r\n                formError: true\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout page=\"account\">\r\n                <div className=\"create_account\">\r\n                <h3 className=\"page_title\">Thêm Admin </h3>\r\n                <div className=\"row no-gutters\">\r\n                        <div className=\"col-xl-5 col-lg-7 col-md-12 no-gutters\">\r\n                            <div className=\"right\">\r\n                                <div className=\"register\">\r\n                                    <div className='register__container'>\r\n                                        <form className='register__form' onSubmit={(event) => this.submitForm(event)}>\r\n                                            <div className=\"register__row2\">\r\n                                                <FormField\r\n                                                    id={'name'}\r\n                                                    formData={this.state.formData.name}\r\n                                                    change={(element) => this.updateForm(element)}\r\n                                                />\r\n                                                <FormField\r\n                                                    id={'email'}\r\n                                                    formData={this.state.formData.email}\r\n                                                    change={(element) => this.updateForm(element)}\r\n                                                />\r\n                                                <FormField\r\n                                                    id={'userName'}\r\n                                                    formData={this.state.formData.userName}\r\n                                                    change={(element) => this.updateForm(element)}\r\n                                                />\r\n                                                <FormField\r\n                                                    id={'password'}\r\n                                                    formData={this.state.formData.password}\r\n                                                    //Hàm change nhận vào một element và gọi đến hàm updateForm(element) \r\n                                                    change={(element) => this.updateForm(element)}\r\n                                                />\r\n                                                <FormField\r\n                                                    id={'confirmPassword'}\r\n                                                    formData={this.state.formData.confirmPassword}\r\n                                                    //Hàm change nhận vào một element và gọi đến hàm updateForm(element) \r\n                                                    change={(element) => this.updateForm(element)}\r\n                                                />\r\n                                            </div>\r\n                                            {\r\n                                                this.state.formError ?\r\n                                                <div className=\"errorLabel\">\r\n                                                    {this.state.ErrorMessage}\r\n                                                </div>\r\n                                                : ''}\r\n                                            <button className='register__button' onClick={(event) => { this.submitForm(event) }}>Thêm</button>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-xl-7 col-lg-5 col-md-4 no-gutters\"></div>\r\n                    </div>\r\n            </div>\r\n            {\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'center'\r\n                    }}\r\n                    open={this.state.setSnack}\r\n                    onClose={() => this.setState({ setSnack: false })}\r\n                    autoHideDuration={1000}\r\n                >\r\n                    <MuiAlert elevation={6} variant=\"filled\" severity={this.state.severity} >{this.state.message}</MuiAlert>\r\n                </Snackbar>\r\n            }\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(withRouter(AddAccount));"]},"metadata":{},"sourceType":"module"}