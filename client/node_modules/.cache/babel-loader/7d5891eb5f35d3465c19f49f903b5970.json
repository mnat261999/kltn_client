{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kltn\\\\test\\\\social-media\\\\client\\\\src\\\\hoc\\\\auth.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { auth } from '../actions/user_action';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nexport default function (ComposedClass, reload, adminRoute = null) {\n  class AuthenicationCheck extends Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        loading: true\n      };\n    }\n\n    //Sau khi render\n    componentDidMount() {\n      //gọi hàm auth trong user_action gửi request đến sever lấy dữ liệu về đưa vào payload\n      //hàm auth trả về action -> dispatch action đến userreducer này để cập nhật lại store\n      this.props.dispatch(auth()).then(respond => {\n        //Lấy userData từ trong props của class AuthenicationCheck\n        let user = this.props.user.userData; // console.log(this.props.user);\n        //Kiểm tra nếu isAuth false là thì trở lại trang đăng nhập\n\n        if (!user.isAuth) {\n          if (reload) {\n            if (adminRoute) {\n              this.props.history.push(adminRoute);\n            } else {\n              this.props.history.push('/register_login');\n            }\n          }\n        } //nếu isAuth true là thì dẫn vào trang newfeed\n        else {\n            //Là trang của admin\n            if (adminRoute != null) {\n              //ng dùng k phải admin chuyển qua trang đăng nhập của admin\n              if (!user.isAdmin) {\n                if (reload === true) {\n                  this.props.history.push(\"/Newfeed\");\n                }\n              }\n\n              if (reload === false) {\n                this.props.history.push('/Admin/Dashboard');\n              }\n            } else {\n              if (user.isAdmin) {\n                this.props.history.push('/Admin/Dashboard');\n              }\n\n              if (reload === false) {\n                this.props.history.push('/Newfeed');\n              }\n            }\n          }\n\n        this.setState({\n          loading: false\n        });\n      });\n    }\n\n    render() {\n      if (this.state.loading) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"main_loader\",\n          style: {\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(CircularProgress, {\n          style: {\n            color: '#5477D5'\n          },\n          thickness: 7,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }\n        }));\n      } else {\n        //this.props.user là prop của class AuthenticationCheck\n        //{...this.props} để copy luôn các state loading của class AuthenticationCheck\n        return /*#__PURE__*/React.createElement(ComposedClass, Object.assign({}, this.props, {\n          user: this.props.user,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 23\n          }\n        }));\n      }\n    }\n\n  } //state trong hàm này là state trong store của redux\n  //Hàm này lấy state của reducer user trong store đưa vào làm prop của class AuthenicationCheck\n\n\n  function mapStateToProps(state) {\n    return {\n      user: state.user\n    };\n  }\n\n  return connect(mapStateToProps)(AuthenicationCheck);\n}","map":{"version":3,"sources":["D:/Kltn/test/social-media/client/src/hoc/auth.js"],"names":["React","Component","connect","auth","CircularProgress","ComposedClass","reload","adminRoute","AuthenicationCheck","state","loading","componentDidMount","props","dispatch","then","respond","user","userData","isAuth","history","push","isAdmin","setState","render","position","top","left","transform","color","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {auth} from '../actions/user_action';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nexport default function(ComposedClass,reload,adminRoute = null){\r\n    \r\n    class AuthenicationCheck extends Component {\r\n        \r\n        state={\r\n            loading: true,\r\n        }\r\n        \r\n        //Sau khi render\r\n        componentDidMount(){\r\n            //gọi hàm auth trong user_action gửi request đến sever lấy dữ liệu về đưa vào payload\r\n            //hàm auth trả về action -> dispatch action đến userreducer này để cập nhật lại store\r\n            this.props.dispatch(auth()).then(respond =>{\r\n\r\n                //Lấy userData từ trong props của class AuthenicationCheck\r\n                let user = this.props.user.userData;\r\n               // console.log(this.props.user);\r\n               //Kiểm tra nếu isAuth false là thì trở lại trang đăng nhập\r\n                if(!user.isAuth){\r\n                    if(reload){\r\n                        if(adminRoute){\r\n                            this.props.history.push(adminRoute);    \r\n                        }else{\r\n                            this.props.history.push('/register_login');\r\n                        }\r\n                    }\r\n                }\r\n                //nếu isAuth true là thì dẫn vào trang newfeed\r\n                else\r\n                {\r\n                    //Là trang của admin\r\n                    if(adminRoute != null){\r\n                        //ng dùng k phải admin chuyển qua trang đăng nhập của admin\r\n                        if(!user.isAdmin){\r\n                            if (reload === true) {\r\n                                this.props.history.push(\"/Newfeed\");\r\n                            }\r\n                        }\r\n                        if (reload === false) {\r\n                            this.props.history.push('/Admin/Dashboard');\r\n                        }\r\n                    }else{\r\n                        if (user.isAdmin) {\r\n                            this.props.history.push('/Admin/Dashboard');\r\n                        }\r\n                        if(reload === false){\r\n                            this.props.history.push('/Newfeed');\r\n                        }\r\n                    }\r\n                }\r\n               this.setState({loading:false});\r\n            })\r\n        }\r\n\r\n        render() {\r\n            if(this.state.loading){\r\n                return (\r\n                    <div className=\"main_loader\" style={{\r\n                        position: 'absolute',\r\n                        top: '50%',\r\n                        left: '50%',\r\n                        transform: 'translate(-50%, -50%)'\r\n                    }}>\r\n                        <CircularProgress style={{ color: '#5477D5' }} thickness={7} />\r\n                    </div>\r\n                );\r\n            }else{\r\n                //this.props.user là prop của class AuthenticationCheck\r\n                //{...this.props} để copy luôn các state loading của class AuthenticationCheck\r\n               return <ComposedClass {...this.props} user={this.props.user}/>\r\n            }\r\n        }\r\n    }\r\n\r\n    //state trong hàm này là state trong store của redux\r\n    //Hàm này lấy state của reducer user trong store đưa vào làm prop của class AuthenicationCheck\r\n    function mapStateToProps(state){\r\n        return {\r\n            user: state.user,\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(AuthenicationCheck);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}