{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kltn\\\\test\\\\social-media\\\\client\\\\src\\\\components\\\\Admin\\\\Account\\\\AddAccount\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormField from \"../../../ultils/Form/FormField\";\nimport \"./AddAccount.scss\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { update, generateData, ifFormValid } from \"../../../ultils/Form/FormActions\";\nimport { withRouter } from \"react-router-dom\";\nimport { registerUser } from \"../../../../actions/user_action\";\nimport MyButton from \"../../../ultils/button\";\nimport GoogleLoginButton from \"../../../GoggleLoginButton/GoogleLoginButton\";\nimport FacebookLoginButton from \"../../../FacebookLoginButton/FacebookLoginButton\";\nimport Layout from \"../../Layout/index\";\nimport { Snackbar } from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nclass AddAccount extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formError: false,\n      ErrorMessage: \"\",\n      formSuccess: false,\n      RegisterWith: false,\n      setSnack: false,\n      severity: \"\",\n      message: \"\",\n      formData: {\n        name: {\n          element: \"input\",\n          value: \"\",\n          config: {\n            label: \"Tên\",\n            name: \"name_input\",\n            type: \"text\",\n            placeholder: \"Họ tên\"\n          },\n          validation: {\n            required: true\n          },\n          valid: true,\n          touched: false,\n          validationMessage: \"\",\n          showlabel: false\n        },\n        email: {\n          element: \"input\",\n          value: \"\",\n          config: {\n            label: \"Email\",\n            name: \"email_input\",\n            type: \"email\",\n            placeholder: \"Email\"\n          },\n          validation: {\n            required: true,\n            email: true\n          },\n          valid: true,\n          touched: false,\n          validationMessage: \"\",\n          showlabel: false\n        },\n        userName: {\n          element: \"input\",\n          value: \"\",\n          config: {\n            label: \"Tên người dùng\",\n            name: \"userName_input\",\n            type: \"text\",\n            placeholder: \"Tên người dùng\"\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          validationMessage: \"\",\n          showlabel: false\n        },\n        password: {\n          element: \"input\",\n          config: {\n            label: \"Mật khẩu\",\n            name: \"password_input\",\n            type: \"password\",\n            placeholder: \"Mật khẩu\"\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          validationMessage: \"\",\n          showlabel: false\n        },\n        confirmPassword: {\n          element: \"input\",\n          value: \"\",\n          config: {\n            label: \"Nhập lại mật khẩu\",\n            name: \"confirm_password_input\",\n            type: \"password\",\n            placeholder: \"Nhập lại mật khẩu\"\n          },\n          validation: {\n            required: true,\n            confirm: \"password\"\n          },\n          valid: false,\n          touched: false,\n          validationMessage: \"\",\n          showlabel: false\n        }\n      }\n    };\n\n    this.updateForm = element => {\n      console.log(this.state);\n      const newFormdata = update(element, this.state.formData, \"register\");\n      this.setState({\n        formError: false,\n        formData: newFormdata\n      });\n    };\n\n    this.submitForm = event => {\n      event.preventDefault();\n      let dataToSubmit = generateData(this.state.formData, \"register\");\n      let formIsValid = ifFormValid(this.state.formData, \"register\");\n\n      if (formIsValid) {\n        console.log(dataToSubmit);\n        console.log(\"OK\");\n        dataToSubmit.role = 1;\n        this.props.dispatch(registerUser(dataToSubmit)).then(response => {\n          if (response.payload.success) {\n            this.setState({\n              formError: false,\n              formSuccess: true\n            });\n            setTimeout(() => {\n              this.props.history.push(\"/register_login\");\n            }, 3000);\n          } else {\n            this.setState({\n              formError: true,\n              ErrorMessage: response.payload.message\n            });\n          }\n        }).catch(e => {\n          this.setState({\n            formError: true\n          });\n        });\n      } else {\n        this.setState({\n          formError: true\n        });\n      }\n    };\n\n    this.Register = event => {\n      event.preventDefault();\n      let dataToSubmit = generateData(this.state.formData, \"register\");\n      let formIsValid = ifFormValid(this.state.formData, \"register\");\n\n      if (formIsValid) {\n        console.log(dataToSubmit);\n        console.log(\"OK\");\n        this.props.dispatch(registerUser(dataToSubmit)).then(response => {\n          if (response.payload.success) {\n            this.setState({\n              formError: false,\n              formSuccess: true,\n              severity: \"success\",\n              message: \"Thành công\"\n            });\n            setTimeout(() => {\n              this.props.history.push(\"/Admin/Account\");\n            }, 3000);\n          } else {\n            this.setState({\n              formError: true,\n              ErrorMessage: response.payload.message\n            });\n          }\n        }).catch(e => {\n          this.setState({\n            formError: true\n          });\n        });\n      } else {\n        this.setState({\n          formError: true\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Layout, {\n      page: \"account\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create_account\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"page_title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }\n    }, \"Th\\xEAm Admin \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-5 col-lg-7 col-md-12 no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"register__form\",\n      onSubmit: event => this.submitForm(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register__row2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FormField, {\n      id: \"name\",\n      formData: this.state.formData.name,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      id: \"email\",\n      formData: this.state.formData.email,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      id: \"userName\",\n      formData: this.state.formData.userName,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      id: \"password\",\n      formData: this.state.formData.password //Hàm change nhận vào một element và gọi đến hàm updateForm(element)\n      ,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      id: \"confirmPassword\",\n      formData: this.state.formData.confirmPassword //Hàm change nhận vào một element và gọi đến hàm updateForm(element)\n      ,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 25\n      }\n    })), this.state.formError ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 25\n      }\n    }, this.state.ErrorMessage) : \"\", /*#__PURE__*/React.createElement(\"button\", {\n      className: \"register__button\",\n      onClick: event => {\n        this.submitForm(event);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 23\n      }\n    }, \"Th\\xEAm\")))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-7 col-lg-5 col-md-4 no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\"\n      },\n      open: this.state.setSnack,\n      onClose: () => this.setState({\n        setSnack: false\n      }),\n      autoHideDuration: 1000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MuiAlert, {\n      elevation: 6,\n      variant: \"filled\",\n      severity: this.state.severity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 13\n      }\n    }, this.state.message)));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps)(withRouter(AddAccount));","map":{"version":3,"sources":["D:/Kltn/test/social-media/client/src/components/Admin/Account/AddAccount/index.js"],"names":["React","Component","connect","FormField","Dialog","update","generateData","ifFormValid","withRouter","registerUser","MyButton","GoogleLoginButton","FacebookLoginButton","Layout","Snackbar","MuiAlert","AddAccount","state","formError","ErrorMessage","formSuccess","RegisterWith","setSnack","severity","message","formData","name","element","value","config","label","type","placeholder","validation","required","valid","touched","validationMessage","showlabel","email","userName","password","confirmPassword","confirm","updateForm","console","log","newFormdata","setState","submitForm","event","preventDefault","dataToSubmit","formIsValid","role","props","dispatch","then","response","payload","success","setTimeout","history","push","catch","e","Register","render","vertical","horizontal","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormField from \"../../../ultils/Form/FormField\";\nimport \"./AddAccount.scss\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport {\n  update,\n  generateData,\n  ifFormValid,\n} from \"../../../ultils/Form/FormActions\";\nimport { withRouter } from \"react-router-dom\";\nimport { registerUser } from \"../../../../actions/user_action\";\nimport MyButton from \"../../../ultils/button\";\nimport GoogleLoginButton from \"../../../GoggleLoginButton/GoogleLoginButton\";\nimport FacebookLoginButton from \"../../../FacebookLoginButton/FacebookLoginButton\";\nimport Layout from \"../../Layout/index\";\nimport { Snackbar } from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nclass AddAccount extends Component {\n  state = {\n    formError: false,\n    ErrorMessage: \"\",\n    formSuccess: false,\n    RegisterWith: false,\n    setSnack: false,\n    severity: \"\",\n    message: \"\",\n    formData: {\n      name: {\n        element: \"input\",\n        value: \"\",\n        config: {\n          label: \"Tên\",\n          name: \"name_input\",\n          type: \"text\",\n          placeholder: \"Họ tên\",\n        },\n        validation: {\n          required: true,\n        },\n        valid: true,\n        touched: false,\n        validationMessage: \"\",\n        showlabel: false,\n      },\n      email: {\n        element: \"input\",\n        value: \"\",\n        config: {\n          label: \"Email\",\n          name: \"email_input\",\n          type: \"email\",\n          placeholder: \"Email\",\n        },\n        validation: {\n          required: true,\n          email: true,\n        },\n        valid: true,\n        touched: false,\n        validationMessage: \"\",\n        showlabel: false,\n      },\n      userName: {\n        element: \"input\",\n        value: \"\",\n        config: {\n          label: \"Tên người dùng\",\n          name: \"userName_input\",\n          type: \"text\",\n          placeholder: \"Tên người dùng\",\n        },\n        validation: {\n          required: true,\n        },\n        valid: false,\n        touched: false,\n        validationMessage: \"\",\n        showlabel: false,\n      },\n      password: {\n        element: \"input\",\n        config: {\n          label: \"Mật khẩu\",\n          name: \"password_input\",\n          type: \"password\",\n          placeholder: \"Mật khẩu\",\n        },\n        validation: {\n          required: true,\n        },\n        valid: false,\n        touched: false,\n        validationMessage: \"\",\n        showlabel: false,\n      },\n      confirmPassword: {\n        element: \"input\",\n        value: \"\",\n        config: {\n          label: \"Nhập lại mật khẩu\",\n          name: \"confirm_password_input\",\n          type: \"password\",\n          placeholder: \"Nhập lại mật khẩu\",\n        },\n        validation: {\n          required: true,\n          confirm: \"password\",\n        },\n        valid: false,\n        touched: false,\n        validationMessage: \"\",\n        showlabel: false,\n      },\n    },\n  };\n\n  // componentDidMount(){\n  //     if(this.props.user.RegisterInfo)\n  //         this.setState({ RegisterWith: true})\n  // }\n\n  updateForm = (element) => {\n    console.log(this.state);\n    const newFormdata = update(element, this.state.formData, \"register\");\n    this.setState({\n      formError: false,\n      formData: newFormdata,\n    });\n  };\n\n  submitForm = (event) => {\n    event.preventDefault();\n\n    let dataToSubmit = generateData(this.state.formData, \"register\");\n\n    let formIsValid = ifFormValid(this.state.formData, \"register\");\n\n    if (formIsValid) {\n      console.log(dataToSubmit);\n      console.log(\"OK\");\n      dataToSubmit.role = 1;\n      this.props\n        .dispatch(registerUser(dataToSubmit))\n        .then((response) => {\n          if (response.payload.success) {\n            this.setState({\n              formError: false,\n              formSuccess: true,\n            });\n            setTimeout(() => {\n              this.props.history.push(\"/register_login\");\n            }, 3000);\n          } else {\n            this.setState({\n              formError: true,\n              ErrorMessage: response.payload.message,\n            });\n          }\n        })\n        .catch((e) => {\n          this.setState({ formError: true });\n        });\n    } else {\n      this.setState({\n        formError: true,\n      });\n    }\n  };\n\n  Register = (event) => {\n    event.preventDefault();\n\n    let dataToSubmit = generateData(this.state.formData, \"register\");\n    let formIsValid = ifFormValid(this.state.formData, \"register\");\n\n    if (formIsValid) {\n      console.log(dataToSubmit);\n      console.log(\"OK\");\n      this.props\n        .dispatch(registerUser(dataToSubmit))\n        .then((response) => {\n          if (response.payload.success) {\n            this.setState({\n              formError: false,\n              formSuccess: true,\n              severity: \"success\",\n              message: \"Thành công\",\n            });\n            setTimeout(() => {\n              this.props.history.push(\"/Admin/Account\");\n            }, 3000);\n          } else {\n            this.setState({\n              formError: true,\n              ErrorMessage: response.payload.message,\n            });\n          }\n        })\n        .catch((e) => {\n          this.setState({\n            formError: true,\n          });\n        });\n    } else {\n      this.setState({\n        formError: true,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <Layout page=\"account\">\n        <div className=\"create_account\">\n          <h3 className=\"page_title\">Thêm Admin </h3>\n          <div className=\"row no-gutters\">\n            <div className=\"col-xl-5 col-lg-7 col-md-12 no-gutters\">\n              <div className=\"right\">\n                <div className=\"register\">\n                  <div className=\"register__container\">\n                    <form\n                      className=\"register__form\"\n                      onSubmit={(event) => this.submitForm(event)}\n                    >\n                      <div className=\"register__row2\">\n                        <FormField\n                          id={\"name\"}\n                          formData={this.state.formData.name}\n                          change={(element) => this.updateForm(element)}\n                        />\n                        <FormField\n                          id={\"email\"}\n                          formData={this.state.formData.email}\n                          change={(element) => this.updateForm(element)}\n                        />\n                        <FormField\n                          id={\"userName\"}\n                          formData={this.state.formData.userName}\n                          change={(element) => this.updateForm(element)}\n                        />\n                        <FormField\n                          id={\"password\"}\n                          formData={this.state.formData.password}\n                          //Hàm change nhận vào một element và gọi đến hàm updateForm(element)\n                          change={(element) => this.updateForm(element)}\n                        />\n                        <FormField\n                          id={\"confirmPassword\"}\n                          formData={this.state.formData.confirmPassword}\n                          //Hàm change nhận vào một element và gọi đến hàm updateForm(element)\n                          change={(element) => this.updateForm(element)}\n                        />\n                      </div>\n                      {this.state.formError ? (\n                        <div className=\"errorLabel\">\n                          {this.state.ErrorMessage}\n                        </div>\n                      ) : (\n                        \"\"\n                      )}\n                      <button\n                        className=\"register__button\"\n                        onClick={(event) => {\n                          this.submitForm(event);\n                        }}\n                      >\n                        Thêm\n                      </button>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-xl-7 col-lg-5 col-md-4 no-gutters\"></div>\n          </div>\n        </div>\n        {\n          <Snackbar\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"center\",\n            }}\n            open={this.state.setSnack}\n            onClose={() => this.setState({ setSnack: false })}\n            autoHideDuration={1000}\n          >\n            <MuiAlert\n              elevation={6}\n              variant=\"filled\"\n              severity={this.state.severity}\n            >\n              {this.state.message}\n            </MuiAlert>\n          </Snackbar>\n        }\n      </Layout>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n  };\n};\nexport default connect(mapStateToProps)(withRouter(AddAccount));\n"]},"metadata":{},"sourceType":"module"}