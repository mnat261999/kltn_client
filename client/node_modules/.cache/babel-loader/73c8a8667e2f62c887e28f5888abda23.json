{"ast":null,"code":"import axios from \"axios\";\nimport { REPORT_SERVER, POST_SERVER } from \"../components/ultils/mise\";\nimport { GET_ALL_REPORTS, SORT_REPORT, UPDATE_REPORT, DELETE_POST_REPORT, DELETE_POST, DELETE_COMMENT, GET_REPORT_DETAIL, CLEAR, RESTRICT_USER, DELETE_RESTRICTED_FUNCTION, DELETE_REPORT_POST, DELETE_REPORT_COMMENT } from \"./types\";\nexport function getAll(limit, skip, filter, prevState = []) {\n  const data = {\n    skip,\n    limit,\n    filter\n  };\n  console.log(data);\n  const request = axios.post(`${REPORT_SERVER}/getAll`, data).then(response => {\n    console.log(response.data.reports);\n    let newState = [...prevState, ...response.data.reports];\n    console.log(response.data.reports);\n    return {\n      size: response.data.size,\n      reports: newState\n    };\n  });\n  return {\n    type: GET_ALL_REPORTS,\n    payload: request\n  };\n}\nexport function sort(sortBy, list) {\n  switch (sortBy.type) {\n    case \"date\":\n      list.sort((a, b) => {\n        if (a.dateDifference > b.dateDifference) {\n          return 1 * sortBy.order;\n        } else if (a.dateDifference == b.dateDifference) {\n          return 0;\n        } else {\n          return -1 * sortBy.order;\n        }\n      });\n      console.log(list);\n      return list;\n\n    case \"status\":\n      console.log(sortBy);\n      list.sort((x, y) => {\n        return x.status === y.status ? 0 : x.status ? -1 * sortBy.order : 1 * sortBy.order;\n      });\n      console.log(list);\n      return list;\n\n    case \"reportType\":\n      console.log(sortBy);\n      list.sort((a, b) => {\n        if (a.reportType > b.reportType) {\n          return 1 * sortBy.order;\n        } else {\n          return -1 * sortBy.order;\n        }\n      });\n      console.log(list);\n      return list;\n  }\n}\nexport function getReportDetail(id) {\n  const data = {\n    id\n  };\n  const request = axios.post(`${REPORT_SERVER}/getDetail`, data).then(response => {\n    console.log(response.data);\n    return response.data;\n  });\n  return {\n    type: GET_REPORT_DETAIL,\n    payload: request\n  };\n}\nexport function clearDetail() {\n  const request = {};\n  return {\n    type: CLEAR,\n    payload: request\n  };\n}\nexport function updateReport(id) {\n  const data = {\n    id\n  };\n  const request = axios.put(`${REPORT_SERVER}/updateReport`, data).then(response => {\n    console.log(response.data);\n    return response.data;\n  });\n  return {\n    type: UPDATE_REPORT,\n    payload: request\n  };\n}\nexport function deletePost(postId, reportId, id) {\n  const data = {\n    postId,\n    reportId,\n    id\n  };\n  const request = axios.post(`${REPORT_SERVER}/delete_post`, data).then(response => {\n    console.log(response.data);\n    return response.data;\n  });\n  return {\n    type: DELETE_REPORT_POST,\n    payload: request\n  };\n}\nexport function deleteComment(commentId, reportId, postId) {\n  const data = {\n    commentId,\n    reportId,\n    postId\n  };\n  const request = axios.post(`${REPORT_SERVER}/delete_comment`, data).then(response => {\n    console.log(response.data);\n    return response.data;\n  });\n  return {\n    type: DELETE_REPORT_COMMENT,\n    payload: request\n  };\n}\nexport function deleteRestrictedFunction(funcId, _id) {\n  const data = {\n    funcId,\n    _id\n  };\n  const request = axios.put(`${REPORT_SERVER}/deleteRestrictFunction`, data).then(response => {\n    console.log(response.data);\n    return response.data;\n  });\n  return {\n    type: DELETE_RESTRICTED_FUNCTION,\n    payload: request\n  };\n}\nexport function restrictUser(func, userId, reportId) {\n  const data = {\n    funcList: func,\n    _id: userId,\n    reportId: reportId\n  };\n  console.log(data);\n  const request = axios.put(`${REPORT_SERVER}/restrictUserFunction`, data).then(response => {\n    console.log(response.data);\n    return response.data;\n  });\n  return {\n    type: RESTRICT_USER,\n    payload: request\n  };\n}","map":{"version":3,"sources":["D:/Kltn/test/social-media/client/src/actions/report_actions.js"],"names":["axios","REPORT_SERVER","POST_SERVER","GET_ALL_REPORTS","SORT_REPORT","UPDATE_REPORT","DELETE_POST_REPORT","DELETE_POST","DELETE_COMMENT","GET_REPORT_DETAIL","CLEAR","RESTRICT_USER","DELETE_RESTRICTED_FUNCTION","DELETE_REPORT_POST","DELETE_REPORT_COMMENT","getAll","limit","skip","filter","prevState","data","console","log","request","post","then","response","reports","newState","size","type","payload","sort","sortBy","list","a","b","dateDifference","order","x","y","status","reportType","getReportDetail","id","clearDetail","updateReport","put","deletePost","postId","reportId","deleteComment","commentId","deleteRestrictedFunction","funcId","_id","restrictUser","func","userId","funcList"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { REPORT_SERVER, POST_SERVER } from \"../components/ultils/mise\";\nimport {\n  GET_ALL_REPORTS,\n  SORT_REPORT,\n  UPDATE_REPORT,\n  DELETE_POST_REPORT,\n  DELETE_POST,\n  DELETE_COMMENT,\n  GET_REPORT_DETAIL,\n  CLEAR,\n  RESTRICT_USER,\n  DELETE_RESTRICTED_FUNCTION,\n  DELETE_REPORT_POST,\n  DELETE_REPORT_COMMENT,\n} from \"./types\";\n\nexport function getAll(limit, skip, filter, prevState = []) {\n  const data = {\n    skip,\n    limit,\n    filter,\n  };\n  console.log(data);\n  const request = axios\n    .post(`${REPORT_SERVER}/getAll`, data)\n    .then((response) => {\n      console.log(response.data.reports);\n      let newState = [...prevState, ...response.data.reports];\n      console.log(response.data.reports);\n      return {\n        size: response.data.size,\n        reports: newState,\n      };\n    });\n  return {\n    type: GET_ALL_REPORTS,\n    payload: request,\n  };\n}\n\nexport function sort(sortBy, list) {\n  switch (sortBy.type) {\n    case \"date\":\n      list.sort((a, b) => {\n        if (a.dateDifference > b.dateDifference) {\n          return 1 * sortBy.order;\n        } else if (a.dateDifference == b.dateDifference) {\n          return 0;\n        } else {\n          return -1 * sortBy.order;\n        }\n      });\n      console.log(list);\n      return list;\n    case \"status\":\n      console.log(sortBy);\n      list.sort((x, y) => {\n        return x.status === y.status\n          ? 0\n          : x.status\n          ? -1 * sortBy.order\n          : 1 * sortBy.order;\n      });\n      console.log(list);\n      return list;\n    case \"reportType\":\n      console.log(sortBy);\n      list.sort((a, b) => {\n        if (a.reportType > b.reportType) {\n          return 1 * sortBy.order;\n        } else {\n          return -1 * sortBy.order;\n        }\n      });\n      console.log(list);\n      return list;\n  }\n}\n\nexport function getReportDetail(id) {\n  const data = { id };\n  const request = axios\n    .post(`${REPORT_SERVER}/getDetail`, data)\n    .then((response) => {\n      console.log(response.data);\n      return response.data;\n    });\n  return {\n    type: GET_REPORT_DETAIL,\n    payload: request,\n  };\n}\n\nexport function clearDetail() {\n  const request = {};\n  return {\n    type: CLEAR,\n    payload: request,\n  };\n}\n\nexport function updateReport(id) {\n  const data = { id };\n  const request = axios\n    .put(`${REPORT_SERVER}/updateReport`, data)\n    .then((response) => {\n      console.log(response.data);\n      return response.data;\n    });\n  return {\n    type: UPDATE_REPORT,\n    payload: request,\n  };\n}\n\nexport function deletePost(postId, reportId, id) {\n  const data = { postId, reportId, id };\n  const request = axios\n    .post(`${REPORT_SERVER}/delete_post`, data)\n    .then((response) => {\n      console.log(response.data);\n      return response.data;\n    });\n  return {\n    type: DELETE_REPORT_POST,\n    payload: request,\n  };\n}\n\nexport function deleteComment(commentId, reportId, postId) {\n  const data = { commentId, reportId, postId };\n  const request = axios\n    .post(`${REPORT_SERVER}/delete_comment`, data)\n    .then((response) => {\n      console.log(response.data);\n      return response.data;\n    });\n  return {\n    type: DELETE_REPORT_COMMENT,\n    payload: request,\n  };\n}\n\nexport function deleteRestrictedFunction(funcId, _id) {\n  const data = { funcId, _id };\n  const request = axios\n    .put(`${REPORT_SERVER}/deleteRestrictFunction`, data)\n    .then((response) => {\n      console.log(response.data);\n      return response.data;\n    });\n  return {\n    type: DELETE_RESTRICTED_FUNCTION,\n    payload: request,\n  };\n}\n\nexport function restrictUser(func, userId, reportId) {\n  const data = { funcList: func, _id: userId, reportId: reportId };\n  console.log(data);\n  const request = axios\n    .put(`${REPORT_SERVER}/restrictUserFunction`, data)\n    .then((response) => {\n      console.log(response.data);\n      return response.data;\n    });\n  return {\n    type: RESTRICT_USER,\n    payload: request,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}