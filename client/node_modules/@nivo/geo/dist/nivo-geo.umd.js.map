{"version":3,"file":"nivo-geo.umd.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/hooks.js","../src/ChoroplethTooltip.js","../src/props.js","../src/GeoGraticule.js","../src/GeoMapFeature.js","../src/GeoMap.js","../src/ResponsiveGeoMap.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/GeoMapCanvas.js","../src/ResponsiveGeoMapCanvas.js","../src/Choropleth.js","../src/ResponsiveChoropleth.js","../src/ChoroplethCanvas.js","../src/ResponsiveChoroplethCanvas.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useMemo } from 'react'\nimport { isFunction, get } from 'lodash'\nimport { format } from 'd3-format'\nimport {\n    geoPath,\n    geoAzimuthalEqualArea,\n    geoAzimuthalEquidistant,\n    geoGnomonic,\n    geoOrthographic,\n    geoStereographic,\n    geoEqualEarth,\n    geoEquirectangular,\n    geoMercator,\n    geoTransverseMercator,\n    geoNaturalEarth1,\n    geoGraticule,\n} from 'd3-geo'\nimport { guessQuantizeColorScale, useTheme } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { useQuantizeColorScaleLegendData } from '@nivo/legends'\n\nexport const projectionById = {\n    azimuthalEqualArea: geoAzimuthalEqualArea,\n    azimuthalEquidistant: geoAzimuthalEquidistant,\n    gnomonic: geoGnomonic,\n    orthographic: geoOrthographic,\n    stereographic: geoStereographic,\n    equalEarth: geoEqualEarth,\n    equirectangular: geoEquirectangular,\n    mercator: geoMercator,\n    transverseMercator: geoTransverseMercator,\n    naturalEarth1: geoNaturalEarth1,\n}\n\nexport const useGeoMap = ({\n    width,\n    height,\n    projectionType,\n    projectionScale,\n    projectionTranslation,\n    projectionRotation,\n    fillColor,\n    borderWidth,\n    borderColor,\n}) => {\n    const projection = useMemo(() => {\n        return projectionById[projectionType]()\n            .scale(projectionScale)\n            .translate([width * projectionTranslation[0], height * projectionTranslation[1]])\n            .rotate(projectionRotation)\n    }, [\n        width,\n        height,\n        projectionType,\n        projectionScale,\n        projectionTranslation[0],\n        projectionTranslation[1],\n        projectionRotation[0],\n        projectionRotation[1],\n        projectionRotation[2],\n    ])\n    const path = useMemo(() => geoPath(projection), [projection])\n    const graticule = useMemo(() => geoGraticule())\n\n    const theme = useTheme()\n    const getBorderWidth = useMemo(\n        () => (typeof borderWidth === 'function' ? borderWidth : () => borderWidth),\n        [borderWidth]\n    )\n    const getBorderColor = useInheritedColor(borderColor, theme)\n    const getFillColor = useMemo(\n        () => (typeof fillColor === 'function' ? fillColor : () => fillColor),\n        [fillColor]\n    )\n\n    return {\n        projection,\n        path,\n        graticule,\n        getBorderWidth,\n        getBorderColor,\n        getFillColor,\n    }\n}\n\nexport const useChoropleth = ({\n    features,\n    data,\n    match,\n    label,\n    value,\n    valueFormat,\n    colors,\n    unknownColor,\n    domain,\n}) => {\n    const findMatchingDatum = useMemo(() => {\n        if (isFunction(match)) return match\n        return (feature, datum) => {\n            const featureKey = get(feature, match)\n            const datumKey = get(datum, match)\n\n            return featureKey && featureKey === datumKey\n        }\n    }, [match])\n    const getLabel = useMemo(() => (isFunction(label) ? label : datum => get(datum, label)), [\n        label,\n    ])\n    const getValue = useMemo(() => (isFunction(value) ? value : datum => get(datum, value)), [\n        value,\n    ])\n    const valueFormatter = useMemo(() => {\n        if (valueFormat === undefined) return d => d\n        if (isFunction(valueFormat)) return valueFormat\n        return format(valueFormat)\n    }, [valueFormat])\n\n    const colorScale = useMemo(() => guessQuantizeColorScale(colors).domain(domain), [\n        colors,\n        domain,\n    ])\n    const getFillColor = useMemo(() => {\n        return feature => {\n            if (feature.value === undefined) return unknownColor\n            return colorScale(feature.value)\n        }\n    }, [colorScale, unknownColor])\n\n    const boundFeatures = useMemo(\n        () =>\n            features.map(feature => {\n                const datum = data.find(datum => findMatchingDatum(feature, datum))\n                const datumValue = getValue(datum)\n\n                if (datum) {\n                    const featureWithData = {\n                        ...feature,\n                        data: datum,\n                        value: datumValue,\n                        formattedValue: valueFormatter(datumValue),\n                    }\n                    featureWithData.color = getFillColor(featureWithData)\n                    featureWithData.label = getLabel(featureWithData)\n\n                    return featureWithData\n                }\n\n                return feature\n            }),\n        [features, data, findMatchingDatum, getValue, valueFormatter, getFillColor]\n    )\n\n    const legendData = useQuantizeColorScaleLegendData({\n        scale: colorScale,\n        valueFormat: valueFormatter,\n    })\n\n    return {\n        colorScale,\n        getFillColor,\n        boundFeatures,\n        valueFormatter,\n        legendData,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst ChoroplethTooltip = memo(({ feature }) => {\n    if (feature.data === undefined) return null\n\n    return (\n        <BasicTooltip\n            id={feature.label}\n            color={feature.color}\n            enableChip={true}\n            value={feature.formattedValue}\n        />\n    )\n})\n\nChoroplethTooltip.propTypes = {\n    feature: PropTypes.object.isRequired,\n}\n\nChoroplethTooltip.displayName = 'ChoroplethTooltip'\n\nexport default ChoroplethTooltip\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { quantizeColorScalePropType } from '@nivo/core'\nimport { inheritedColorPropType } from '@nivo/colors'\nimport { projectionById } from './hooks'\nimport ChoroplethTooltip from './ChoroplethTooltip'\n\nconst commonPropTypes = {\n    features: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            type: PropTypes.oneOf(['Feature']).isRequired,\n            properties: PropTypes.object,\n            geometry: PropTypes.object.isRequired,\n        })\n    ).isRequired,\n\n    projectionType: PropTypes.oneOf(Object.keys(projectionById)).isRequired,\n    projectionScale: PropTypes.number.isRequired,\n    projectionTranslation: PropTypes.arrayOf(PropTypes.number).isRequired,\n    projectionRotation: PropTypes.arrayOf(PropTypes.number).isRequired,\n\n    fillColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    borderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    borderColor: inheritedColorPropType.isRequired,\n\n    enableGraticule: PropTypes.bool.isRequired,\n    graticuleLineWidth: PropTypes.number.isRequired,\n    graticuleLineColor: PropTypes.string.isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func.isRequired,\n    onMouseMove: PropTypes.func.isRequired,\n    onMouseLeave: PropTypes.func.isRequired,\n    onClick: PropTypes.func.isRequired,\n    tooltip: PropTypes.any,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['graticule', 'features']), PropTypes.func])\n    ).isRequired,\n}\n\nexport const GeoMapPropTypes = {\n    ...commonPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nexport const GeoMapCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonChoroplethPropTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    match: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    valueFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    colors: quantizeColorScalePropType.isRequired,\n    domain: PropTypes.arrayOf(PropTypes.number).isRequired,\n    unknownColor: PropTypes.string.isRequired,\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['graticule', 'features', 'legends']), PropTypes.func])\n    ).isRequired,\n}\n\nexport const ChoroplethPropTypes = {\n    ...GeoMapPropTypes,\n    ...commonChoroplethPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nexport const ChoroplethCanvasPropTypes = {\n    ...GeoMapCanvasPropTypes,\n    ...commonChoroplethPropTypes,\n}\n\nconst commonDefaultProps = {\n    projectionType: 'mercator',\n    projectionScale: 100,\n    projectionTranslation: [0.5, 0.5],\n    projectionRotation: [0, 0, 0],\n\n    enableGraticule: false,\n    graticuleLineWidth: 0.5,\n    graticuleLineColor: '#999999',\n\n    fillColor: '#dddddd',\n    borderWidth: 0,\n    borderColor: '#000000',\n\n    isInteractive: true,\n    onMouseEnter: () => {},\n    onMouseLeave: () => {},\n    onMouseMove: () => {},\n    onClick: () => {},\n\n    layers: ['graticule', 'features'],\n    legends: [],\n}\n\nexport const GeoMapDefaultProps = {\n    ...commonDefaultProps,\n    role: 'img',\n}\n\nexport const GeoMapCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n}\n\nconst commonChoroplethDefaultProps = {\n    match: 'id',\n    label: 'id',\n    value: 'value',\n    colors: 'PuBuGn',\n    unknownColor: '#999',\n    tooltip: ChoroplethTooltip,\n    layers: ['graticule', 'features', 'legends'],\n}\n\nexport const ChoroplethDefaultProps = {\n    ...GeoMapDefaultProps,\n    ...commonChoroplethDefaultProps,\n    role: 'img',\n}\n\nexport const ChoroplethCanvasDefaultProps = {\n    ...GeoMapCanvasDefaultProps,\n    ...commonChoroplethDefaultProps,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst GeoGraticule = memo(({ path, graticule, lineWidth, lineColor }) => {\n    return <path fill=\"none\" strokeWidth={lineWidth} stroke={lineColor} d={path(graticule())} />\n})\n\nGeoGraticule.propTypes = {\n    path: PropTypes.func.isRequired,\n    graticule: PropTypes.func.isRequired,\n    lineWidth: PropTypes.number.isRequired,\n    lineColor: PropTypes.string.isRequired,\n}\n\nGeoGraticule.displayName = 'GeoGraticule'\n\nexport default GeoGraticule\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst GeoMapFeature = memo(\n    ({\n        feature,\n        path,\n        fillColor,\n        borderWidth,\n        borderColor,\n        onClick,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n    }) => {\n        return (\n            <path\n                key={feature.id}\n                fill={fillColor}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                strokeLinejoin=\"bevel\"\n                d={path(feature)}\n                onMouseEnter={event => onMouseEnter(feature, event)}\n                onMouseMove={event => onMouseMove(feature, event)}\n                onMouseLeave={event => onMouseLeave(feature, event)}\n                onClick={event => onClick(feature, event)}\n            />\n        )\n    }\n)\n\nGeoMapFeature.propTypes = {\n    feature: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        type: PropTypes.oneOf(['Feature']).isRequired,\n        properties: PropTypes.object,\n        geometry: PropTypes.object.isRequired,\n    }).isRequired,\n    path: PropTypes.func.isRequired,\n\n    fillColor: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n\n    onMouseEnter: PropTypes.func.isRequired,\n    onMouseMove: PropTypes.func.isRequired,\n    onMouseLeave: PropTypes.func.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\n\nGeoMapFeature.displayName = 'GeoMapFeature'\n\nexport default GeoMapFeature\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Fragment, useCallback, memo } from 'react'\nimport { SvgWrapper, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { GeoMapPropTypes, GeoMapDefaultProps } from './props'\nimport GeoGraticule from './GeoGraticule'\nimport GeoMapFeature from './GeoMapFeature'\nimport { useGeoMap } from './hooks'\n\nconst GeoMap = memo(props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n        features,\n        layers,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        fillColor,\n        borderWidth,\n        borderColor,\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n        isInteractive,\n        onClick,\n        tooltip: Tooltip,\n        role,\n    } = props\n    const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n    const { graticule, path, getFillColor, getBorderWidth, getBorderColor } = useGeoMap({\n        width,\n        height,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        fillColor,\n        borderWidth,\n        borderColor,\n    })\n\n    const theme = useTheme()\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleClick = useCallback(\n        (feature, event) => isInteractive && onClick && onClick(feature, event),\n        [isInteractive, onClick]\n    )\n    const handleMouseEnter = useCallback(\n        (feature, event) =>\n            isInteractive && Tooltip && showTooltipFromEvent(<Tooltip feature={feature} />, event),\n        [isInteractive, showTooltipFromEvent, Tooltip]\n    )\n    const handleMouseMove = useCallback(\n        (feature, event) =>\n            isInteractive && Tooltip && showTooltipFromEvent(<Tooltip feature={feature} />, event),\n        [isInteractive, showTooltipFromEvent, Tooltip]\n    )\n    const handleMouseLeave = useCallback(() => isInteractive && hideTooltip(), [\n        isInteractive,\n        hideTooltip,\n    ])\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            theme={theme}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layer === 'graticule') {\n                    if (enableGraticule !== true) return null\n\n                    return (\n                        <GeoGraticule\n                            key=\"graticule\"\n                            path={path}\n                            graticule={graticule}\n                            lineWidth={graticuleLineWidth}\n                            lineColor={graticuleLineColor}\n                        />\n                    )\n                }\n                if (layer === 'features') {\n                    return (\n                        <Fragment key=\"features\">\n                            {features.map(feature => (\n                                <GeoMapFeature\n                                    key={feature.id}\n                                    feature={feature}\n                                    path={path}\n                                    fillColor={getFillColor(feature)}\n                                    borderWidth={getBorderWidth(feature)}\n                                    borderColor={getBorderColor(feature)}\n                                    onMouseEnter={handleMouseEnter}\n                                    onMouseMove={handleMouseMove}\n                                    onMouseLeave={handleMouseLeave}\n                                    onClick={handleClick}\n                                />\n                            ))}\n                        </Fragment>\n                    )\n                }\n\n                return <Fragment key={i}>{layer(props)}</Fragment>\n            })}\n        </SvgWrapper>\n    )\n})\n\nGeoMap.displayName = 'GeoMap'\nGeoMap.propTypes = GeoMapPropTypes\nGeoMap.defaultProps = GeoMapDefaultProps\n\nexport default withContainer(GeoMap)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport GeoMap from './GeoMap'\n\nconst ResponsiveGeoMap = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <GeoMap width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveGeoMap\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useRef, useEffect, useCallback } from 'react'\nimport { geoContains } from 'd3-geo'\nimport { getRelativeCursor, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { GeoMapCanvasDefaultProps, GeoMapCanvasPropTypes } from './props'\nimport { useGeoMap } from './hooks'\n\nconst getFeatureFromMouseEvent = (event, el, features, projection) => {\n    const [x, y] = getRelativeCursor(el, event)\n\n    return features.find(f => geoContains(f, projection.invert([x, y])))\n}\n\nconst GeoMapCanvas = memo(props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n        pixelRatio,\n        features,\n        layers,\n\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n\n        fillColor,\n        borderWidth,\n        borderColor,\n\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n\n        isInteractive,\n        onClick,\n        onMouseMove,\n        tooltip: Tooltip,\n    } = props\n\n    const canvasEl = useRef(null)\n    const theme = useTheme()\n    const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n    const { projection, graticule, path, getFillColor, getBorderWidth, getBorderColor } = useGeoMap(\n        {\n            width,\n            height,\n            projectionType,\n            projectionScale,\n            projectionTranslation,\n            projectionRotation,\n            fillColor,\n            borderWidth,\n            borderColor,\n        }\n    )\n\n    useEffect(() => {\n        if (!canvasEl) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        path.context(ctx)\n\n        layers.forEach(layer => {\n            if (layer === 'graticule') {\n                if (enableGraticule === true) {\n                    ctx.lineWidth = graticuleLineWidth\n                    ctx.strokeStyle = graticuleLineColor\n                    ctx.beginPath()\n                    path(graticule())\n                    ctx.stroke()\n                }\n            } else if (layer === 'features') {\n                features.forEach(feature => {\n                    ctx.beginPath()\n                    path(feature)\n                    ctx.fillStyle = getFillColor(feature)\n                    ctx.fill()\n\n                    const borderWidth = getBorderWidth(feature)\n                    if (borderWidth > 0) {\n                        ctx.strokeStyle = getBorderColor(feature)\n                        ctx.lineWidth = borderWidth\n                        ctx.stroke()\n                    }\n                })\n            } else {\n                layer(ctx, props)\n            }\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        margin,\n        pixelRatio,\n        theme,\n        path,\n        graticule,\n        getFillColor,\n        getBorderWidth,\n        getBorderColor,\n        features,\n        layers,\n    ])\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleMouseMove = useCallback(\n        event => {\n            if (!isInteractive || !Tooltip) return\n\n            const feature = getFeatureFromMouseEvent(event, canvasEl.current, features, projection)\n            if (feature) {\n                showTooltipFromEvent(<Tooltip feature={feature} />, event)\n            } else {\n                hideTooltip()\n            }\n            onMouseMove && onMouseMove(feature || null, event)\n        },\n        [showTooltipFromEvent, hideTooltip, isInteractive, Tooltip, canvasEl, features, projection]\n    )\n    const handleMouseLeave = useCallback(() => isInteractive && hideTooltip(), [\n        isInteractive,\n        hideTooltip,\n    ])\n    const handleClick = useCallback(\n        event => {\n            if (!isInteractive || !onClick) return\n\n            const feature = getFeatureFromMouseEvent(event, canvasEl.current, features, projection)\n            if (feature) {\n                onClick(feature, event)\n            }\n        },\n        [isInteractive, canvasEl, features, projection, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n        />\n    )\n})\n\nGeoMapCanvas.displatName = 'GeoMapCanvas'\nGeoMapCanvas.propTypes = GeoMapCanvasPropTypes\nGeoMapCanvas.defaultProps = GeoMapCanvasDefaultProps\n\nexport default withContainer(GeoMapCanvas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport GeoMapCanvas from './GeoMapCanvas'\n\nconst ResponsiveGeoMapCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <GeoMapCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveGeoMapCanvas\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, Fragment, useCallback } from 'react'\nimport { SvgWrapper, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ChoroplethPropTypes, ChoroplethDefaultProps } from './props'\nimport GeoGraticule from './GeoGraticule'\nimport GeoMapFeature from './GeoMapFeature'\nimport { useGeoMap, useChoropleth } from './hooks'\n\nconst Choropleth = memo(\n    ({\n        width,\n        height,\n        margin: partialMargin,\n        features,\n        data,\n        match,\n        label,\n        value,\n        valueFormat,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        colors,\n        domain,\n        unknownColor,\n        borderWidth,\n        borderColor,\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n        layers,\n        legends,\n        isInteractive,\n        onClick,\n        tooltip: Tooltip,\n        role,\n    }) => {\n        const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n        const { graticule, path, getBorderWidth, getBorderColor } = useGeoMap({\n            width,\n            height,\n            projectionType,\n            projectionScale,\n            projectionTranslation,\n            projectionRotation,\n            fillColor: () => {},\n            borderWidth,\n            borderColor,\n        })\n        const { getFillColor, boundFeatures, legendData } = useChoropleth({\n            features,\n            data,\n            match,\n            label,\n            value,\n            valueFormat,\n            colors,\n            unknownColor,\n            domain,\n        })\n\n        const theme = useTheme()\n\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n        const handleClick = useCallback(\n            (feature, event) => isInteractive && onClick && onClick(feature, event),\n            [isInteractive, onClick]\n        )\n        const handleMouseEnter = useCallback(\n            (feature, event) =>\n                isInteractive &&\n                Tooltip &&\n                showTooltipFromEvent(<Tooltip feature={feature} />, event),\n            [isInteractive, showTooltipFromEvent, Tooltip]\n        )\n        const handleMouseMove = useCallback(\n            (feature, event) =>\n                isInteractive &&\n                Tooltip &&\n                showTooltipFromEvent(<Tooltip feature={feature} />, event),\n            [isInteractive, showTooltipFromEvent, Tooltip]\n        )\n        const handleMouseLeave = useCallback(() => isInteractive && hideTooltip(), [\n            isInteractive,\n            hideTooltip,\n        ])\n\n        return (\n            <SvgWrapper\n                width={outerWidth}\n                height={outerHeight}\n                margin={margin}\n                theme={theme}\n                role={role}\n            >\n                {layers.map((layer, i) => {\n                    if (layer === 'graticule') {\n                        if (enableGraticule !== true) return null\n\n                        return (\n                            <GeoGraticule\n                                key=\"graticule\"\n                                path={path}\n                                graticule={graticule}\n                                lineWidth={graticuleLineWidth}\n                                lineColor={graticuleLineColor}\n                            />\n                        )\n                    }\n                    if (layer === 'features') {\n                        return (\n                            <Fragment key=\"features\">\n                                {boundFeatures.map(feature => (\n                                    <GeoMapFeature\n                                        key={feature.id}\n                                        feature={feature}\n                                        path={path}\n                                        fillColor={getFillColor(feature)}\n                                        borderWidth={getBorderWidth(feature)}\n                                        borderColor={getBorderColor(feature)}\n                                        onMouseEnter={handleMouseEnter}\n                                        onMouseMove={handleMouseMove}\n                                        onMouseLeave={handleMouseLeave}\n                                        onClick={handleClick}\n                                    />\n                                ))}\n                            </Fragment>\n                        )\n                    }\n                    if (layer === 'legends') {\n                        return legends.map((legend, i) => {\n                            return (\n                                <BoxLegendSvg\n                                    key={i}\n                                    containerWidth={width}\n                                    containerHeight={height}\n                                    data={legendData}\n                                    {...legend}\n                                />\n                            )\n                        })\n                    }\n\n                    return <Fragment key={i}>{layer({})}</Fragment>\n                })}\n            </SvgWrapper>\n        )\n    }\n)\n\nChoropleth.displayName = 'Choropleth'\nChoropleth.propTypes = ChoroplethPropTypes\nChoropleth.defaultProps = ChoroplethDefaultProps\n\nexport default withContainer(Choropleth)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Choropleth from './Choropleth'\n\nconst ResponsiveChoropleth = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Choropleth width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveChoropleth\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useRef, useEffect, useCallback } from 'react'\nimport { geoContains } from 'd3-geo'\nimport { getRelativeCursor, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ChoroplethCanvasDefaultProps, ChoroplethCanvasPropTypes } from './props'\nimport { useGeoMap, useChoropleth } from './hooks'\n\nconst getFeatureFromMouseEvent = (event, el, features, projection) => {\n    const [x, y] = getRelativeCursor(el, event)\n\n    return features.find(f => geoContains(f, projection.invert([x, y])))\n}\n\nconst ChoroplethCanvas = memo(\n    ({\n        width,\n        height,\n        margin: partialMargin,\n        pixelRatio,\n        features,\n        data,\n        match,\n        label,\n        value,\n        valueFormat,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        colors,\n        domain,\n        unknownColor,\n        borderWidth,\n        borderColor,\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n        layers,\n        legends,\n        isInteractive,\n        onClick,\n        onMouseMove,\n        tooltip: Tooltip,\n    }) => {\n        const canvasEl = useRef(null)\n        const theme = useTheme()\n        const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n        const { projection, graticule, path, getBorderWidth, getBorderColor } = useGeoMap({\n            width,\n            height,\n            projectionType,\n            projectionScale,\n            projectionTranslation,\n            projectionRotation,\n            fillColor: () => {},\n            borderWidth,\n            borderColor,\n        })\n        const { getFillColor, boundFeatures, legendData } = useChoropleth({\n            features,\n            data,\n            match,\n            label,\n            value,\n            valueFormat,\n            colors,\n            unknownColor,\n            domain,\n        })\n\n        useEffect(() => {\n            if (!canvasEl) return\n\n            canvasEl.current.width = outerWidth * pixelRatio\n            canvasEl.current.height = outerHeight * pixelRatio\n\n            const ctx = canvasEl.current.getContext('2d')\n\n            ctx.scale(pixelRatio, pixelRatio)\n\n            ctx.fillStyle = theme.background\n            ctx.fillRect(0, 0, outerWidth, outerHeight)\n            ctx.translate(margin.left, margin.top)\n\n            path.context(ctx)\n\n            layers.forEach(layer => {\n                if (layer === 'graticule') {\n                    if (enableGraticule === true) {\n                        ctx.lineWidth = graticuleLineWidth\n                        ctx.strokeStyle = graticuleLineColor\n                        ctx.beginPath()\n                        path(graticule())\n                        ctx.stroke()\n                    }\n                } else if (layer === 'features') {\n                    boundFeatures.forEach(feature => {\n                        ctx.beginPath()\n                        path(feature)\n                        ctx.fillStyle = getFillColor(feature)\n                        ctx.fill()\n\n                        const borderWidth = getBorderWidth(feature)\n                        if (borderWidth > 0) {\n                            ctx.strokeStyle = getBorderColor(feature)\n                            ctx.lineWidth = borderWidth\n                            ctx.stroke()\n                        }\n                    })\n                } else if (layer === 'legends') {\n                    legends.forEach(legend => {\n                        renderLegendToCanvas(ctx, {\n                            ...legend,\n                            data: legendData,\n                            containerWidth: width,\n                            containerHeight: height,\n                            theme,\n                        })\n                    })\n                } else {\n                    // layer(ctx, {})\n                }\n            })\n        }, [\n            canvasEl,\n            outerWidth,\n            outerHeight,\n            margin,\n            pixelRatio,\n            theme,\n            path,\n            graticule,\n            getFillColor,\n            getBorderWidth,\n            getBorderColor,\n            boundFeatures,\n            legends,\n            layers,\n        ])\n\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n        const handleMouseMove = useCallback(\n            event => {\n                if (!isInteractive || !Tooltip) return\n\n                const feature = getFeatureFromMouseEvent(\n                    event,\n                    canvasEl.current,\n                    boundFeatures,\n                    projection\n                )\n                if (feature) {\n                    showTooltipFromEvent(<Tooltip feature={feature} />, event)\n                } else {\n                    hideTooltip()\n                }\n                onMouseMove && onMouseMove(feature || null, event)\n            },\n            [\n                showTooltipFromEvent,\n                hideTooltip,\n                isInteractive,\n                Tooltip,\n                canvasEl,\n                boundFeatures,\n                projection,\n            ]\n        )\n        const handleMouseLeave = useCallback(() => isInteractive && hideTooltip(), [\n            isInteractive,\n            hideTooltip,\n        ])\n        const handleClick = useCallback(\n            event => {\n                if (!isInteractive || !onClick) return\n\n                const feature = getFeatureFromMouseEvent(\n                    event,\n                    canvasEl.current,\n                    boundFeatures,\n                    projection\n                )\n                if (feature) {\n                    onClick(feature, event)\n                }\n            },\n            [isInteractive, canvasEl, boundFeatures, projection, onClick]\n        )\n\n        return (\n            <canvas\n                ref={canvasEl}\n                width={outerWidth * pixelRatio}\n                height={outerHeight * pixelRatio}\n                style={{\n                    width: outerWidth,\n                    height: outerHeight,\n                    cursor: isInteractive ? 'auto' : 'normal',\n                }}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave}\n                onClick={handleClick}\n            />\n        )\n    }\n)\n\nChoroplethCanvas.displayName = 'ChoroplethCanvas'\nChoroplethCanvas.propTypes = ChoroplethCanvasPropTypes\nChoroplethCanvas.defaultProps = ChoroplethCanvasDefaultProps\n\nexport default withContainer(ChoroplethCanvas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport ChoroplethCanvas from './ChoroplethCanvas'\n\nconst ResponsiveChoroplethCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <ChoroplethCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveChoroplethCanvas\n"],"names":["defineProperty","projectionById","azimuthalEqualArea","geoAzimuthalEqualArea","azimuthalEquidistant","geoAzimuthalEquidistant","gnomonic","geoGnomonic","orthographic","geoOrthographic","stereographic","geoStereographic","equalEarth","geoEqualEarth","equirectangular","geoEquirectangular","mercator","geoMercator","transverseMercator","geoTransverseMercator","naturalEarth1","geoNaturalEarth1","useGeoMap","width","height","projectionType","projectionScale","projectionTranslation","projectionRotation","fillColor","borderWidth","borderColor","projection","useMemo","scale","translate","rotate","path","geoPath","graticule","geoGraticule","theme","useTheme","getBorderWidth","getBorderColor","useInheritedColor","getFillColor","useChoropleth","features","data","match","label","value","valueFormat","colors","unknownColor","domain","findMatchingDatum","feature","datum","featureKey","datumKey","getLabel","getValue","valueFormatter","undefined","d","format","colorScale","guessQuantizeColorScale","boundFeatures","map","find","datumValue","featureWithData","formattedValue","color","legendData","useQuantizeColorScaleLegendData","ChoroplethTooltip","memo","React","BasicTooltip","displayName","commonPropTypes","PropTypes","arrayOf","shape","id","string","isRequired","type","oneOf","properties","object","geometry","Object","keys","number","oneOfType","func","inheritedColorPropType","enableGraticule","bool","graticuleLineWidth","graticuleLineColor","isInteractive","onMouseEnter","onMouseMove","onMouseLeave","onClick","tooltip","any","layers","GeoMapPropTypes","role","GeoMapCanvasPropTypes","pixelRatio","commonChoroplethPropTypes","quantizeColorScalePropType","ChoroplethPropTypes","ChoroplethCanvasPropTypes","commonDefaultProps","legends","GeoMapDefaultProps","GeoMapCanvasDefaultProps","window","devicePixelRatio","commonChoroplethDefaultProps","ChoroplethDefaultProps","ChoroplethCanvasDefaultProps","GeoGraticule","lineWidth","lineColor","GeoMapFeature","event","GeoMap","props","partialMargin","margin","Tooltip","useDimensions","outerWidth","outerHeight","useTooltip","showTooltipFromEvent","hideTooltip","handleClick","useCallback","handleMouseEnter","handleMouseMove","handleMouseLeave","SvgWrapper","layer","i","Fragment","defaultProps","withContainer","ResponsiveGeoMap","ResponsiveWrapper","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","getFeatureFromMouseEvent","el","getRelativeCursor","x","y","f","geoContains","invert","GeoMapCanvas","canvasEl","useRef","useEffect","current","ctx","getContext","fillStyle","background","fillRect","left","top","context","forEach","strokeStyle","beginPath","stroke","fill","cursor","displatName","ResponsiveGeoMapCanvas","Choropleth","legend","BoxLegendSvg","ResponsiveChoropleth","ChoroplethCanvas","renderLegendToCanvas","containerWidth","containerHeight","ResponsiveChoroplethCanvas"],"mappings":"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"}