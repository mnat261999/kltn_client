{"version":3,"file":"nivo-axes.es.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/compute.ts","../src/components/AxisTick.tsx","../src/components/Axis.tsx","../src/props.ts","../src/components/Axes.tsx","../src/components/GridLine.tsx","../src/components/GridLines.tsx","../src/components/Grid.tsx","../src/canvas.ts"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import {\n    CountableTimeInterval,\n    timeMillisecond,\n    utcMillisecond,\n    timeSecond,\n    utcSecond,\n    timeMinute,\n    utcMinute,\n    timeHour,\n    utcHour,\n    timeDay,\n    utcDay,\n    timeWeek,\n    utcWeek,\n    timeSunday,\n    utcSunday,\n    timeMonday,\n    utcMonday,\n    timeTuesday,\n    utcTuesday,\n    timeWednesday,\n    utcWednesday,\n    timeThursday,\n    utcThursday,\n    timeFriday,\n    utcFriday,\n    timeSaturday,\n    utcSaturday,\n    timeMonth,\n    utcMonth,\n    timeYear,\n    utcYear,\n} from 'd3-time'\nimport { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\n// @ts-ignore\nimport { textPropsByEngine } from '@nivo/core'\nimport {\n    AxisValue,\n    Point,\n    TicksSpec,\n    AnyScale,\n    ScaleWithBandwidth,\n    ValueFormatter,\n    Line,\n} from './types'\n\nexport const centerScale = <Value>(scale: ScaleWithBandwidth) => {\n    const bandwidth = scale.bandwidth()\n\n    if (bandwidth === 0) return scale\n\n    let offset = bandwidth / 2\n    if (scale.round()) {\n        offset = Math.round(offset)\n    }\n\n    return <T extends Value>(d: T) => (scale(d) ?? 0) + offset\n}\n\nconst timeByType: Record<string, [CountableTimeInterval, CountableTimeInterval]> = {\n    millisecond: [timeMillisecond, utcMillisecond],\n    second: [timeSecond, utcSecond],\n    minute: [timeMinute, utcMinute],\n    hour: [timeHour, utcHour],\n    day: [timeDay, utcDay],\n    week: [timeWeek, utcWeek],\n    sunday: [timeSunday, utcSunday],\n    monday: [timeMonday, utcMonday],\n    tuesday: [timeTuesday, utcTuesday],\n    wednesday: [timeWednesday, utcWednesday],\n    thursday: [timeThursday, utcThursday],\n    friday: [timeFriday, utcFriday],\n    saturday: [timeSaturday, utcSaturday],\n    month: [timeMonth, utcMonth],\n    year: [timeYear, utcYear],\n}\n\nconst timeTypes = Object.keys(timeByType)\nconst timeIntervalRegexp = new RegExp(`^every\\\\s*(\\\\d+)?\\\\s*(${timeTypes.join('|')})s?$`, 'i')\n\nconst isInteger = (value: unknown): value is number =>\n    typeof value === 'number' && isFinite(value) && Math.floor(value) === value\n\nconst isArray = <T>(value: unknown): value is T[] => Array.isArray(value)\n\nexport const getScaleTicks = <Value extends AxisValue>(\n    scale: AnyScale,\n    spec?: TicksSpec<Value>\n) => {\n    // specific values\n    if (Array.isArray(spec)) {\n        return spec\n    }\n\n    // continuous scales\n    if ('ticks' in scale) {\n        // default behaviour\n        if (spec === undefined) {\n            return scale.ticks()\n        }\n\n        // specific tick count\n        if (isInteger(spec)) {\n            return scale.ticks(spec)\n        }\n\n        if (typeof spec === 'string' && 'useUTC' in scale) {\n            // time interval\n            const matches = spec.match(timeIntervalRegexp)\n            if (matches) {\n                // UTC is used as it's more predictible\n                // however local time could be used too\n                // let's see how it fits users' requirements\n                const timeType = timeByType[matches[2]][scale.useUTC ? 1 : 0]\n\n                if (matches[1] === undefined) {\n                    return scale.ticks(timeType)\n                }\n\n                const interval = timeType.every(Number(matches[1]))\n\n                if (interval) {\n                    return scale.ticks(interval)\n                }\n            }\n\n            throw new Error(`Invalid tickValues: ${spec}`)\n        }\n    }\n\n    // non linear scale default\n    return scale.domain()\n}\n\nexport const computeCartesianTicks = <Value extends AxisValue>({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    engine = 'svg',\n}: {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    ticksPosition?: 'after' | 'before'\n    tickValues?: TicksSpec<Value>\n    tickSize: number\n    tickPadding: number\n    tickRotation: number\n    engine?: 'svg' | 'canvas'\n}) => {\n    const values = getScaleTicks(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    const isRTL = typeof document === 'object' ? document.dir === 'rtl' : false\n    let translate: (value: Value) => Point\n    let textAlign: CanvasTextAlign = textProps.align.center\n    let textBaseline: CanvasTextBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d) ?? 0, y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'left' : 'right']\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'right' : 'left']\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) ?? 0 })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const ticks = values.map(value => ({\n        key: typeof value === 'number' || typeof value === 'string' ? value : `${value}`,\n        value,\n        ...translate(value),\n        ...line,\n        ...text,\n    }))\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = <Value extends AxisValue>(\n    format: string | ValueFormatter<Value> | undefined,\n    scale: AnyScale\n): ValueFormatter<Value> | undefined => {\n    if (typeof format === 'undefined' || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const formatter = timeFormat(format)\n\n        return (d => formatter(d instanceof Date ? d : new Date(d))) as ValueFormatter<Value>\n    }\n\n    return (d3Format(format) as unknown) as ValueFormatter<Value>\n}\n\nexport const computeGridLines = <Value extends AxisValue>({\n    width,\n    height,\n    scale,\n    axis,\n    values: _values,\n}: {\n    width: number\n    height: number\n    scale: AnyScale\n    axis: 'x' | 'y'\n    values?: TicksSpec<Value>\n}) => {\n    const lineValues = isArray<number>(_values) ? _values : undefined\n    const lineCount = isInteger(_values) ? _values : undefined\n\n    const values = lineValues || getScaleTicks(scale, lineCount)\n\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n\n    const lines: Line[] =\n        axis === 'x'\n            ? values.map(value => ({\n                  key: `${value}`,\n                  x1: position(value) ?? 0,\n                  x2: position(value) ?? 0,\n                  y1: 0,\n                  y2: height,\n              }))\n            : values.map(value => ({\n                  key: `${value}`,\n                  x1: 0,\n                  x2: width,\n                  y1: position(value) ?? 0,\n                  y2: position(value) ?? 0,\n              }))\n\n    return lines\n}\n","import React, { useMemo, memo } from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { AxisTickProps, AxisValue } from '../types'\n\nconst AxisTick = <Value extends AxisValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n","import React, { useMemo, memo } from 'react'\nimport { useSpring, useTransition, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisTick } from './AxisTick'\nimport { AnyScale, AxisProps, AxisValue } from '../types'\n\nconst Axis = <Value extends AxisValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition<\n        typeof ticks[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nconst memoizedAxis = memo(Axis) as typeof Axis\n\nexport { memoizedAxis as Axis }\n","import PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n\nexport const positions = ['top', 'right', 'bottom', 'left'] as const\n","import React, { memo } from 'react'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AnyScale, AxisProps, AxisValue } from '../types'\n\nexport const Axes = memo(\n    <X extends AxisValue, Y extends AxisValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X>\n        right?: AxisProps<Y>\n        bottom?: AxisProps<X>\n        left?: AxisProps<Y>\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n","import React, { memo } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return <animated.line {...animatedProps} {...(theme.grid.line as unknown)} />\n    }\n)\n","import React, { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n","import React, { useMemo, memo } from 'react'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\nimport { AnyScale, AxisValue } from '../types'\n\nexport const Grid = memo(\n    <X extends AxisValue, Y extends AxisValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale\n        xValues?: number | X[]\n        yScale?: AnyScale\n        yValues?: number | Y[]\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n","import { degreesToRadians, CompleteTheme } from '@nivo/core'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\nimport { positions } from './props'\nimport {\n    AxisValue,\n    TicksSpec,\n    AnyScale,\n    AxisLegendPosition,\n    CanvasAxisProp,\n    ValueFormatter,\n} from './types'\n\nexport const renderAxisToCanvas = <Value extends AxisValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format: _format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }: {\n        axis: 'x' | 'y'\n        scale: AnyScale\n        x?: number\n        y?: number\n        length: number\n        ticksPosition: 'before' | 'after'\n        tickValues?: TicksSpec<Value>\n        tickSize?: number\n        tickPadding?: number\n        tickRotation?: number\n        format?: string | ValueFormatter<Value>\n        legend?: string\n        legendPosition?: AxisLegendPosition\n        legendOffset?: number\n        theme: CompleteTheme\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n    ctx.font = `${theme.axis.ticks.text.fontSize}px ${theme.axis.ticks.text.fontFamily}`\n\n    if ((theme.axis.domain.line.strokeWidth ?? 0) > 0) {\n        ctx.lineWidth = Number(theme.axis.domain.line.strokeWidth)\n        ctx.lineCap = 'square'\n\n        if (theme.axis.domain.line.stroke) {\n            ctx.strokeStyle = theme.axis.domain.line.stroke\n        }\n\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    const format = typeof _format === 'function' ? _format : (value: unknown) => `${value}`\n\n    ticks.forEach(tick => {\n        if ((theme.axis.ticks.line.strokeWidth ?? 0) > 0) {\n            ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth)\n            ctx.lineCap = 'square'\n\n            if (theme.axis.ticks.line.stroke) {\n                ctx.strokeStyle = theme.axis.ticks.line.stroke\n            }\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format(tick.value)\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n\n        if (theme.axis.ticks.text.fill) {\n            ctx.fillStyle = theme.axis.ticks.text.fill\n        }\n\n        ctx.fillText(String(value), 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign: CanvasTextAlign = 'center'\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n\n        if (theme.axis.legend.text.fill) {\n            ctx.fillStyle = theme.axis.legend.text.fill\n        }\n\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nexport const renderAxesToCanvas = <X extends AxisValue, Y extends AxisValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: CanvasAxisProp<X>\n        right?: CanvasAxisProp<Y>\n        bottom?: CanvasAxisProp<X>\n        left?: CanvasAxisProp<Y>\n        theme: CompleteTheme\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position] as typeof position extends 'bottom' | 'top'\n            ? CanvasAxisProp<X> | undefined\n            : CanvasAxisProp<Y> | undefined\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = <Value extends AxisValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        width,\n        height,\n        scale,\n        axis,\n        values,\n    }: {\n        width: number\n        height: number\n        scale: AnyScale\n        axis: 'x' | 'y'\n        values?: TicksSpec<Value>\n    }\n) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n"],"names":["defineProperty","centerScale","scale","bandwidth","offset","round","Math","d","timeByType","millisecond","timeMillisecond","utcMillisecond","second","timeSecond","utcSecond","minute","timeMinute","utcMinute","hour","timeHour","utcHour","day","timeDay","utcDay","week","timeWeek","utcWeek","sunday","timeSunday","utcSunday","monday","timeMonday","utcMonday","tuesday","timeTuesday","utcTuesday","wednesday","timeWednesday","utcWednesday","thursday","timeThursday","utcThursday","friday","timeFriday","utcFriday","saturday","timeSaturday","utcSaturday","month","timeMonth","utcMonth","year","timeYear","utcYear","timeTypes","Object","keys","timeIntervalRegexp","RegExp","join","isInteger","value","isFinite","floor","isArray","Array","getScaleTicks","spec","undefined","ticks","matches","match","timeType","useUTC","interval","every","Number","Error","domain","computeCartesianTicks","axis","ticksPosition","tickValues","tickSize","tickPadding","tickRotation","engine","values","textProps","textPropsByEngine","position","line","lineX","lineY","text","textX","textY","isRTL","document","dir","translate","textAlign","align","center","textBaseline","baseline","x","y","top","bottom","left","right","map","key","getFormatter","format","type","formatter","timeFormat","Date","d3Format","computeGridLines","width","height","_values","lineValues","lineCount","lines","x1","x2","y1","y2","AxisTick","_value","onClick","textAnchor","animatedProps","theme","useTheme","props","useMemo","style","opacity","cursor","event","transform","textTransform","memoizedAxisTick","memo","Axis","length","renderTick","legend","legendPosition","legendOffset","ariaHidden","formatValue","legendNode","legendX","legendY","legendRotation","dominantBaseline","useMotionConfig","animate","springConfig","config","useSpring","lineX2","lineY2","immediate","transition","useTransition","tick","initial","from","enter","update","leave","transitionProps","_state","tickIndex","React","createElement","rotate","memoizedAxis","axisPropTypes","PropTypes","oneOf","oneOfType","number","arrayOf","string","instanceOf","func","node","bool","axisPropType","shape","positions","Axes","xScale","yScale","axes","isXAxis","GridLine","grid","GridLines","Grid","xValues","yValues","xLines","yLines","renderAxisToCanvas","ctx","_format","save","font","fontSize","fontFamily","strokeWidth","lineWidth","lineCap","stroke","strokeStyle","beginPath","moveTo","lineTo","forEach","degreesToRadians","fill","fillStyle","fillText","String","restore","fontWeight","renderAxesToCanvas","renderGridLinesToCanvas"],"mappings":"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"}