import React from 'react';
import { AnyScale } from '../types';
export declare const Grid: React.MemoExoticComponent<(<X extends import("@nivo/core").DatumValue, Y extends import("@nivo/core").DatumValue>({ width, height, xScale, yScale, xValues, yValues, }: {
    width: number;
    height: number;
    xScale?: (import("d3-scale").ScaleBand<any> & {
        type: "band";
    }) | (import("d3-scale").ScalePoint<any> & {
        type: "point";
    }) | (import("d3-scale").ScaleLinear<any, number, never> & {
        type: "linear";
    }) | (import("d3-scale").ScaleOrdinal<any, number, never> & {
        type: "ordinal";
    }) | (import("d3-scale").ScaleTime<any, number, never> & {
        useUTC: boolean;
        type: "time";
    }) | (import("d3-scale").ScaleSymLog<any, number, never> & {
        type: "symlog";
    }) | (import("d3-scale").ScaleLogarithmic<any, number, never> & {
        type: "log";
    }) | undefined;
    xValues?: number | X[] | undefined;
    yScale?: (import("d3-scale").ScaleBand<any> & {
        type: "band";
    }) | (import("d3-scale").ScalePoint<any> & {
        type: "point";
    }) | (import("d3-scale").ScaleLinear<any, number, never> & {
        type: "linear";
    }) | (import("d3-scale").ScaleOrdinal<any, number, never> & {
        type: "ordinal";
    }) | (import("d3-scale").ScaleTime<any, number, never> & {
        useUTC: boolean;
        type: "time";
    }) | (import("d3-scale").ScaleSymLog<any, number, never> & {
        type: "symlog";
    }) | (import("d3-scale").ScaleLogarithmic<any, number, never> & {
        type: "log";
    }) | undefined;
    yValues?: number | Y[] | undefined;
}) => JSX.Element)>;
//# sourceMappingURL=Grid.d.ts.map